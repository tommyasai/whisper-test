WEBVTT

00:00.000 --> 00:08.500
This week on The Change Law, we're talking about the recent falling out between Elastic and AWS around the re-licensing of Elasticsearch and Kibana.

00:08.500 --> 00:13.000
Like many in the community, we've been watching this very closely. Here's the TLDR for context.

00:13.000 --> 00:22.500
Last month, on January 21st, Elastic posted a blog post sharing their concerns with Amazon and AWS misleading and confusing the community saying,

00:22.500 --> 00:30.000
quote, they have been doing things that we think are just not okay since 2015, and it has only gotten worse, end quote.

00:30.000 --> 00:40.000
This led them to re-license Elasticsearch and Kibana with a dual license, a proprietary license, and the server side public license, also known as the SSPL.

00:40.000 --> 00:47.000
Of course, AWS responded two days later stating they are, quote, stepping up for a truly open source Elasticsearch, end quote,

00:47.000 --> 00:54.000
and shared their plans to create and maintain forks of Elasticsearch and Kibana based on the latest ALV2 license code bases.

00:54.000 --> 01:02.000
There is, of course, a ton of detail and nuance beneath the surface here, so we invited a bunch of folks on the show today to share their perspective.

01:02.000 --> 01:09.500
You'll hear from Adam Jacob, co-founder and board member of Chef, Heather Meeker, open source lawyer and the author of the SSPL license,

01:09.500 --> 01:20.500
Manish John, founder and CTO at D-Graph Labs, Paul Dix, co-founder and CTO at Influx Data, Vicky Bresor, open source and free software business strategist,

01:20.500 --> 01:25.500
and last but not least, Marcus Dinkvist, an everyday web developer from Sweden.

01:25.500 --> 01:33.000
Huge thanks to our partners, Linode, Fastly, and LaunchDarkly. Linode is our cloud of choice. Check them out at linode.com slash changelog.

01:33.000 --> 01:41.500
Our bandwidth is provided by Fastly. Check them out at Fastly.com and our feature flags are powered by LaunchDarkly. Learn more at LaunchDarkly.com.

01:47.000 --> 01:53.500
Linode is simple, affordable and accessible cloud computing the developers trust. Linode is our cloud of choice.

01:53.500 --> 02:01.000
We trust them and we think you should build anything you're working on, a fun side project or that next big infra move at work with Linode.

02:01.000 --> 02:10.500
The best part, you can get started on Linode with that $100 in free credit. Get all the details at linode.com slash changelog or text changelog to 474747

02:10.500 --> 02:34.500
and get instant access to that hundreds of free credit. Again, linode.com slash changelog. What's up? Welcome back. We have an awesome show today.

02:34.500 --> 02:43.500
We're here to get community reactions around the elastic versus AWS situation in the SSPL license change of Elasticsearch and Kibana.

02:43.500 --> 02:50.500
Elastic, re-licensed with the SSPL. And there's a few people on this show that believe they went about that license change the wrong way.

02:50.500 --> 02:55.000
But this is not the beginning of the story. This conversation has been going on for a while.

02:55.000 --> 03:01.000
In fact, Adam Jacob brought up the subject of elastic and AWS on episode 353 of this show.

03:01.000 --> 03:07.500
On that episode, we talked with Adam about the war for the soul of open source and the title of that episode could not have been more prophetic.

03:07.500 --> 03:13.500
To kick things off, we're going back to that conversation with Adam. For context, Adam is co-founder and board member of Chef.

03:13.500 --> 03:19.500
And we're talking about business models and how they correlate to open source business models and how from Adam's perspective,

03:19.500 --> 03:29.500
the AWS's, the Azure's and the Google Cloud's of the world, they provide a humongous marketing funnel for open source businesses like Mongo and Elastic.

03:29.500 --> 03:34.500
Here's the conversation with Adam. Let's talk about the business challenges commercial open source companies face.

03:34.500 --> 03:42.500
You said earlier in the call that things are thriving now and we see Elastic and others out there thriving as well that have been in similar situations as Chef.

03:42.500 --> 03:44.500
Talk about the business side of things for Chef.

03:44.500 --> 03:50.000
I mean, I think in order to really go deeper into business, we got to like just set some ground rules for like how we think about business.

03:50.000 --> 03:59.500
So like how I think about it and how I think a lot of people in the sort of modern era of software startups think about it is, you know, the smallest nutshell.

03:59.500 --> 04:06.000
You can imagine that you have this funnel, right? And at the top of the funnel is everybody who might could ever use your product, right?

04:06.000 --> 04:16.000
So every possible person who would ever care. So that's your target market. The bottom of the funnel is customers, people who pay you money for the privilege.

04:16.000 --> 04:20.000
And what you're trying to do is get people from the top of the funnel to the bottom of the funnel, right?

04:20.000 --> 04:27.000
It's just how many people at the top can I push to the bottom? And there's a ratio there where, you know, you want that number to be as high as possible.

04:27.000 --> 04:34.000
You'd love to get 100% of them. You know that you want, right? And so you're trying to just extract dollar bills from the top to the bottom.

04:34.000 --> 04:40.000
There's a bunch more we could go into in terms of like metrics and recurring revenue and all kinds of stuff.

04:40.000 --> 04:44.000
But sort of the TLDR there is people at the top, money at the bottom.

04:44.000 --> 04:53.000
So with open source, we talk about it as an open source business model, but that's wrong in the same way that like DevOps isn't a job title.

04:53.000 --> 05:02.000
So like you can't DevOps isn't a job title. Still isn't a job title. It never was a job title, but we lost the war, you know, like there's plenty of DevOps engineers in the world.

05:02.000 --> 05:06.000
And so the idea that that's not a thing, it doesn't matter that I'm a pedant about it, right?

05:06.000 --> 05:10.000
The same thing is true in open source business models. There is no open source business model.

05:10.000 --> 05:15.000
There are business models and then there is open source and they're two very different, very separate things.

05:15.000 --> 05:19.000
There is nothing unique about open source and business. Business is business.

05:19.000 --> 05:21.000
You get people from the top of the funnel to the bottom of the funnel.

05:21.000 --> 05:26.000
You either do that with a unit economics that make you money or don't make you money.

05:26.000 --> 05:33.000
If they make you money, then you can pour more dollar bills into the acquisition of people at the top of the funnel to get to the bottom.

05:33.000 --> 05:42.000
Even if that means you don't turn a net profit and still be a great business because as soon as you stop burning money to acquire more stuff at the top, but you make a lot of money at the bottom.

05:42.000 --> 05:46.000
Right. And so in open source, we talk about open source business models.

05:46.000 --> 05:52.000
What we really are talking about is how do I create a channel at the top of the funnel?

05:52.000 --> 05:56.000
So people come in in multiple different ways and we talk about those as channels.

05:56.000 --> 06:00.000
So one channel will be I'm an open source user of your software.

06:00.000 --> 06:04.000
I download MongoDB. I download Redis. I used it.

06:04.000 --> 06:08.000
Therefore, I'm in the open source channel to the bottom of the funnel. Right.

06:08.000 --> 06:11.000
Another channel would be my boss.

06:11.000 --> 06:18.000
The CIO heard about Redis and CIO magazine tells me you should use Redis. Right.

06:18.000 --> 06:22.000
Now I'm I'm in a very different channel than the open source channel. Right.

06:22.000 --> 06:30.000
I'm in an enterprise or like I get a or I get a cold email from a rep that says, have you heard about Redis Labs? Right.

06:30.000 --> 06:33.000
That's a different channel. Right. So we have all these different channels.

06:33.000 --> 06:42.000
There's a partner channel where like maybe the guy at Pivotal who was consulting on your cloud foundry deployment tells you that you should use Redis. That's a partner channel. Right.

06:42.000 --> 06:46.000
So like we have all these different channels that people come into our businesses through. Right.

06:46.000 --> 06:48.000
This is true of every business.

06:48.000 --> 06:55.000
Again, it's not unique to open source, but that open source channel is interesting because it's humongous. Right.

06:55.000 --> 07:01.000
If you're a successful open source project, that channel is full of people. Right.

07:01.000 --> 07:06.000
Because lots of people are using the software. That's why it's successful open source software.

07:06.000 --> 07:09.000
So it kind of dwarfs the others in pure numbers. Right.

07:09.000 --> 07:13.000
Just that the sheer magnitude of what's possible is really high.

07:13.000 --> 07:25.000
And so when we're designing and thinking about our businesses, what tends to happen is we think about the revenue that that channel produces as belonging to us. Right.

07:25.000 --> 07:30.000
If I'm the chef people, I look at that channel and I go, any chef user belongs to me.

07:30.000 --> 07:41.000
And if there's competition in that channel, I don't like it because it means somebody else can compete with me to monetize the people that are at the top of the funnel. Right.

07:41.000 --> 08:02.000
So a good example here is if I'm MongoDB and I sell Atlas, which is their hosted SaaS product for a MongoDB and Amazon and Microsoft are both going to offer a MongoDB as a service that competes with me to monetize the bottom of the MongoDB funnel.

08:02.000 --> 08:06.000
Right. I'm MongoDB make this investment at the top of the channel.

08:06.000 --> 08:18.000
I expect to return at the bottom. And now they're competing with me in the bottom. And this comes back to, you know, how do you feel about that competition is the question.

08:18.000 --> 08:25.000
Because in one point of view, you're like, well, competition sucks. Right. I'm the one who put all the money into building it.

08:25.000 --> 08:32.000
I'm the one who did all of this stuff. And so you look at this thing and you're like, I deserve the money at the bottom of this channel.

08:32.000 --> 08:44.000
Flip that over, though. The value of the channel is that it's massively huge, that it's adoption. It's the size of the number of users is why the open source channel is valuable in the first place.

08:44.000 --> 09:01.000
If Amazon or Microsoft creates services that sell what I sell, what's the impact at the top of the channel? Right. What's that do to cement MongoDB as an excellent choice for the for users at the top of the channel. Right.

09:01.000 --> 09:09.000
The answer is it jacks it up. Right. Like like Amazon has a chef service. They sell it for money. They do rev motion. Right.

09:09.000 --> 09:16.000
So they sell my what used to be my proprietary software, but now my distribution. You can buy it from Amazon as a service directly from Amazon.

09:16.000 --> 09:25.000
We do rev sharing together. Amazon runs and maintains that service. I promise you that my channel got bigger. I open source channel got bigger when they did that.

09:25.000 --> 09:32.000
Right. The fact that that button exists meant more people were willing to use chef than they were before. Right. The pie got bigger.

09:32.000 --> 09:44.000
So what's happening when the redis and the mongos of the world look at that problem is they decide that the top of the funnel doesn't get bigger or that they don't care about it getting bigger.

09:44.000 --> 09:49.000
And instead they care about the extraction at the bottom of the funnel. Right. So they're nervous about it.

09:49.000 --> 10:00.000
They're like, oh, Amazon will out compete me. They'll sell it for less. They'll bet bearing better features. But this to my point of view is completely bonkers. Right.

10:00.000 --> 10:07.000
Amazon's never going to invest more in MongoDB than MongoDB. It's insane on its face. Right.

10:07.000 --> 10:18.000
And the idea that that competition exists and it limits their ability to monetize is also also to me feels false. A good example is elastic.

10:18.000 --> 10:28.000
Amazon's had an elastic service running for as long as elastic has been monetizable, basically. And elastic went public that whole time with Amazon as a competitor.

10:28.000 --> 10:36.000
But you know what? I've ran elastic search. I use it as a component in my product. One of the reasons is that it was a dominant standard.

10:36.000 --> 10:46.000
How did I know? Well, everybody offered elastic as a service. Right. It was the de facto thing. So that choice was easy. So I wound up in your channel.

10:46.000 --> 10:56.000
So from a business point of view, they're making these decisions because they believe that that's what's best for the extraction of capital, of revenue at the bottom of the channel.

10:56.000 --> 11:05.000
And they're doing it at the expense of the spread at the top of the channel. In your case, you got a rev share with Amazon. Is that the case with Mongo or with Redis?

11:05.000 --> 11:11.000
Or was that unique to Chef? And would that change your outlook at all if that rev share was gone? It's not the same. I don't know.

11:11.000 --> 11:26.000
I certainly am not privy to whatever negotiations they may have had. Right. I know the ones I had. You know, one of the things that Amazon or any partner, anybody who's going to run your code as a service needs is the assurance that they'll always be able to provide that service to their customers.

11:26.000 --> 11:36.000
Right. And you know what's hard to do that with? Proprietary software. Because I have no, my only hedge is the business arrangement. Do you see what I mean?

11:36.000 --> 11:46.000
Like, I can sign a contract that says so. But if I change the terms on my proprietary software, or I build a new SKU, well, can I still run that thing as a service? Have we bifurcated it? Like, what's the deal?

11:46.000 --> 11:56.000
So the mechanism there is really complicated. So one of the reasons that that rev share exists is because so much of those assurances about what's in the open was in the open, right? Even more so now.

11:56.000 --> 12:06.000
That doesn't mean that that's always what Amazon will do, or even what they should. But that's how it worked for us. If it didn't exist, it wouldn't really change my point of view.

12:06.000 --> 12:21.000
Because if the question is, can I as the primary producer of the product, and owner of the brand, and the reason that people attach to those things, outcompete someone who is essentially selling a generic version of what I sell.

12:21.000 --> 12:33.000
If I can't outcompete that person, shame on me. Like, you really can't convince me, you really can't convince a customer that the best person to service their MongoDB is MongoDB.

12:33.000 --> 12:46.000
Because man, if you can't, like, there's something fundamentally broken in the value proposition here, right? And I think the truth is that they can. If you look at Mongo's performance, if you look at Atlas's sales numbers, it continues to go up.

12:46.000 --> 12:59.000
It was going up before they changed the license, right? And the reason is, it's a good product. And it's a better product than the one that you receive if you just turn on DocumentDB on Azure.

12:59.000 --> 13:06.000
Because it's kind of bare bones when you turn it on in Azure, right? And the Atlas version has all kinds of stuff that the other one doesn't have.

13:06.000 --> 13:17.000
The idea that that competition in open source, where the reason you're here is because you have this massive channel, it doesn't make much business sense to me that that's the conclusion we would come to.

13:17.000 --> 13:20.000
I understand how you get there, but it doesn't make much sense.

13:20.000 --> 13:36.000
Isn't our disruptive products, though, not necessarily better? They're usually actually worse, but they're good enough. And the cost is disruptive. And so in the case of an AWS version of Mongo, yeah, it's not going to be as good, or as maybe well supported, or have as many features as Mongo's version of Mongo.

13:36.000 --> 13:50.000
But it's satisfactory. And it's way cheaper. So it's disruptively cheap. And then you add to the fact that there's no, there's no R&D, there's no development costs from Amazon's side. So you're not competing with them on features.

13:50.000 --> 13:53.000
They're just free writing all the features that you're building.

13:53.000 --> 14:06.000
Well, but here's the thing. So this is where we come back to the funnel. Right? So like, now we're back to the business. So like, sure, maybe Amazon, but this is why it's good business for Amazon to launch your stuff as a service instead of just compete with you directly.

14:06.000 --> 14:21.000
So like, you brilliantly elucidated why they would want to launch a Mongo service in the first place, right? But as soon as they do that, if the top of the funnel was fixed, if that if that created no more interest in your product than it did before, then you'd be right.

14:21.000 --> 14:33.000
But it doesn't. Instead, it turns out that the single largest pool of software developers on the planet are the ones that use Amazon and AWS, or Azure, or Google, how many of those developers using one of those platforms.

14:33.000 --> 14:43.000
And if your stuff is on all three of those platforms, and it's not on the others, how many eyeballs do you get that cockroach doesn't? The answer is a ton of eyeballs. So many eyeballs.

14:43.000 --> 15:02.000
And so the size of that funnel, your possible monetization gets bigger, hugely bigger than than it was before. And in that moment, your ability to capture that revenue, every single one of those cut rate document DB users is a potential lead that's already using your product.

15:02.000 --> 15:14.000
So all you have to do is go find them and be like, yo, did you see how much better our console is how much better our operation stuff is how you can get on a zoom with a dude that wrote that indexing feature when it's broken.

15:14.000 --> 15:20.000
I dare you to get that out of Amazon. And next thing you know, Citibank is like, you know, Atlas looks pretty good.

15:20.000 --> 15:35.000
I think those kinds of ideas, those sometimes are so seem so logical, but yet not everybody thinks like that, you know, so I think this is a great idea of how can you leverage the fact that these platforms are so massive that they actually become your marketing channel for you.

15:35.000 --> 15:50.000
They are your marketing channel for you. And and the only the only thing you have to give up is that they're also going to monetize some number of your customers back to open sources punk rockness, right? Like, there's a there's a like, that's the man vibe.

15:50.000 --> 16:05.000
Where like, when you're saying that Amazon's in that positive for your business, everybody's like, but they're the man. And Amazon's going to destroy elastic search. And you're like, dude, elastic search is a worth $1.5 billion with a B.

16:05.000 --> 16:25.000
And they're getting like that commercial where the guy's like, sir, you are the man. Yeah. Who exactly are we protecting here? Because last time I checked, they were public and killing it.

16:25.000 --> 16:39.000
Next up is Heather Meeker. Heather is a well respected open source lawyer and a specialist in open source software licensing and strategy. She wrote the book open source for business, and it serves as a guide to open source software licensing.

16:39.000 --> 16:52.000
We're talking to Heather because she's a lawyer who wrote the license. The SSPL license is a result of her work with MongoDB. And we wanted to understand the design and the intention of the license. All right, here we go with Heather.

16:52.000 --> 16:58.000
Heather, let's open up with the SSPL you or the person behind writing it. Is that correct?

16:58.000 --> 17:13.000
Yes, I helped MongoDB draft the license with, of course, the help of Mongo legal counsel and their business team. I think it's fair to say that I led the drafting of it.

17:13.000 --> 17:18.000
Gotcha. And full title of it is the service side public license. Yes, that's right.

17:18.000 --> 17:24.000
Take us back to, I suppose, the early days of drafting it. What's it intended to do? What's the goal of this license?

17:24.000 --> 17:39.000
SSPL was drafted in order to meet a need in a particular way. So I'll explain what I mean by that. At the time, and this would have been late 2018 to early 2019.

17:39.000 --> 17:50.000
Many companies that were providing software under open source licenses were very concerned about the use of the software by cloud services providers.

17:50.000 --> 18:03.000
And what they were concerned about was that the cloud service providers were using the software, not contributing back and not participating in the development of the software.

18:03.000 --> 18:16.000
So at that time, there were actually quite a few companies. And most of these, by the way, were companies in what I would call the platform software space or middleware software space.

18:16.000 --> 18:29.000
And they were trying to figure out what to do about that. They basically went down two different routes. The first route was the source available route in what we call an open core business model.

18:29.000 --> 18:45.000
That's not what SSPL is. But that's where you have a core of open source software, usually under, say, Apache. And then you reserve some of the upsell elements for under proprietary or source available licenses.

18:45.000 --> 18:56.000
That's the route that most companies went down. Mongo, on the other hand, wanted to see if they could create a license that was an open source license, but that managed this issue.

18:56.000 --> 19:07.000
And that's how the SSPL came about. So they drafted the license, submitted it to open source initiative for approval as an open source license.

19:07.000 --> 19:19.000
And eventually, it was withdrawn after quite a bit of comment without a particular ruling from OSI on whether it was appropriate for approval as an open source license.

19:19.000 --> 19:32.000
What happened in that proceeding? What were the deciding factors? I guess they didn't reject it, but it was just being debated to a certain degree and then withdrawn eventually.

19:32.000 --> 19:38.000
I assume it was withdrawn because it was not going anywhere, or was there a different reason for withdrawing it?

19:38.000 --> 19:59.000
It was a long and fraught debate, and the debate had to do with a number of concerns. I would encourage anybody who's interested to go and read the archives of what's called license review or license discuss.

19:59.000 --> 20:06.000
But I'll try to summarize, understanding that there were a lot of comments, and I can't summarize them all.

20:06.000 --> 20:15.000
The first was technical commentary about whether the license met the open source definition.

20:15.000 --> 20:21.000
So there is a definition of open source. There's also a free software definition.

20:21.000 --> 20:33.000
One of the main tenets of that definition is that the license can't have any license restrictions, so that would be source available if you say you can't use the software for this purpose.

20:33.000 --> 20:42.000
It also says that it can't discriminate against users or technology contexts and so forth. I'm paraphrasing, of course.

20:42.000 --> 21:01.000
So there were those aspects, and there were some comments about that aspect of the license. There were also a lot of comments about who had drafted it, the process by which it was drafted, and what Mongo's intent was in creating the license.

21:01.000 --> 21:10.000
So those were like meta comments, not about the license itself, but about the context. And so all of those things were being discussed.

21:10.000 --> 21:21.000
And if you've ever been on one of these discussion groups, you know that they get discussed in a non-sequential format, and it can be very confusing to follow.

21:21.000 --> 21:24.000
But I'd say those were the main themes.

21:24.000 --> 21:40.000
Okay. And so do you think that – I mean, I don't know if bias is – as the author of the SSPL, do you believe that the SSPL represents, I guess, even the spirit of open source if it's not officially an open source license, or do you think it's something different?

21:40.000 --> 21:45.000
Well, we drafted it to fit the open source definition.

21:45.000 --> 22:05.000
And as a lawyer, you know, you have to have concrete things to go on, and the open source definition is what we had. I think the discussion brought out that people felt that there was something beyond meeting the open source definition that needed to be satisfied, and there was a great deal of debate about that.

22:05.000 --> 22:20.000
So we looked at the open source definition. We definitely, you know, avoided license restrictions. We avoided things that were discriminatory according to the requirements of the OSD.

22:20.000 --> 22:28.000
But all of the meta issues were things that really kind of couldn't be addressed by the draft itself.

22:28.000 --> 22:40.000
There is some discrimination built in, though, right? Or how does it actually – how does it work in order to stop that particular problem that they're – was trying to be addressed?

22:40.000 --> 22:47.000
Isn't that discriminated into use? I know we get into legalese here, but you're good at this, so help me understand.

22:47.000 --> 22:56.000
I would say not discriminatory, because in a way, all copyleft licenses apply different conditions when you do different things.

22:56.000 --> 23:08.000
So if you use discriminatory in that way, then GPL2 is discriminatory because it only applies certain conditions to redistributors.

23:08.000 --> 23:12.000
So that is actually fair game in copyleft licensing.

23:12.000 --> 23:26.000
Okay. SSPL applied specific conditions to use of the software – I'm paraphrasing now, but as a software – software as a service to provide the same functionality of the software.

23:26.000 --> 23:33.000
And so, yes, there were conditions that were imposed in those situations that weren't imposed otherwise.

23:33.000 --> 23:47.000
But that, I think, for most people, isn't the meaning of discriminatory according to the OSD. Discriminatory would be more like you can only use this in a particular field of use.

23:47.000 --> 23:54.000
You can use it in medical devices, but you can't use it in nuclear weapons or something like that.

23:54.000 --> 23:57.000
You can use it for good, but not for evil.

23:57.000 --> 24:09.000
Well, it's interesting that you say that because there is now a new licensing movement, I guess, called the Ethical Licensing Movement,

24:09.000 --> 24:15.000
that actually does impose conditions based on ethical concerns and moral concerns.

24:15.000 --> 24:24.000
And those are clearly not open source licenses because they actually do impose license restrictions.

24:24.000 --> 24:28.000
In other words, you can't use the software for this particular purpose.

24:28.000 --> 24:38.000
I heard about this, too, where I believe it was in China there was a specific license about companies that didn't adhere to work ethics where I think it was like a 999 or something like that.

24:38.000 --> 24:46.000
The anti-996 license. That was actually very interesting if you'll permit me to make a comment about it.

24:46.000 --> 24:56.000
It was, first of all, a very well drafted license. So it was professionally done. It did address labor conditions.

24:56.000 --> 25:05.000
And again, I'm paraphrasing, but the license says you can't use this software if you are violating the international labor standards.

25:05.000 --> 25:12.000
And it was intended to raise consciousness about labor practices in China.

25:12.000 --> 25:18.000
But what was really interesting about that is that the license was released on GitHub.

25:18.000 --> 25:32.000
And by the way, I think it may have been more a thought experiment than anything else, but it then caused that GitHub repository to become a vehicle for people to discuss the issue.

25:32.000 --> 25:45.000
So it became almost like a social networking initiative to raise consciousness about the issue rather than specifically to develop a license document.

25:45.000 --> 26:05.000
So I thought that was a very interesting phenomenon from the point of view of what happened around putting the license in GitHub and around the development of the license.

26:05.000 --> 26:16.000
This episode is brought to you by our friends at Retool. Retool helps you build internal tools fast and easy. From startups to Fortune 500s, the world's best teams use Retool to power their internal apps.

26:16.000 --> 26:25.000
Assemble your app in just a few minutes by dragging and dropping from pre-built components. Connect to most databases or anything with the rest, GraphQL or gRPC API.

26:25.000 --> 26:33.000
Retool empowers you to work with all your data sources seamlessly in one single app. Retool is highly hackable, so you're never limited by what's available out of the box.

26:33.000 --> 26:40.000
If you can read it in JavaScript and an API, you can build it in Retool. You can use their cloud service or host it on-prem for yourself.

26:40.000 --> 26:59.000
Learn more and trap free at retool.com slash changelog. Again, retool.com slash changelog.

26:59.000 --> 27:17.000
It's interesting how, you know, there's so many usages of licenses and you mentioned the OSI approval process and how it was contextual in terms of their Mongo's intent of the license change and the intent of the SSPO license in general.

27:17.000 --> 27:30.000
And you also mentioned, you know, the OSD and its criteria in your blog post on the cost community. You mentioned how many of the legacy license in the OSI approved long ago would probably not be approved today.

27:30.000 --> 27:37.000
And then you'd mentioned that the criteria for the approval has changed, but the OSD has not.

27:37.000 --> 27:42.000
So it seems like there's like a lot of moving targets in terms of getting approved by the OSI.

27:42.000 --> 27:48.000
And Jared mentioned, like, you know, in terms of this isn't an OSI approved license, do you feel it is open source?

27:48.000 --> 27:53.000
It's kind of an interesting perspective, just the fact that there's this OSD that's been drafted.

27:53.000 --> 27:56.000
I think the last time it changed was 2007 if I recall correctly.

27:56.000 --> 27:59.000
It was a long time ago.

27:59.000 --> 28:08.000
It basically, you know, hasn't changed in the time that I can remember looking at it.

28:08.000 --> 28:20.000
But I think what's interesting about that is that what OSI is is doing is trying to create community consensus and isn't wedded to this written definition.

28:20.000 --> 28:30.000
By the way, I don't I say that because that's what they say it's approval of a license does not merely require it to meet the open source definition.

28:30.000 --> 28:38.000
So it does raise an interesting question about the clarity of the criteria and the process.

28:38.000 --> 28:40.000
But, you know, this is a community process.

28:40.000 --> 28:47.000
So those are always they are living, breathing things and they get developed as they go.

28:47.000 --> 28:53.000
And people are always pushing for transparency, but it can never be perfect.

28:53.000 --> 28:58.000
The fact that this OSD document hasn't changed in a while, though, is that a good thing or a bad thing?

28:58.000 --> 29:06.000
Because you might say it's a bad thing because it doesn't reflect the way that modern software is developed and deployed into consumers hands.

29:06.000 --> 29:09.000
And then you might say it's a good thing because it's so strong it doesn't need to change.

29:09.000 --> 29:13.000
The definition is so strong that, you know, it doesn't have to change.

29:13.000 --> 29:18.000
What do you think about whether it's the fact that hasn't changed in so long, that's a good thing or a bad thing?

29:18.000 --> 29:21.000
Well, I actually agree with you.

29:21.000 --> 29:23.000
It's kind of a good thing and a bad thing.

29:23.000 --> 29:30.000
It has worked pretty well over the years and it's been remarkably robust over the years.

29:30.000 --> 29:38.000
Maybe it's time to revisit it, but that would also be a very long process and possibly very controversial.

29:38.000 --> 29:45.000
There are other definitions, by the way, there is the free software definition and I and there's a Debian soft.

29:45.000 --> 29:47.000
I think it's called the software contract.

29:47.000 --> 29:49.000
Sorry if I'm getting that wrong.

29:49.000 --> 29:53.000
But those are much shorter and less complicated.

29:53.000 --> 30:03.000
So I think if it were revised, it might there might be some interesting possibilities to harmonize those definitions.

30:03.000 --> 30:08.000
I would say that whether the definition changes or not is one question.

30:08.000 --> 30:15.000
I do think that the transparency of the criteria for approval is very important to the community.

30:15.000 --> 30:18.000
What's at stake for these companies and organizations?

30:18.000 --> 30:23.000
Maybe they pick SSPL, whether or not it's an improved license or not.

30:23.000 --> 30:26.000
What do they win or lose based on that?

30:26.000 --> 30:28.000
Is it marketing value of the term?

30:28.000 --> 30:29.000
Is it goodwill?

30:29.000 --> 30:31.000
What's at stake?

30:31.000 --> 30:40.000
SSPL is used as part of a dual licensing model and that is something that has been around for a long time,

30:40.000 --> 30:44.000
but it's not as popular as it once was.

30:44.000 --> 30:49.000
So it was really pioneered by MySQL and so what they did was they said,

30:49.000 --> 30:50.000
here's our software.

30:50.000 --> 30:51.000
It's under GPL.

30:51.000 --> 30:59.000
Actually, they used a variant of GPL and if you don't want to abide by the GPL requirements,

30:59.000 --> 31:07.000
you can negotiate with us for a commercial license and that's a process that's sometimes called selling exceptions.

31:07.000 --> 31:19.000
So the strong copylift licenses like GPL and then later AGPL and then finally SSPL were all used in other contexts as well,

31:19.000 --> 31:23.000
but as part of these dual licensing initiatives.

31:23.000 --> 31:32.000
The reason that companies adopted them in a dual licensing strategy is that they were intending that people who are using the software

31:32.000 --> 31:36.000
commercially would probably have to come negotiate for a license.

31:36.000 --> 31:40.000
And what happened over time was that the MySQL model,

31:40.000 --> 31:42.000
which worked pretty well,

31:42.000 --> 31:52.000
began to break when software moved up to the cloud because the requirements of GPL only kicked in on redistribution

31:52.000 --> 31:56.000
and that wasn't happening anymore because of cloud deployment.

31:56.000 --> 32:07.000
So then companies that were doing dual licensing models moved to AGPL when it was released in I think that was 2007

32:07.000 --> 32:14.000
and SSPL is I think a kind of a logical extension from that.

32:14.000 --> 32:15.000
So that's what they're trying to do.

32:15.000 --> 32:26.000
They're trying to allow people to use the software for certain you know in a say to test it out,

32:26.000 --> 32:31.000
to use it on a small scale, to use it to do certain things,

32:31.000 --> 32:40.000
but to require people to come to the table when they want to do things at scale or certain kind of commercial activities.

32:40.000 --> 32:44.000
Because a cloud provider is a user essentially, right? I mean at that point.

32:44.000 --> 32:51.000
Yes, that's actually very perceptive comment. They are users, they're not distributors of software.

32:51.000 --> 32:57.000
It's a little bit of a complicated question, but I don't think there's too much doubt about that.

32:57.000 --> 33:09.000
So what that means, if you look at the GPL, say, it specifically says that the license doesn't control the use of software.

33:09.000 --> 33:17.000
And so that is where the issue comes to play because the cloud providers are users.

33:17.000 --> 33:25.000
And so under, say, GPL, they don't have any, you know, basically don't have any conditions at all.

33:25.000 --> 33:31.000
Right. And it's kind of odd to say, I mean, sure, they're not distributing it out to, you know, individual installations,

33:31.000 --> 33:36.000
but they are providing it to many. So it's still one to many. It's still many scenarios.

33:36.000 --> 33:43.000
And that seems to be where the issue is, the language of the future of software, the way it is, is not so much,

33:43.000 --> 33:45.000
especially in cloud, is not a distributed model.

33:45.000 --> 33:46.000
That's right.

33:46.000 --> 33:48.000
It's a single installation that means a distribution of change.

33:48.000 --> 33:53.000
You're no longer sending a binary or source code to be compiled by a bunch of people.

33:53.000 --> 33:59.000
You're setting up a service and then charging for the service. It's just, it's a new way of doing it, newer.

33:59.000 --> 34:05.000
Yeah. And, you know, copyright law treats use and distribution a little bit differently.

34:05.000 --> 34:10.000
I think that one of the things that maybe it didn't anticipate properly was use,

34:10.000 --> 34:18.000
was copying at scale in order to deploy software for hundreds or thousands of users.

34:18.000 --> 34:22.000
That is something that is, you know, relatively new.

34:22.000 --> 34:30.000
So as software licensing has progressed, you know, certain things worked pretty well when we were in a model

34:30.000 --> 34:36.000
where one person would use one copy of the software, but that isn't the world we live in anymore.

34:36.000 --> 34:46.000
So when it comes to the letter of the SSPL as reactions to Mongo initially and now elastic re-licensing now,

34:46.000 --> 34:52.000
there have been critics, there have been, and this is a debated thing about the topic, is it open source?

34:52.000 --> 34:56.000
Is it fopen source, which I think is a terrible term.

34:56.000 --> 35:01.000
I can't believe I just hopped on the bandwagon and used it, but this is the verbiage that's out there.

35:01.000 --> 35:05.000
There are those who think it's a business risk, this SSPL.

35:05.000 --> 35:10.000
So now I'm reading from Vicky Bresuer's blog. You probably have read this.

35:10.000 --> 35:14.000
And she says, she showed it to some IP lawyers and she says,

35:14.000 --> 35:20.000
by using an SSLP project in your code, you are agreeing that if you provide an online service using that code,

35:20.000 --> 35:27.000
then you will release not only that code, but also the code for every supporting piece of software all under the SSPL.

35:27.000 --> 35:33.000
It's not a stretch to interpret the wording of the license as requiring users of the SSPL software,

35:33.000 --> 35:38.000
therefore to release the code for everything straight down to the bare metal.

35:38.000 --> 35:45.000
This is one interpretation of the license itself, saying effectively that there's perhaps this collateral damage

35:45.000 --> 35:48.000
that might happen because of the way that it's written.

35:48.000 --> 35:51.000
I would just love to hear as the author of it, and I'm sure you've thought through these things.

35:51.000 --> 35:54.000
How do you respond to that? What do you think about that statement?

35:54.000 --> 35:58.000
Is it feasible? Is it outlandish?

35:58.000 --> 36:04.000
Well, I do think it's an oversimplification of the terms of the license.

36:04.000 --> 36:11.000
And don't get me wrong, these kinds of provisions are very complicated to read.

36:11.000 --> 36:15.000
So it's hard to reduce them to sound bites.

36:15.000 --> 36:23.000
I do think on the question of business risk, this is the way I look at it.

36:23.000 --> 36:30.000
I work with many, many companies to develop open source compliance policies.

36:30.000 --> 36:38.000
And so what companies do when they develop those policies is they have like a stop-go caution list.

36:38.000 --> 36:44.000
And you would not expect even a GPL to be on a go list.

36:44.000 --> 36:47.000
In fact, it's usually on a stop list already.

36:47.000 --> 36:50.000
And SSPL will be there, too.

36:50.000 --> 37:00.000
Any network copy left license, meaning any license that has source code sharing requirements when you deploy within over a network,

37:00.000 --> 37:03.000
those will all be on a stop list.

37:03.000 --> 37:15.000
So when you say it's a business risk, well, yeah, but already a lot of the copy left licenses were defined as business risks.

37:15.000 --> 37:22.000
You know, this isn't blindsiding you, this concern.

37:22.000 --> 37:25.000
It's known from the out start.

37:25.000 --> 37:33.000
Of course, I mean, you would not expect people to greenlight SSPL software.

37:33.000 --> 37:40.000
What they would do is they would look at the license and say, okay, this is okay with us or it's not.

37:40.000 --> 37:42.000
And then they would make a decision about it.

37:42.000 --> 37:48.000
So that's something that users have to decide for themselves.

37:48.000 --> 37:58.000
I do think that what you quoted was overstating the risk somewhat, but it's not useful to get into the details of it.

37:58.000 --> 38:12.000
You have to actually look at what the license requires, and it really is focused on particular use contexts where people are providing software as a service.

38:12.000 --> 38:20.000
I can't thank you to Vicky for writing this post because I'm going to quote one more and ask you about this, but very, very helpful, Vicky, in doing this call with Heather.

38:20.000 --> 38:29.000
She said, basically, in regards to the SSPL, basically, it's a hostile proprietary license masquerading in open source clothing.

38:29.000 --> 38:31.000
Now it's getting vicious.

38:31.000 --> 38:34.000
I don't know what to say about that.

38:34.000 --> 38:37.000
Whether it's proprietary, proprietary is not open source.

38:37.000 --> 38:40.000
So, you know, it's really the same issue.

38:40.000 --> 38:51.000
I actually think if you look at the FAQs and announcements and so forth for Mongo and Elastic, you know, they're pretty forthcoming.

38:51.000 --> 38:58.000
So I'm not sure what is being masqueraded there.

38:58.000 --> 39:13.000
So I think that's, you know, it's language intended to incite an argument, but I don't know that it's terribly meaningful in an objective way.

39:13.000 --> 39:14.000
Yeah.

39:14.000 --> 39:31.000
So the primary concern with the SSPL really is Section 13, right? That's the – like a lot of the concern isn't really elsewhere in it.

39:31.000 --> 39:37.000
Obviously, it's a long license, but it's primarily Section 13, which describes, which we talked about here, which is redistribution, restrictions on usage, et cetera.

39:37.000 --> 39:38.000
Yeah.

39:38.000 --> 39:43.000
If you were to redline it against AGPL or even GPL3, you would find that almost all the substantive changes are in Section 13.

39:43.000 --> 39:50.000
Thank you so much for joining us and explaining these things in ways that we could only fumble around in the dark to understand.

39:50.000 --> 39:52.000
I think it's been very helpful.

39:52.000 --> 40:01.000
And anything else that we didn't ask you or anything about the license itself or about the situation that is being discussed and debated that you want to say that we haven't asked you about?

40:01.000 --> 40:09.000
Well, I would say that I would remind people that the alternative is probably to go to a source available license.

40:09.000 --> 40:23.000
So if people are calling it names and so forth, what they should consider is that businesses are going to do what their business strategy requires.

40:23.000 --> 40:34.000
And so most companies that don't adopt something like SSPL are going to go down the source available route, which is definitely not open source.

40:34.000 --> 40:39.000
So it's a question of whether you think half a loaf is better than none, I think.

40:39.000 --> 40:43.000
And there are definitely differing views about that.

40:43.000 --> 40:55.000
I would say the reality is that most companies are actually going to use licenses that are truly restrictive in a way rather than SSPL.

40:55.000 --> 41:15.000
So I would say anybody who is using SSPL is at least trying to go down something like an open source route, even if you don't believe it's open source.

41:15.000 --> 41:26.000
Up next, we're talking with Manish John, founder and CTO at Dgraph Labs. Manish came on this podcast a little over two years ago on episode 322 talking about licensing and re-licensing Dgraph.

41:26.000 --> 41:29.000
So we thought it'd be fitting to get him on this episode as well. Here we go.

41:29.000 --> 41:33.000
So Manish, you and Dgraph are in a somewhat similar situation to Elastic.

41:33.000 --> 41:37.000
You're not Elastic, but you're set up a lot like Elastic is set up. Is that right?

41:37.000 --> 41:52.000
That's true. So Elastic's licensing, the way they have done it is that they had their open source code co-located with their proprietary code, and it's all source visible except the open source is under Apache, if I'm not wrong.

41:52.000 --> 41:55.000
And then the proprietary code is under Elastic.

41:55.000 --> 42:03.000
And similar to Dgraph where our open source code is Apache and our proprietary code is under Dgraph license.

42:03.000 --> 42:08.000
So as a meta note, where did you hear about this news and did you read both sides?

42:08.000 --> 42:12.000
Have you read what AWS has had to say and what's happened after the re-license?

42:12.000 --> 42:13.000
What's your purview?

42:13.000 --> 42:20.000
I mean, I think I've been hacker news, right? Hacker news went into flames over this, and so that's where I came to know.

42:20.000 --> 42:21.000
I don't know.

42:21.000 --> 42:32.000
Actually, I did not have a chance to look at what AWS actually had to say about that, but I read through the multiple blog posts that Elastic sort of released about what they are changing.

42:32.000 --> 42:35.000
And some of the reasonings for why they're changing.

42:35.000 --> 42:38.000
And this is a story that it's not the first time, right?

42:38.000 --> 42:42.000
It's the same story that we already had for CockroachDB.

42:42.000 --> 42:44.000
We had the story for MongoDB.

42:44.000 --> 42:52.000
We have this across Confluent and Redis Labs.

42:52.000 --> 42:58.000
This is just a series of changes that are happening in the entire open source ecosystem.

42:58.000 --> 43:08.000
And you guys went through similar things as well, because we even have a whole show for you back in October of 2018, where we have you on the changelog there and back again, Dgraph's Tale.

43:08.000 --> 43:11.000
An excellent name if you're a fan of The Hobbit.

43:11.000 --> 43:12.000
I do.

43:12.000 --> 43:13.000
Yeah, like I am.

43:13.000 --> 43:14.000
Episode 322.

43:14.000 --> 43:22.000
So you've told us this story before, but I guess we don't need to rehash the entire thing, but this has been an area of struggle for you and your company as well.

43:22.000 --> 43:33.000
It is something of, you know, I wouldn't say it's such a big struggle as something like Elastic where Amazon is directly sort of like, you know, quote unquote attacking them, right?

43:33.000 --> 43:41.000
For us, it's more of like a forward thinking scenario where we realize that we love open source.

43:41.000 --> 43:51.000
And just like Shay mentioned, the founder of Elastic mentioned in his blog post, you know, I got my feet dabbed into open source like long time ago and really believe in it.

43:51.000 --> 43:57.000
And when I was starting Dgraph, I was not inspired by any sort of business motives, right?

43:57.000 --> 44:02.000
Like I was not planning out, hey, how would like five years from now we will make money?

44:02.000 --> 44:04.000
I didn't know how to make money from open source.

44:04.000 --> 44:06.000
I just wanted to build open source software, right?

44:06.000 --> 44:08.000
And that's how we got started.

44:08.000 --> 44:15.000
So similar sort of like trajectory there in terms of like our interest towards the open source community.

44:15.000 --> 44:24.000
And so, you know, I mean, yeah, I think the open source team is similar there.

44:24.000 --> 44:37.000
So what's happened since is that AWS has forked both Elasticsearch and Kibana and are going to carry on open source forks, community forks as they're kind of being pitched as.

44:37.000 --> 44:38.000
What do you think about that?

44:38.000 --> 44:40.000
What are they going to succeed?

44:40.000 --> 44:41.000
Are they going to fail there?

44:41.000 --> 44:44.000
Is it a real risk for Elastic or no?

44:44.000 --> 44:49.000
They did that once before, right, with the Elastic open distro.

44:49.000 --> 44:52.000
And I think people were really concerned about how they would pan out.

44:52.000 --> 44:56.000
And remind me, Elastic's share price has not decreased too much, right?

44:56.000 --> 44:58.000
It hasn't gone into a spiral downwards.

44:58.000 --> 45:00.000
So I guess they're doing well, right?

45:00.000 --> 45:04.000
They'll probably survive another attack from AWS.

45:04.000 --> 45:21.000
But I think, you know, some of the criticism that I see online about MongoDB, SSPL and other companies is that, you know, these open source companies are motivated by business and therefore they are somehow being moralistic.

45:21.000 --> 45:25.000
Like, morally, they are being challenged.

45:25.000 --> 45:40.000
But I feel like, you know, the same people then turn around and say Amazon is completely okay with doing these kind of things because they're well within their rights to do so because of the licensing put together by the open source.

45:40.000 --> 45:44.000
And so the conflict that I feel is right there, right?

45:44.000 --> 45:47.000
You cannot have two different moral bars.

45:47.000 --> 45:58.000
One for the company who is making money out of your inventions and the second for the inventor themselves, right?

45:58.000 --> 46:09.000
And sometimes I just wonder, right, how many open source infrastructure software has Amazon created and launched in open source, right?

46:09.000 --> 46:18.000
Like, when do we expect to see DynamoDB coming out in open source so someone else can build a business like Amazon has done with DynamoDB?

46:18.000 --> 46:19.000
That would be great, right?

46:19.000 --> 46:21.000
I mean, that'd be a great day for open source if Amazon does that.

46:21.000 --> 46:25.000
But I don't think they have any plan to do it because that's not how they operate.

46:25.000 --> 46:37.000
And so, you know, it's well within—I think it's, in fact, I would say it's recommended for open source companies to make sure that they are able to build a successful business just like Amazon is building,

46:37.000 --> 46:39.000
just like everybody else is building.

46:39.000 --> 46:50.000
And so the motivation to make money out of your inventions is completely justified on, I would say, moral grounds, right?

46:50.000 --> 47:03.000
Well, there's a concern, too, at least based upon Shay's blog post on Elastic saying that Amazon and AWS wasn't putting back into the open source bucket, so to speak.

47:03.000 --> 47:12.000
So from two avenues, one, the perspective you just shared, which is DynamoDB, for example, is an open source, and that's not part of their business plan to do that.

47:12.000 --> 47:23.000
But then the concern, and I suppose what led to this scenario we're in now is essentially AWS not playing by the community rules.

47:23.000 --> 47:25.000
The license doesn't depict this, and that's kind of what this move is doing.

47:25.000 --> 47:33.000
It's like, hey, if you can't operate by community rules, then we're going to put a license out that makes it illegal for you to do things another way.

47:33.000 --> 47:35.000
So not pitching back into the open source thing.

47:35.000 --> 47:48.000
But then you can sort of draw some sentiment from just simply the titles of their blog post on the AWS open source blog back in 2019 from Adrian Croft, Cockroft,

47:48.000 --> 47:55.000
keeping open source open, open distro for Elasticsearch, which is something you mentioned, and then the second one is the more recent around Elasticsearch,

47:55.000 --> 47:59.000
which is stepping up for a truly open source Elasticsearch.

47:59.000 --> 48:05.000
It's an interesting perspective you've drawn there where they haven't open sourced certain things they have because of business reasons,

48:05.000 --> 48:12.000
but then wanting to be a good community player in these ways, it seems, I don't know, what do you think?

48:12.000 --> 48:14.000
It is questionable, isn't it?

48:14.000 --> 48:15.000
It is kind of questionable.

48:15.000 --> 48:24.000
And I think, like, you know, if you look at SSPL, the server side public license, I think, from MongoDB, it's actually really,

48:24.000 --> 48:33.000
actually, I'm still a bit baffled that it's not approved by OSI because it, to me, is a fork of derivative of GPL, just like AGPL is,

48:33.000 --> 48:36.000
which also makes GPL a bit more permissive, right?

48:36.000 --> 48:45.000
If you look at AGPL, it's, you know, allows you to not have to release your source code if you are using it over the network or something of that sort,

48:45.000 --> 48:48.000
or actually, I forget exactly the details there.

48:48.000 --> 48:58.000
But SSPL says that, you know, you don't have to release your source code if you're not directly competing by providing the core product as a service.

48:58.000 --> 49:08.000
So it's more permissive than a GPL. And so I think it has all the merits, I feel, in my opinion, to be open source approved.

49:08.000 --> 49:16.000
And guess if SSPL in a world where SSPL gets open source approval, I don't think we have any problem here, right?

49:16.000 --> 49:24.000
Then everybody has already sort of, like, gathered around SSPL, which we could not do around the commons close, right?

49:24.000 --> 49:29.000
I mean, that was the same idea for commons close, but it could not get us there. But MongoDB is a big name.

49:29.000 --> 49:36.000
And so MongoDB could get the industry around SSPL. And then we don't have a debate because it would be open source, right?

49:36.000 --> 49:41.000
Yeah, there's some details around that. We had a conversation with Heather Maker on this exact subject.

49:41.000 --> 49:50.000
And something she had said, which will be in the same podcast, is if you redlined SSPL versus AGPL,

49:50.000 --> 49:56.000
the primary differences that sort of come out is essentially Section 13, which describes, you know,

49:56.000 --> 50:01.000
if you make the functionality of the program or modified version available to third parties of the service, blah, blah, blah, blah, blah.

50:01.000 --> 50:06.000
That's where the change is, is Section 13. Everything else is essentially AGPL.

50:06.000 --> 50:11.000
And there is a lot of debate around the nuance and the process to be approved.

50:11.000 --> 50:16.000
So OSD is very clear, hasn't changed in a long time. OSD being the open source definition.

50:16.000 --> 50:24.000
That's very clear because it hasn't changed and it's even derived from Debian's existing rules on what open source definition is.

50:24.000 --> 50:33.000
So there's some history there. But the criteria and the ways that you go about getting these licenses approved by OSI is a bit more difficult.

50:33.000 --> 50:42.000
You know, you can read the transcripts and the notes from the meetings and stuff, but that takes a very motivated user slash reader.

50:42.000 --> 50:50.000
And so some of this intention of this show is to sort of, you know, demystify some of that stuff and maybe give you a TLDR, TLDL.

50:50.000 --> 50:55.000
Too long to listen, but, you know, that's essentially is this criteria for getting it passed.

50:55.000 --> 51:02.000
You say that the SSPL should be or could be open source. You're baffled, as you said, that it's not.

51:02.000 --> 51:05.000
Yeah. Yeah. And it's not that it hasn't been approved by them.

51:05.000 --> 51:14.000
Yeah. And to be honest, like I haven't looked at the counter arguments to that. Right. And I'm sure there's there are smart people there on the other side and they have some counter arguments.

51:14.000 --> 51:22.000
But from from a slightly like distant perspective without having to go into the intricate details, it seems very similar.

51:22.000 --> 51:30.000
And maybe if it was built in 1990s, it might have already been involved in OSI. Right.

51:30.000 --> 51:42.000
But I think one thing that that that we should probably take away from elastic stuff is that the holy grail of license here is to is to so if you look at elastic license as well, right.

51:42.000 --> 51:48.000
It's divided into two portions. One is the open source part and the other one is the completely proprietary part. Right.

51:48.000 --> 51:58.000
And so proprietary part, they are not changing from my understanding. They are changing the open source part of their code and making it available via either SSPL or the elastic license.

51:58.000 --> 52:05.000
And both of them sort of in some shape or form disallow building a computing service. Right. Right.

52:05.000 --> 52:13.000
Restrict cloud service providers from offering this is quotes. Yeah. So it says restricts cloud service providers from offering our service as a service. Right.

52:13.000 --> 52:20.000
And that's in violation of OSD six. And they are very clear about it's not it's only to third parties, not for internal usage.

52:20.000 --> 52:32.000
So if I am a big company and I need to build a product, I can provide it as a service to my other teams in the company, just not to your users directly. Right.

52:32.000 --> 52:37.000
It's a commercial restriction. Don't compete with me, essentially. Exactly. Yeah. Right.

52:37.000 --> 52:42.000
Because you can compete internally inside your own company, not make any money from it, but get great usage of the software.

52:42.000 --> 52:50.000
But you can't create a competing company against the inventor. This goes back to what you were saying before, the inventor or the user of the invention.

52:50.000 --> 52:58.000
Exactly. Yeah. And they can still build a commercial product on it, just not a competing service. Right.

52:58.000 --> 53:12.000
But the holy grail would be to offer a single license. Right. That takes away, hey, this is proprietary part of the code and this is the quote unquote open source or similar to open source part of the code.

53:12.000 --> 53:23.000
Ideally, what looks like what they want to get to is to offer a single license that can cover both their free and their paid features while being as open as possible. Right.

53:23.000 --> 53:35.000
And that's that that's the if that would be there, like I think we would jump on it immediately because we also currently have dual license, which is what cockroach has, which is what elastic has.

53:35.000 --> 53:42.000
And, you know, many others have. But having that single license would be would be the holy grail.

53:42.000 --> 53:55.000
And I don't know if you wanted to talk also about BSL, right, which is the MariaDB license where they say that the initial code is going to be proprietary.

53:55.000 --> 54:05.000
But after a certain amount of time, three to five years, it would become open source and it would become Apache two or something liberal, which is what cockroach is doing.

54:05.000 --> 54:12.000
Cockroach DB is doing so they're open source. They switch to cockroach BSL modifications likely.

54:12.000 --> 54:25.000
You know, that's also like a great way to essentially say the same thing, right, which is, you know, please don't compete with us by providing a service which is providing a service to our core product.

54:25.000 --> 54:34.000
Right. Like, you know, and if you think in terms of what's the corporate for Amazon, you know, let's say let's say like e-commerce is the core product.

54:34.000 --> 54:43.000
And if you were to like use Amazon machines to or Amazon technology to actually build a competing stuff, I'm pretty sure they'll be pretty pissed as well.

54:43.000 --> 54:48.000
And so so all these companies are doing is that we have spent a lot of time and effort into building.

54:48.000 --> 54:52.000
And this is our main source of source of living. Right. Right.

54:52.000 --> 54:56.000
And just play play nicely. Right. Otherwise, we have to invent new licenses.

54:56.000 --> 55:06.000
Yeah. David Kramer shared some of his sentiment on that subject because Century was licensed BDS three and transition to the BSL.

55:06.000 --> 55:20.000
And I'm paraphrasing, but when I can recall from that conversation, episode 371, relicensing Century was essentially Dave was saying, I want to do whatever it takes to help me run this commercial business, but also respect open source.

55:20.000 --> 55:28.000
Yeah. Because without the business making the thing, there is no thing. And that's a paraphrase of David's sentiment on that.

55:28.000 --> 55:38.000
But that's essentially what he bolted down to was his concern in regards to transitioning away from BDS three to the business, the business source license, which you mentioned.

55:38.000 --> 55:50.000
Yeah. And actually, if you think about what is happening, right? Like, you know, I mean, again, I argue that SSPL is very close to open source to the to the A.G.P.L. or G.P.L. Right. But SSPL is not open source.

55:50.000 --> 56:01.000
So what's actually happening right now is a bunch of open source companies which truly believe in open source are having to switch to, quote unquote, non open source licenses.

56:01.000 --> 56:10.000
And that's not that's not great. Right. Yeah. And that's not great. And the funny thing is they are all talking about the same one player in the market. Right.

56:10.000 --> 56:20.000
They're not talking about about a Google or about Microsoft or anybody else. In fact, in the elastic blog post, they mentioned that they have played very nicely with all the other players in the ecosystem.

56:20.000 --> 56:32.000
Just the just AWS, right? So I have no personal. Yeah, exactly. I mean, I have no personal thing against it less. Right. I guess we run on AWS. We are completely fine.

56:32.000 --> 56:48.000
And from what I understand, they're not trying to build a digraph alternative. Right. But there is something there where if a bunch of companies are talking about the same, you know, quote unquote, curious actor.

56:48.000 --> 56:56.000
Yeah. Yeah. Let's call him an actor. I don't want to say a bad actor. Right. Because exactly because we just don't know. But we're a curious actor. I think there must be something there. Right.

56:56.000 --> 57:17.000
Do you think then, given that we had just said that the OSI isn't their best interest for open source to help these businesses that have this concern, have this trouble to create an open source license that give them the needs they have to sort of solve the needs they have, these problems.

57:17.000 --> 57:34.000
But also adhere to the letter of open source because if you look at the intent, it seems like they're intending to respect and live within a world of open source, whether it's for the, in quotes, open source brand name that can't be trademarked because it's not trademarkable.

57:34.000 --> 57:46.000
But it certainly has a marketability to it. Like if you if you're masquerade as foe of open source, is that right, Jared? Open source. That's right. Then you're not open source.

57:46.000 --> 58:05.000
And but there is a there's a marketability to seeing your open source for sure. Absolutely. Yeah. Absolutely. And I think, you know, we do open source because it allows it's not just a way to to have more eyes and make sure that the product is the score is of high quality and so and so forth.

58:05.000 --> 58:16.000
But there's also it's a distribution model, right? It's a distribution model. It's a way by which you think your software could be consumed by anybody without necessarily having to pay you, right?

58:16.000 --> 58:23.000
And again, they're not saying that if you build a commercially successful product using our software payers, they're not saying that.

58:23.000 --> 58:41.000
They're just saying, like, just don't build a computing service against us. And also, going back to the first, the initiation of a bunch of these open source companies, it started with, like, one or multiple, like, people who just believed in open source, right?

58:41.000 --> 58:50.000
They just wanted to make things in open source because they have consumed open source software their life, right? So when I was, like, in college, I was all into Linux.

58:50.000 --> 58:59.000
And I was playing with Gen 2 and Ubuntu, and I don't know, like, whatever other Linux flavor there was out there, FreeBSD, NetBSD, and I just believed in open source.

58:59.000 --> 59:12.000
And that was our stance against, you know, Windows at the time, right? And so I've created multiple projects, some of which actually got popular, including Dgraph.

59:12.000 --> 59:18.000
And then we have Badger, and then we have Ristrado, and they are all open source because we just believe in it, right?

59:18.000 --> 59:29.000
It's a bit of, like, a pain to have to move away from that, even in theory, right? Even in theory, just because of this one problem.

59:29.000 --> 59:40.000
So Manish, clean slate. Start Dgraph over today. Same exact software, same business. Pick a license.

59:40.000 --> 59:42.000
I love it.

59:42.000 --> 59:45.000
What are you going to go with?

59:45.000 --> 59:53.000
I think SSPL is looking pretty attractive. SSPL is looking pretty attractive right now. And also, like, just notice one more thing, right?

59:53.000 --> 01:00:02.000
From 2010 or 2015, the world has changed to be more cloud first and on-prem later than on-prem first and cloud later approach, right?

01:00:02.000 --> 01:00:09.000
And so if I were, if I were or somebody else were to build a service today, they might choose not to even make it open source.

01:00:09.000 --> 01:00:18.000
They might say, you know what? Snowflake has done really well by being completely cloud-based system. And if I'm not wrong, Snowflake is not open source, right?

01:00:18.000 --> 01:00:31.000
And so why open source, right? Maybe that could be the question is, like, open source already has tons of problems because there is, you know, actor or multiple actors, like, causing so many issues.

01:00:31.000 --> 01:00:36.000
Like, why bother with all that? Just avoid all of that and just go completely closed source.

01:00:36.000 --> 01:00:44.000
And you could still build a good business out of it, right? And so then it becomes just a question of principle, right? Do you still really believe in open source?

01:00:44.000 --> 01:00:55.000
Do you still believe that your code should be, we should be, other people should be able to check it and make sure that you're not doing anything fishy or help you find bugs or, you know, that kind of stuff.

01:00:55.000 --> 01:01:06.000
So it becomes a matter of principle and a matter of business, it seems like.

01:01:25.000 --> 01:01:36.000
If you're a developer or a founder that's frustrated with AWS's complexity or Heroku's high costs, you owe it to yourself to use the $100 in free credits they're giving our listeners to give Render a try.

01:01:36.000 --> 01:01:52.000
Render is built for modern applications and offers everything you need out of the box. One-click scaling, zero downtime deploys, built-in SSL, private networking, managed databases, secrets and configuration management, persistent block storage, and infrastructure as code.

01:01:52.000 --> 01:02:00.000
Heroku customers running production and staging workloads typically see cost reductions of over 50% after switching to Render. Here's the best part.

01:02:00.000 --> 01:02:11.000
We work closely with the team at Render to ensure you have zero risk by giving you $100 in free credits plus they're going to assign a world-class engineer to your account to offer guidance and answer any questions you have.

01:02:11.000 --> 01:02:15.000
When you're ready to transition your infrastructure, they'll be there to help you with that too.

01:02:15.000 --> 01:02:31.000
Automate your cloud hosted with Render at render.com slash change log, get $100 in free credits to try the Render platform, plus a world-class engineer assigned your account to guide you along the way to send an email to our special email, change log at render.com to get access to those free credits.

01:02:31.000 --> 01:02:47.000
All that begins at render.com slash change log.

01:02:47.000 --> 01:03:01.000
Coming up in this segment, we're talking with Paul Dix, co-founder and CTO at Influx Data. Paul shares his perspective on running an open source business. How Influx Data is innovating their commercial offering while having a permissive MIT license version of InfluxDB.

01:03:01.000 --> 01:03:10.000
Paul also shares his thoughts on this standoff between Elastic and AWS and why he's long on Mongo and short on Elastic. Here we go.

01:03:10.000 --> 01:03:17.000
So Paul, tell us your name, tell us your company and kind of your view of the open source world, where your opinion is coming from.

01:03:17.000 --> 01:03:27.000
Yes, I'm Paul Dix. I'm the CTO and co-founder of Influx Data. We're the makers of InfluxDB, which is an open source time series database.

01:03:27.000 --> 01:03:48.000
I created it in 2013 and I've been initially running the company and then a CTO, which I'm still doing to this day. So my experience over that time has basically been trying to build a business around an open source software project, particularly in infrastructure software and in databases in particular.

01:03:48.000 --> 01:04:03.000
So Elastic, obviously, I'm very familiar with. I saw it when they were initially becoming a company. I remember the project early on. Some of the work that they've done served as inspiration to me as I was building out Influx and the various parts of our stack.

01:04:03.000 --> 01:04:12.000
Very similar software, very similar business model. It looks like Influx is MIT. Can you tell us your license selection and how your business works around it?

01:04:12.000 --> 01:04:22.000
Yeah, so all of the open source software that we create is MIT licensed and our business model is basically – so we are essentially at this point an open core business.

01:04:22.000 --> 01:04:31.000
So there's open source InfluxDB, which is MIT licensed. People can do whatever – what they want with it. It works essentially as a single server.

01:04:31.000 --> 01:04:43.000
We have a fork of the open source project that is closed source and proprietary. If you want high availability or scale out clustering of InfluxDB, that is our commercial offering, right?

01:04:43.000 --> 01:04:50.000
So essentially, we don't put clustering features into the open source. Everything else is fair game to go into the open source.

01:04:50.000 --> 01:04:58.000
If it has to do with a single server, optimizing query performance, APIs, functionality, all that kind of stuff, it goes into free open source.

01:04:58.000 --> 01:05:09.000
So we launched this as a managed service inside of AWS in – I think it was April of 2016.

01:05:09.000 --> 01:05:17.000
We launched it as basically like on-premise software product that people could buy in September of 2016.

01:05:17.000 --> 01:05:26.000
Our AWS service is still running to this day. Essentially, what that is is it's the closed source software spun up.

01:05:26.000 --> 01:05:33.000
A customer can come and sign up. They say what size instances they want, how much storage, how many instances.

01:05:33.000 --> 01:05:41.000
We spin up the closed source enterprise version of our product on it. We add monitoring and backups and stuff like that.

01:05:41.000 --> 01:05:46.000
And then that's the hosted version of the product.

01:05:46.000 --> 01:05:56.000
What I say on-premise version is essentially you buy the software from us, it's an annual subscription, and then you run and manage it yourself.

01:05:56.000 --> 01:06:03.000
And that's either in your own data centers, but plenty of people are also doing it inside of AWS, GCP, all that kind of stuff.

01:06:03.000 --> 01:06:12.000
Last year, or I guess late 2019 now, we launched basically version two of our cloud product.

01:06:12.000 --> 01:06:18.000
And that essentially is a very different kind of thing because it's not just a database,

01:06:18.000 --> 01:06:21.000
and it doesn't look anything like the open source software that we create.

01:06:21.000 --> 01:06:28.000
The API is the same, but the underlying architecture and how everything works together is completely different.

01:06:28.000 --> 01:06:31.000
And that's for version 2.0 of InfluxDB.

01:06:31.000 --> 01:06:37.000
So the model we switched to with 2.0, we essentially moved to a cloud-first model.

01:06:37.000 --> 01:06:42.000
So we deliver that cloud product continuously as like a SaaS service.

01:06:42.000 --> 01:06:49.000
And then over time, some of those features get pulled out into the open source InfluxDB.

01:06:49.000 --> 01:06:58.000
Is that because of a realization that the other way wasn't working well enough, or it's just why did you switch to the cloud-first model?

01:06:58.000 --> 01:07:03.000
Mainly because it has nothing to do with open source versus closed.

01:07:03.000 --> 01:07:07.000
It has everything to do with software delivery cycles.

01:07:07.000 --> 01:07:10.000
So before, we looked very much like an enterprise software company.

01:07:10.000 --> 01:07:14.000
We'd have anywhere from two to four feature bearing releases a year,

01:07:14.000 --> 01:07:19.000
which could then get shipped to our cloud customers and shipped to our on-premise customers.

01:07:19.000 --> 01:07:23.000
The problem with that is you don't get that many cycles of iteration,

01:07:23.000 --> 01:07:28.000
and each release is like super painful to do because there's so much code wrapped up in it.

01:07:28.000 --> 01:07:31.000
So I really wanted to move to a continuous delivery model.

01:07:31.000 --> 01:07:35.000
So we could get much faster feedback, features out to customers quicker,

01:07:35.000 --> 01:07:38.000
and the individual releases would be much, much smaller.

01:07:38.000 --> 01:07:44.000
So that had to do with basically wanting to be a cloud company and deliver a cloud product,

01:07:44.000 --> 01:07:48.000
as opposed to deliver like a packaged on-premise enterprise product.

01:07:48.000 --> 01:07:50.000
How does that trickle down to your open source then?

01:07:50.000 --> 01:07:56.000
How does InfluxDB, the open source benefit or not benefit from this switch?

01:07:56.000 --> 01:08:00.000
I think the benefit is that by the time something lands in open source,

01:08:00.000 --> 01:08:05.000
we've already vetted the features, embedded its functionality and how it works,

01:08:05.000 --> 01:08:07.000
inside our cloud products.

01:08:07.000 --> 01:08:14.000
The thing is with our cloud product, we're able to iterate on it and release fixes very quickly.

01:08:14.000 --> 01:08:16.000
Once you ship something in an open source release,

01:08:16.000 --> 01:08:20.000
it's much more painful to ship a fix, ship an update.

01:08:20.000 --> 01:08:23.000
So I think that's a benefit.

01:08:23.000 --> 01:08:29.000
The drawback is I think it reduces the collaboration with the community

01:08:29.000 --> 01:08:33.000
in terms of what we're developing and how it's getting done and all that kind of stuff.

01:08:33.000 --> 01:08:40.000
It basically makes like the open source like a downstream kind of product, right?

01:08:40.000 --> 01:08:41.000
Yeah.

01:08:41.000 --> 01:08:42.000
Well, it reflects the tweet you put out,

01:08:42.000 --> 01:08:47.000
which is my own preferences to keep open code permissive and open

01:08:47.000 --> 01:08:50.000
and have a clear strategy as you just depicted here

01:08:50.000 --> 01:08:52.000
with how that code will be used in the commercial offering.

01:08:52.000 --> 01:08:55.000
So you're eating your own dolphin, which is good.

01:08:55.000 --> 01:08:59.000
So what I just described is basically our 2.0 model,

01:08:59.000 --> 01:09:03.000
but actually I'm actually trying to move even beyond that

01:09:03.000 --> 01:09:09.000
over to what I call basically like complementary software model, right?

01:09:09.000 --> 01:09:15.000
So we have a new project that we announced a few months ago called InfluxDB IOCs,

01:09:15.000 --> 01:09:20.000
which is basically the new core of the database written in Rust using Apache Arrow.

01:09:20.000 --> 01:09:24.000
And the way that we're building this out is essentially

01:09:24.000 --> 01:09:27.000
there's the open source thing and then there's another piece of software

01:09:27.000 --> 01:09:29.000
that we have that is closed source.

01:09:29.000 --> 01:09:32.000
And as a whole, the system is designed to be two pieces of software,

01:09:32.000 --> 01:09:35.000
one of which is totally open and permissive, permissively licensed.

01:09:35.000 --> 01:09:37.000
You can do whatever you want with it.

01:09:37.000 --> 01:09:38.000
You can compete with us.

01:09:38.000 --> 01:09:39.000
That's fine.

01:09:39.000 --> 01:09:40.000
That's by design.

01:09:40.000 --> 01:09:43.000
And then the other piece, which is the software that we're writing

01:09:43.000 --> 01:09:47.000
to be able to run the open source software in our cloud offering.

01:09:47.000 --> 01:09:51.000
So the reason why I say it's complementary is because what I want is

01:09:51.000 --> 01:09:55.000
I want our cloud product to be running the open source bits exactly as is,

01:09:55.000 --> 01:09:59.000
like exactly as the open source community experiences them,

01:09:59.000 --> 01:10:02.000
because it means we'll find bugs faster.

01:10:02.000 --> 01:10:05.000
It also means we can have more of a collaborative effort with the community

01:10:05.000 --> 01:10:09.000
in terms of making improvements because we're not,

01:10:09.000 --> 01:10:11.000
like right now with our cloud 2 offering,

01:10:11.000 --> 01:10:15.000
like InfluxDB 2.0 open source is one project.

01:10:15.000 --> 01:10:17.000
Cloud 2 is totally separate.

01:10:17.000 --> 01:10:22.000
We've used some of the libraries from InfluxDB 2.0,

01:10:22.000 --> 01:10:25.000
but it's not even like a fork of the project.

01:10:25.000 --> 01:10:30.000
It's literally two separate projects and products,

01:10:30.000 --> 01:10:34.000
and they have the same API.

01:10:34.000 --> 01:10:35.000
Yeah, two masters.

01:10:35.000 --> 01:10:37.000
Right, exactly, yeah.

01:10:37.000 --> 01:10:39.000
With IOCs and this other piece—

01:10:39.000 --> 01:10:40.000
In terms of serving two masters is what I mean.

01:10:40.000 --> 01:10:42.000
Literally, you're serving two masters.

01:10:42.000 --> 01:10:43.000
You have two different projects.

01:10:43.000 --> 01:10:45.000
It's very difficult to serve both easily.

01:10:45.000 --> 01:10:46.000
Absolutely.

01:10:46.000 --> 01:10:50.000
Internally, we have a separate team that works on the open source bits

01:10:50.000 --> 01:10:54.000
versus the people working on the closed source cloud product.

01:10:54.000 --> 01:10:55.000
Right.

01:10:55.000 --> 01:10:57.000
Actually, the benefits of the open source,

01:10:57.000 --> 01:11:00.000
and it seemed like the benefit to the open source was obvious,

01:11:00.000 --> 01:11:02.000
but they're different because they're separate.

01:11:02.000 --> 01:11:03.000
That's what it seemed like.

01:11:03.000 --> 01:11:06.000
I was going to ask you about that because it seems like with your cloud 2

01:11:06.000 --> 01:11:08.000
that you mentioned, you can obviously push forward,

01:11:08.000 --> 01:11:09.000
but it's downstream.

01:11:09.000 --> 01:11:11.000
The open source is downstream,

01:11:11.000 --> 01:11:15.000
and it seems like maybe just disconnected basically.

01:11:15.000 --> 01:11:17.000
Yeah, it's a bit disconnected.

01:11:17.000 --> 01:11:19.000
Whereas with this new model, again,

01:11:19.000 --> 01:11:23.000
my goal is we offer it as a cloud product first.

01:11:23.000 --> 01:11:24.000
We're not doing that yet,

01:11:24.000 --> 01:11:28.000
but then later we'll offer it as an on-premise product.

01:11:28.000 --> 01:11:33.000
But the idea there is that people who adopt IOCs

01:11:33.000 --> 01:11:35.000
and deploy a bunch of servers and stuff like that,

01:11:35.000 --> 01:11:38.000
if they come to us and they want the on-premise product,

01:11:38.000 --> 01:11:41.000
it's a product that they add in addition to the open source software

01:11:41.000 --> 01:11:42.000
they're already running.

01:11:42.000 --> 01:11:44.000
They continue to do that.

01:11:44.000 --> 01:11:49.000
It's very, very different than our old InfluxDB 1.x enterprise model

01:11:49.000 --> 01:11:52.000
where our enterprise product is a replacement

01:11:52.000 --> 01:11:55.000
for the open source InfluxDB.

01:11:55.000 --> 01:11:57.000
I think that's a heavier lift,

01:11:57.000 --> 01:12:03.000
and it's a bigger ask for users to replace their open source bits.

01:12:03.000 --> 01:12:06.000
I think it's better if they're able to run the open source bits

01:12:06.000 --> 01:12:09.000
and continue to have that experience

01:12:09.000 --> 01:12:11.000
because one, it makes the contribution easier.

01:12:11.000 --> 01:12:15.000
It makes it easier for them to consider adopting a commercial product

01:12:15.000 --> 01:12:16.000
because at that point they're saying,

01:12:16.000 --> 01:12:19.000
okay, I have this commercial product,

01:12:19.000 --> 01:12:21.000
but I'm still using the open source bits.

01:12:21.000 --> 01:12:26.000
So I can still be sure that if the commercial relationship goes sour

01:12:26.000 --> 01:12:29.000
or I decide I don't want that functionality,

01:12:29.000 --> 01:12:30.000
it's still good.

01:12:30.000 --> 01:12:33.000
I can still continue to use the open source bits.

01:12:33.000 --> 01:12:36.000
There's definitely some interesting ramifications

01:12:36.000 --> 01:12:38.000
that I think I would love to see play out

01:12:38.000 --> 01:12:41.000
as you go about deploying that new idea.

01:12:41.000 --> 01:12:42.000
Am I understanding correctly?

01:12:42.000 --> 01:12:48.000
It's kind of like the open source bits is like the core software offering

01:12:48.000 --> 01:12:52.000
and then the proprietary stuff is like a management controller

01:12:52.000 --> 01:12:54.000
or like a deployment type of a thing.

01:12:54.000 --> 01:12:56.000
It's all the things that surround it

01:12:56.000 --> 01:12:59.000
that you would be offering as a service perhaps,

01:12:59.000 --> 01:13:02.000
but this is as a licensable addition.

01:13:02.000 --> 01:13:05.000
Yeah, that's a good way of thinking of it.

01:13:05.000 --> 01:13:08.000
It's basically all this code that we have to write

01:13:08.000 --> 01:13:10.000
to offer it as a service, right?

01:13:10.000 --> 01:13:14.000
Operations, backups, like deploying new versions of it,

01:13:14.000 --> 01:13:16.000
management, all this kind of stuff.

01:13:16.000 --> 01:13:19.000
The other thing is we want to be able to offer that

01:13:19.000 --> 01:13:21.000
as an on-premise piece of software.

01:13:21.000 --> 01:13:26.000
Another way to think about this is the open source thing

01:13:26.000 --> 01:13:28.000
represents the data plane,

01:13:28.000 --> 01:13:32.000
whereas our closed source product represents the control plane.

01:13:32.000 --> 01:13:36.000
But the way the two interact is the control plane interacts

01:13:36.000 --> 01:13:38.000
with the data plane through its public API.

01:13:38.000 --> 01:13:40.000
And that public API is open source.

01:13:40.000 --> 01:13:45.000
So literally if somebody wanted to write an open source control plane for it

01:13:45.000 --> 01:13:49.000
or if they wanted to write their own competing software products,

01:13:49.000 --> 01:13:52.000
they can do so and the license totally permits that.

01:13:52.000 --> 01:13:57.000
And the thing is like we don't have to worry about our open source bits

01:13:57.000 --> 01:13:59.000
competing with our commercial bits

01:13:59.000 --> 01:14:04.000
because the truth is the responsibilities of the two pieces of software

01:14:04.000 --> 01:14:06.000
are clearly delineated.

01:14:06.000 --> 01:14:09.000
So it's like there's no reason for people to put control plane bits

01:14:09.000 --> 01:14:11.000
into the main open source project.

01:14:11.000 --> 01:14:14.000
They would have to create a separate open source project to do it,

01:14:14.000 --> 01:14:16.000
which would make sense.

01:14:16.000 --> 01:14:17.000
Right.

01:14:17.000 --> 01:14:19.000
But at that point you're kind of just deciding

01:14:19.000 --> 01:14:21.000
what is control plane and what is data plane.

01:14:21.000 --> 01:14:25.000
And that's kind of the same concept of what goes in core

01:14:25.000 --> 01:14:27.000
and what goes in proprietary.

01:14:27.000 --> 01:14:28.000
Isn't it like what about backups?

01:14:28.000 --> 01:14:30.000
Well it could go right into our core offering,

01:14:30.000 --> 01:14:32.000
but it's more of a control plane kind of a thing.

01:14:32.000 --> 01:14:34.000
So we'll put it over here.

01:14:34.000 --> 01:14:36.000
It seems like you still make those decisions.

01:14:36.000 --> 01:14:40.000
You just make them and the two pieces of software are further apart perhaps.

01:14:40.000 --> 01:14:42.000
I view them as further apart.

01:14:42.000 --> 01:14:44.000
When I think of open core businesses,

01:14:44.000 --> 01:14:47.000
I think of businesses where the commercial product

01:14:47.000 --> 01:14:50.000
is a replacement for the open source product.

01:14:50.000 --> 01:14:52.000
This is not that.

01:14:52.000 --> 01:14:54.000
And it's designed specifically not to be that.

01:14:54.000 --> 01:14:56.000
Like take data stacks for instance.

01:14:56.000 --> 01:15:00.000
Data stacks enterprise is a replacement for Cassandra.

01:15:00.000 --> 01:15:05.000
And now data stacks is obviously offering it as a service called Astra.

01:15:05.000 --> 01:15:06.000
That's doing well.

01:15:06.000 --> 01:15:09.000
But again, that's an open core model.

01:15:09.000 --> 01:15:10.000
Gotcha.

01:15:10.000 --> 01:15:16.000
I think a good example is Google and Kubernetes.

01:15:16.000 --> 01:15:23.000
Open source Kubernetes certainly doesn't represent the entirety

01:15:23.000 --> 01:15:28.000
of GCP and all the software that runs that.

01:15:28.000 --> 01:15:33.000
But obviously Google has a vested interest in driving Kubernetes forward.

01:15:33.000 --> 01:15:39.000
And GCP happens to be one of the best places to buy Kubernetes,

01:15:39.000 --> 01:15:41.000
to operate Kubernetes.

01:15:41.000 --> 01:15:45.000
So what's your thoughts on the server side public license and elastics move?

01:15:45.000 --> 01:15:48.000
You obviously prefer this other way of going about it,

01:15:48.000 --> 01:15:51.000
but do you think it's smart by them, short-sighted?

01:15:51.000 --> 01:15:52.000
What's your take on that?

01:15:52.000 --> 01:15:56.000
So I don't think it's not the move I would make.

01:15:56.000 --> 01:15:58.000
And to be totally honest though,

01:15:58.000 --> 01:16:01.000
to me it's not really about a license choice.

01:16:01.000 --> 01:16:07.000
It's more about how they intend to drive innovation

01:16:07.000 --> 01:16:09.000
that drives commercial value.

01:16:09.000 --> 01:16:12.000
And the truth is I own stock in MongoDB,

01:16:12.000 --> 01:16:15.000
which is obviously SSPL licensed software,

01:16:15.000 --> 01:16:17.000
but I do not own stock in elastic.

01:16:17.000 --> 01:16:19.000
Nor would I buy stock in elastic right now,

01:16:19.000 --> 01:16:21.000
yet I'm holding MongoDB.

01:16:21.000 --> 01:16:23.000
Even though they're both SSPL.

01:16:23.000 --> 01:16:27.000
So from a pure mercenary investor perspective,

01:16:27.000 --> 01:16:29.000
I'm long Mongo, but I'm short elastic

01:16:29.000 --> 01:16:31.000
and it has nothing to do with the license.

01:16:31.000 --> 01:16:35.000
I think them changing the license is more a symptom of the fact

01:16:35.000 --> 01:16:40.000
that they're getting out-innovated on their cloud offering.

01:16:40.000 --> 01:16:43.000
If they had a cloud offering that was demonstrably better

01:16:43.000 --> 01:16:46.000
than Amazon's elastic service,

01:16:46.000 --> 01:16:50.000
they would continue to be able to drive revenue and drive people to it.

01:16:50.000 --> 01:16:56.000
If they're so upset because they feel like AWS is eating their lunch

01:16:56.000 --> 01:17:01.000
on the hosted offering, then they change their license.

01:17:01.000 --> 01:17:05.000
I mean ultimately they had a choice,

01:17:05.000 --> 01:17:09.000
which was they either write more closed source code

01:17:09.000 --> 01:17:17.000
or they continue to write code out in the open.

01:17:17.000 --> 01:17:19.000
I'm putting air quotes around this.

01:17:19.000 --> 01:17:22.000
But that code is under a different license.

01:17:22.000 --> 01:17:25.000
They chose the different license path,

01:17:25.000 --> 01:17:28.000
which to me I think, I mean personally,

01:17:28.000 --> 01:17:30.000
I'm not a fan of source available licenses.

01:17:30.000 --> 01:17:32.000
I think they're a disservice to the community

01:17:32.000 --> 01:17:42.000
because then they are a disservice to the community

01:17:42.000 --> 01:17:44.000
because then you can say like,

01:17:44.000 --> 01:17:47.000
oh community members saw your code or whatever.

01:17:47.000 --> 01:17:53.000
It just means that people can't start competing projects with you

01:17:53.000 --> 01:17:58.000
without putting themselves at risk of being accused

01:17:58.000 --> 01:18:00.000
of taking your code or whatever.

01:18:00.000 --> 01:18:05.000
I prefer open code is open, closed code is closed.

01:18:05.000 --> 01:18:11.000
The thing that kind of annoys me about the whole elastic AWS standoff

01:18:11.000 --> 01:18:16.000
is both of them are trying to put forth this position

01:18:16.000 --> 01:18:19.000
where they have the moral high ground.

01:18:19.000 --> 01:18:22.000
They have moral superiority over the other one.

01:18:22.000 --> 01:18:25.000
Amazon's saying like, oh we're protectors of open source

01:18:25.000 --> 01:18:28.000
so we're going to launch this fork or whatever.

01:18:28.000 --> 01:18:30.000
The truth is even when they did open distro,

01:18:30.000 --> 01:18:33.000
I called it a fork then even though they said it's not a fork

01:18:33.000 --> 01:18:36.000
because it's just like whatever, a build.

01:18:36.000 --> 01:18:39.000
It was always obvious when they launched that,

01:18:39.000 --> 01:18:42.000
that fork is what it was ultimately going to become

01:18:42.000 --> 01:18:45.000
because elastic was going to take the stance

01:18:45.000 --> 01:18:48.000
on stealing from us so we're going to change the license

01:18:48.000 --> 01:18:50.000
of more and more of our code,

01:18:50.000 --> 01:18:55.000
which is then going to give Amazon no choice but to fork.

01:18:55.000 --> 01:18:59.000
Amazon's claiming they have the moral high ground.

01:18:59.000 --> 01:19:00.000
It's not true.

01:19:00.000 --> 01:19:02.000
They're just doing what's best for their customers

01:19:02.000 --> 01:19:04.000
and their shareholders.

01:19:04.000 --> 01:19:06.000
They're trying to optimize shareholder value.

01:19:06.000 --> 01:19:10.000
Obviously all their customers are saying host elastic for us.

01:19:10.000 --> 01:19:13.000
Then elastic is trying to say like,

01:19:13.000 --> 01:19:16.000
oh we're doing this to protect ourselves from Amazon

01:19:16.000 --> 01:19:17.000
because they're stealing from us.

01:19:17.000 --> 01:19:19.000
The truth is there are tons of hosting companies

01:19:19.000 --> 01:19:22.000
that have been hosting elastic for a long time.

01:19:22.000 --> 01:19:24.000
If you look at where elastic makes its money,

01:19:24.000 --> 01:19:26.000
it's probably mostly from log search.

01:19:26.000 --> 01:19:30.000
How many log search companies are built on top of elastic?

01:19:30.000 --> 01:19:32.000
They just open that up, right?

01:19:32.000 --> 01:19:36.000
Elastic is just upset because Amazon out competed them

01:19:36.000 --> 01:19:39.000
on the hosting front whereas other hosting providers

01:19:39.000 --> 01:19:42.000
like Compose and Avon and stuff like that

01:19:42.000 --> 01:19:45.000
didn't really make a dent in elastic's top line.

01:19:45.000 --> 01:19:48.000
Their claim like, oh we have to do this.

01:19:48.000 --> 01:19:49.000
No you don't.

01:19:49.000 --> 01:19:52.000
You could have kept the code Apache B2

01:19:52.000 --> 01:19:54.000
and you could have written more and more code

01:19:54.000 --> 01:19:57.000
in your service offering that's closed source

01:19:57.000 --> 01:20:00.000
and kept the two separate.

01:20:00.000 --> 01:20:03.000
This is actually one of the things that I agree with Amazon

01:20:03.000 --> 01:20:06.000
about where they said the reason they created the open distro

01:20:06.000 --> 01:20:10.000
was because elastic was polluting the open source repo

01:20:10.000 --> 01:20:12.000
with code under different licenses, right,

01:20:12.000 --> 01:20:15.000
under the elastic license and stuff like that.

01:20:15.000 --> 01:20:20.000
What they've done now is they've gone all in on that strategy.

01:20:20.000 --> 01:20:23.000
Basically they want all the benefits

01:20:23.000 --> 01:20:26.000
of being an open source company, free marketing,

01:20:26.000 --> 01:20:29.000
free adoption, getting other people to talk about it,

01:20:29.000 --> 01:20:32.000
use it, whatever, but they don't want to pay the price.

01:20:32.000 --> 01:20:35.000
The price of being really open source

01:20:35.000 --> 01:20:38.000
is that you're giving software away for free.

01:20:38.000 --> 01:20:40.000
Yes, you're being permissive,

01:20:40.000 --> 01:20:43.000
but that also means that anybody can take your software

01:20:43.000 --> 01:20:47.000
and compete with you, which you have to be okay with.

01:20:47.000 --> 01:20:51.000
Anything that you can really call a platform

01:20:51.000 --> 01:20:55.000
is only a platform if the total economic activity of it

01:20:55.000 --> 01:20:59.000
outstrips that of any single vendor, right?

01:20:59.000 --> 01:21:01.000
If you claim you're a platform,

01:21:01.000 --> 01:21:03.000
but basically you're getting all the money from it,

01:21:03.000 --> 01:21:05.000
no you're not.

01:21:05.000 --> 01:21:08.000
Monopoly, as you said in your tweets.

01:21:08.000 --> 01:21:10.000
This comes back to something you were saying,

01:21:10.000 --> 01:21:13.000
which in your stance for not 2.0

01:21:13.000 --> 01:21:15.000
in terms of influx and what you're doing,

01:21:15.000 --> 01:21:17.000
but the next version, I think you called it IOCs,

01:21:17.000 --> 01:21:19.000
this maybe version three, I'm not sure what you call it,

01:21:19.000 --> 01:21:21.000
but you said by design.

01:21:21.000 --> 01:21:25.000
It's permissive and you've designed your architecture

01:21:25.000 --> 01:21:27.000
in terms of commercial offering

01:21:27.000 --> 01:21:31.000
to expect other competitors.

01:21:31.000 --> 01:21:34.000
Whereas it seems like elastic,

01:21:34.000 --> 01:21:35.000
based on what you say and others have said,

01:21:35.000 --> 01:21:37.000
and even kind of what they're depicting,

01:21:37.000 --> 01:21:40.000
is that they're upset that Amazon is eating their lunch

01:21:40.000 --> 01:21:41.000
and it's not by design.

01:21:41.000 --> 01:21:44.000
Their model is not by design to be competed with.

01:21:44.000 --> 01:21:46.000
Right, exactly.

01:21:46.000 --> 01:21:48.000
Their hope was that they would get

01:21:48.000 --> 01:21:50.000
this massively popular project, which it is.

01:21:50.000 --> 01:21:55.000
Elastica's top 10 database project used the world over,

01:21:55.000 --> 01:21:58.000
but then they want, the classic strategy is

01:21:58.000 --> 01:22:01.000
you spend a bunch of money to get optimized growth

01:22:01.000 --> 01:22:04.000
and then once you have scale and a monopoly,

01:22:04.000 --> 01:22:08.000
you want to start collecting monopoly rents, right?

01:22:08.000 --> 01:22:11.000
So now, elastic can't collect monopoly rents

01:22:11.000 --> 01:22:13.000
because other people are hosting elastic.

01:22:13.000 --> 01:22:16.000
So they're trying to change the model so they can do that,

01:22:16.000 --> 01:22:20.000
but the problem is then you're a different sort of business entirely, right?

01:22:20.000 --> 01:22:23.000
It's fine to be a closed source database company.

01:22:23.000 --> 01:22:25.000
There's Fauna, which is new.

01:22:25.000 --> 01:22:26.000
Firebase is closed source.

01:22:26.000 --> 01:22:30.000
Each of the cloud providers has a handful of closed source databases.

01:22:30.000 --> 01:22:33.000
So that's a totally fine thing to do,

01:22:33.000 --> 01:22:36.000
but to try and say like, oh, we're open source

01:22:36.000 --> 01:22:40.000
and then change it, it's just like, it's kind of ridiculous.

01:22:40.000 --> 01:22:42.000
Well, Paul, fascinating stuff.

01:22:42.000 --> 01:22:44.000
Thanks for sharing your take with us.

01:22:44.000 --> 01:22:46.000
Definitely want to come and have you back

01:22:46.000 --> 01:22:49.000
once you've rolled out this new, what do you call it, complementary model?

01:22:49.000 --> 01:22:50.000
Yeah.

01:22:50.000 --> 01:22:54.000
You have some real world results to report back how it's going,

01:22:54.000 --> 01:22:57.000
if it's serving the needs of you and your users

01:22:57.000 --> 01:23:00.000
and the open source community the ways that you hope it will,

01:23:00.000 --> 01:23:02.000
we would love to have you back on the show.

01:23:02.000 --> 01:23:05.000
Yeah, I think that's just one closing thought on that really quick,

01:23:05.000 --> 01:23:07.000
which you reminded me of, which is like,

01:23:07.000 --> 01:23:10.000
I think for people to think about it can open,

01:23:10.000 --> 01:23:13.000
permissive open source licensing survive in infrastructure software.

01:23:13.000 --> 01:23:15.000
I totally think it can,

01:23:15.000 --> 01:23:17.000
but I think the people who are producing it

01:23:17.000 --> 01:23:22.000
have to think ahead of time about how they commercialize it over the long run.

01:23:22.000 --> 01:23:25.000
And for us with IOCs,

01:23:25.000 --> 01:23:28.000
I've already defined what success looks like

01:23:28.000 --> 01:23:30.000
is tons of competitors,

01:23:30.000 --> 01:23:34.000
literally cloud providers adopting the software and competing with us.

01:23:34.000 --> 01:23:37.000
So what that, which isn't going to happen for years,

01:23:37.000 --> 01:23:39.000
best case scenario, right, if it happens at all.

01:23:39.000 --> 01:23:43.000
But what that means is we're developing a commercial product

01:23:43.000 --> 01:23:46.000
side by side with the open product right now

01:23:46.000 --> 01:23:49.000
so that if cloud providers decide they want to get in on the game

01:23:49.000 --> 01:23:50.000
three years from now,

01:23:50.000 --> 01:23:54.000
we've already had plenty of time to actually build a product

01:23:54.000 --> 01:23:56.000
to, you know, compete.

01:23:56.000 --> 01:23:57.000
Hmm.

01:23:57.000 --> 01:23:59.000
Stay tuned for results as they come out.

01:23:59.000 --> 01:24:00.000
Thanks, Paul.

01:24:00.000 --> 01:24:01.000
Really appreciate you coming on the show.

01:24:01.000 --> 01:24:02.000
All right.

01:24:02.000 --> 01:24:03.000
Thanks, guys.

01:24:05.000 --> 01:24:07.000
Next, we're talking with Vicky Bresor.

01:24:07.000 --> 01:24:11.000
Vicky has been in free and open source software for 30 years now,

01:24:11.000 --> 01:24:14.000
and she's been working with startups and enterprises doing open source

01:24:14.000 --> 01:24:16.000
and free software business strategy for quite a while.

01:24:16.000 --> 01:24:20.000
We use Vicky's post titled Elasticsearch and Kibana

01:24:20.000 --> 01:24:23.000
are now business risks as a reference on the situation.

01:24:23.000 --> 01:24:26.000
We even quoted her post a few times in our conversation with Heather Meeker.

01:24:26.000 --> 01:24:28.000
So naturally, we had to talk with her.

01:24:28.000 --> 01:24:29.000
Here we go.

01:24:29.000 --> 01:24:30.000
All right.

01:24:30.000 --> 01:24:34.000
So here is Vicky Bresor and Vicky, share with us, first of all,

01:24:34.000 --> 01:24:36.000
your position in the open source world,

01:24:36.000 --> 01:24:39.000
like what's your angle at the conversation that we're having?

01:24:39.000 --> 01:24:41.000
Where are you coming from?

01:24:41.000 --> 01:24:44.000
I do corporate strategy around free and open source software.

01:24:44.000 --> 01:24:47.000
So I work with startups and enterprises and various organizations

01:24:47.000 --> 01:24:50.000
to help them be more successful by contributing, releasing,

01:24:50.000 --> 01:24:53.000
and just generally becoming a good citizen

01:24:53.000 --> 01:24:55.000
in free and open source software communities

01:24:55.000 --> 01:24:59.000
in a way that's both good for their bottom line and for the communities.

01:24:59.000 --> 01:25:00.000
Okay.

01:25:00.000 --> 01:25:02.000
And you've been doing this for a while?

01:25:02.000 --> 01:25:03.000
Yeah, I have.

01:25:03.000 --> 01:25:05.000
I've been in free and open source software for over 30 years,

01:25:05.000 --> 01:25:09.000
and I've been doing this specific thing for quite a while now.

01:25:09.000 --> 01:25:10.000
Awesome.

01:25:10.000 --> 01:25:12.000
Well, we're glad we got you on the show then.

01:25:12.000 --> 01:25:14.000
So you wrote a piece called Elasticsearch

01:25:14.000 --> 01:25:16.000
and Kibana are now business risks.

01:25:16.000 --> 01:25:19.000
And once you lay out the case for that headline,

01:25:19.000 --> 01:25:21.000
do you want to share that with our audience,

01:25:21.000 --> 01:25:23.000
just the brief synopsis of why you believe that's the case

01:25:23.000 --> 01:25:25.000
with this server-side public license?

01:25:25.000 --> 01:25:28.000
Well, I mean, as a PL, I'm going to lead to the lawyers.

01:25:28.000 --> 01:25:31.000
This is a legal matter, but it is not an open source license.

01:25:31.000 --> 01:25:34.000
It is, however, being portrayed as open,

01:25:34.000 --> 01:25:37.000
which everybody is going to interpret as open source

01:25:37.000 --> 01:25:39.000
because that's just the way we speak about things.

01:25:39.000 --> 01:25:42.000
So I think that in and of itself is kind of deceptive,

01:25:42.000 --> 01:25:43.000
and that's a problem.

01:25:43.000 --> 01:25:47.000
But the bigger problem is that this is a license change.

01:25:47.000 --> 01:25:50.000
And if you are going to use something,

01:25:50.000 --> 01:25:52.000
you are agreeing to that license.

01:25:52.000 --> 01:25:56.000
If you upgrade Elasticsearch or Kibana to,

01:25:56.000 --> 01:25:59.000
I believe it was 7.11, if I recall,

01:25:59.000 --> 01:26:02.000
but if you upgrade, you are tacitly or otherwise,

01:26:02.000 --> 01:26:04.000
you are agreeing to this new license,

01:26:04.000 --> 01:26:07.000
as a PL or Elastic license.

01:26:07.000 --> 01:26:08.000
It doesn't matter.

01:26:08.000 --> 01:26:10.000
You're agreeing to that,

01:26:10.000 --> 01:26:12.000
and you are taking on new obligations for your company,

01:26:12.000 --> 01:26:14.000
for your organization.

01:26:14.000 --> 01:26:15.000
Are you aware of that?

01:26:15.000 --> 01:26:17.000
Do you know what you're taking on?

01:26:17.000 --> 01:26:19.000
Do you know the potential risks you might have,

01:26:19.000 --> 01:26:21.000
or maybe there are benefits?

01:26:21.000 --> 01:26:22.000
I don't know.

01:26:22.000 --> 01:26:25.000
But this is not something that you as a company

01:26:25.000 --> 01:26:27.000
can afford to ignore,

01:26:27.000 --> 01:26:30.000
because it can have huge ramifications to your code base.

01:26:30.000 --> 01:26:31.000
I see.

01:26:31.000 --> 01:26:34.000
So the side swipe is a big problem.

01:26:34.000 --> 01:26:36.000
The fact that so many people might upgrade,

01:26:36.000 --> 01:26:38.000
and unbeknownst to them,

01:26:38.000 --> 01:26:41.000
their agreement with the software that they're running

01:26:41.000 --> 01:26:43.000
and the companies involved has changed,

01:26:43.000 --> 01:26:46.000
is there no transparency to that change?

01:26:46.000 --> 01:26:48.000
Is it not something that people are aware of,

01:26:48.000 --> 01:26:50.000
or how does it play out?

01:26:50.000 --> 01:26:53.000
The only transparency really is going to be that blog post,

01:26:53.000 --> 01:26:55.000
or I guess there's like two blog posts now

01:26:55.000 --> 01:26:59.000
with Elastic finger-wagging at Amazon,

01:26:59.000 --> 01:27:04.000
and also screwing over their entire community and ecosystem.

01:27:04.000 --> 01:27:06.000
But hey, that's their strategic decision to make.

01:27:06.000 --> 01:27:09.000
They seem to think that was the right move for them,

01:27:09.000 --> 01:27:11.000
more power to them.

01:27:11.000 --> 01:27:14.000
Yeah, that's really the only warning.

01:27:14.000 --> 01:27:16.000
You're otherwise not going to know.

01:27:16.000 --> 01:27:19.000
As far as I know, I haven't obviously looked at the code,

01:27:19.000 --> 01:27:21.000
but it doesn't make any sense

01:27:21.000 --> 01:27:24.000
that there be some sort of a new click-through

01:27:24.000 --> 01:27:27.000
on Elasticsearch and Kibana, for instance.

01:27:27.000 --> 01:27:29.000
As you're installing them on your server,

01:27:29.000 --> 01:27:30.000
how are you going to confirm that,

01:27:30.000 --> 01:27:33.000
yes, I have seen that there is a new license,

01:27:33.000 --> 01:27:34.000
and yes, I agree with this new license.

01:27:34.000 --> 01:27:36.000
Nobody does that.

01:27:36.000 --> 01:27:37.000
Not for open source software,

01:27:37.000 --> 01:27:40.000
and especially not on the server side.

01:27:40.000 --> 01:27:43.000
So it's very likely people are going to upgrade

01:27:43.000 --> 01:27:46.000
and tacitly agree to this, whether they know it or not.

01:27:46.000 --> 01:27:49.000
Or maybe they know about this new license

01:27:49.000 --> 01:27:51.000
and they decide not to upgrade at all.

01:27:51.000 --> 01:27:54.000
Well, now you're not getting security updates

01:27:54.000 --> 01:27:57.000
to this software, to Elasticsearch, to Kibana.

01:27:57.000 --> 01:28:00.000
That's another potential risk to your company.

01:28:00.000 --> 01:28:03.000
Maybe you're using these things for free,

01:28:03.000 --> 01:28:06.000
and a great deal of people build a lot of cool stuff

01:28:06.000 --> 01:28:08.000
on top of the ELK stack.

01:28:08.000 --> 01:28:11.000
There's a reason why there's an acronym that we all know,

01:28:11.000 --> 01:28:14.000
the ELK stack. It is that popular.

01:28:14.000 --> 01:28:16.000
So a lot of people are building on this,

01:28:16.000 --> 01:28:18.000
and they might be building on the free version.

01:28:18.000 --> 01:28:20.000
Well, that free version is now going to get relicenced

01:28:20.000 --> 01:28:21.000
and you're going to be screwed.

01:28:21.000 --> 01:28:25.000
But if you're building a company on top of this open source software

01:28:25.000 --> 01:28:27.000
and your company relies upon it

01:28:27.000 --> 01:28:30.000
and you're not already paying for some sort of support,

01:28:30.000 --> 01:28:32.000
either from Elastic or someone else,

01:28:32.000 --> 01:28:35.000
you're also putting your company at risk in that way.

01:28:35.000 --> 01:28:39.000
So there's a lot of really important strategic things

01:28:39.000 --> 01:28:41.000
that people need to be considering

01:28:41.000 --> 01:28:43.000
when they are selecting open source software,

01:28:43.000 --> 01:28:45.000
and you need to remain aware

01:28:45.000 --> 01:28:48.000
of your entire free and open source software supply chain,

01:28:48.000 --> 01:28:50.000
because as we are seeing right here,

01:28:50.000 --> 01:28:52.000
it can shift out from under you.

01:28:52.000 --> 01:28:54.000
You can have license changes.

01:28:54.000 --> 01:28:56.000
You can have security problems.

01:28:56.000 --> 01:28:58.000
You can have maintainers who just, you know,

01:28:58.000 --> 01:28:59.000
peace out and they go away,

01:28:59.000 --> 01:29:03.000
and suddenly are using something that's completely unmaintained.

01:29:03.000 --> 01:29:05.000
So there's a lot of risk there for a company,

01:29:05.000 --> 01:29:08.000
and most companies I've worked with are completely unaware of this,

01:29:08.000 --> 01:29:12.000
and it's potentially a disaster waiting to happen.

01:29:12.000 --> 01:29:15.000
I mean, as we all know, this is what happened with,

01:29:15.000 --> 01:29:23.000
oh, that credit reporting thing starts with an E.

01:29:23.000 --> 01:29:24.000
Equifax.

01:29:24.000 --> 01:29:26.000
Equifax, thank you.

01:29:26.000 --> 01:29:29.000
Now, I've been saying Elastic so often, that's all I can think of.

01:29:29.000 --> 01:29:30.000
That's the only E in your brain.

01:29:30.000 --> 01:29:31.000
We're here for you.

01:29:31.000 --> 01:29:33.000
Exactly. Thank you, guys.

01:29:33.000 --> 01:29:36.000
Yeah, that was, Equifax was not paying attention

01:29:36.000 --> 01:29:38.000
to their open source software supply chain.

01:29:38.000 --> 01:29:41.000
You know, they had a piece of software,

01:29:41.000 --> 01:29:44.000
and I believe it may have been Apache Struts or something like that,

01:29:44.000 --> 01:29:47.000
that had been upgraded to fix a security hole,

01:29:47.000 --> 01:29:50.000
but they hadn't bothered to upgrade it internally

01:29:50.000 --> 01:29:52.000
because they weren't paying that much attention.

01:29:52.000 --> 01:29:53.000
Then they got compromised,

01:29:53.000 --> 01:29:56.000
and billions of people had their private information stolen.

01:29:56.000 --> 01:29:59.000
So if you're not paying attention to stuff like this,

01:29:59.000 --> 01:30:01.000
not only Elastic, but the larger picture,

01:30:01.000 --> 01:30:04.000
you are just one bad day away from being the next Equifax.

01:30:04.000 --> 01:30:06.000
Do you want to do that?

01:30:06.000 --> 01:30:09.000
Is there a right way that Elastic could have done this

01:30:09.000 --> 01:30:13.000
in terms of just forget the decision, the SSPL,

01:30:13.000 --> 01:30:15.000
but let's say I just want to change my license.

01:30:15.000 --> 01:30:17.000
Is there like a correct,

01:30:17.000 --> 01:30:19.000
do you have to start a new project with a new license?

01:30:19.000 --> 01:30:21.000
Is there like a best practices for changing a license

01:30:21.000 --> 01:30:25.000
that doesn't sweep out the rug from people potentially?

01:30:25.000 --> 01:30:29.000
For an open source project,

01:30:29.000 --> 01:30:31.000
there's obviously many different ways you can do it,

01:30:31.000 --> 01:30:33.000
and Elastic has their perspective,

01:30:33.000 --> 01:30:36.000
which is going to come from a very corporate perspective.

01:30:36.000 --> 01:30:38.000
We're looking to make money,

01:30:38.000 --> 01:30:41.000
and then the community will be coming from a different perspective.

01:30:41.000 --> 01:30:43.000
So you can have different approaches,

01:30:43.000 --> 01:30:46.000
but the one thing everyone should always do

01:30:46.000 --> 01:30:50.000
is be communicating with their community and their ecosystem.

01:30:50.000 --> 01:30:52.000
This caught everyone by surprise.

01:30:52.000 --> 01:30:56.000
That shows that Elastic is not respecting the community

01:30:56.000 --> 01:30:58.000
and the people who have been contributing

01:30:58.000 --> 01:31:01.000
and who rely on this software.

01:31:01.000 --> 01:31:04.000
So they have essentially looked at their ecosystem and said,

01:31:04.000 --> 01:31:05.000
yeah, we don't care.

01:31:05.000 --> 01:31:07.000
We don't care what you're doing

01:31:07.000 --> 01:31:11.000
because all we want to do is screw over Amazon

01:31:11.000 --> 01:31:14.000
and collateral damage be damned.

01:31:14.000 --> 01:31:15.000
So they should have communicated.

01:31:15.000 --> 01:31:18.000
They should have told people this is going to be coming.

01:31:18.000 --> 01:31:19.000
Maybe they should have done it,

01:31:19.000 --> 01:31:22.000
for instance, at version 8.0,

01:31:22.000 --> 01:31:27.000
rather than version from 7.10 to 7.11.

01:31:27.000 --> 01:31:28.000
Yeah, go to a major version.

01:31:28.000 --> 01:31:30.000
Maybe that would have been smarter.

01:31:30.000 --> 01:31:33.000
Maybe cut a major version right there.

01:31:33.000 --> 01:31:35.000
Just do that.

01:31:35.000 --> 01:31:39.000
Maybe you could have forked it internally

01:31:39.000 --> 01:31:42.000
and start developing internally

01:31:42.000 --> 01:31:45.000
and then leave the open source project alone

01:31:45.000 --> 01:31:47.000
for other people to build upon.

01:31:47.000 --> 01:31:50.000
And you can even push stuff upstream

01:31:50.000 --> 01:31:51.000
and pull stuff downstream.

01:31:51.000 --> 01:31:53.000
You can still benefit from that

01:31:53.000 --> 01:31:58.000
while having your proprietary internally developed software.

01:31:58.000 --> 01:31:59.000
You can still do that.

01:31:59.000 --> 01:32:02.000
I mean, there's lots of different options they could have done,

01:32:02.000 --> 01:32:04.000
but the one thing they should have done and did not

01:32:04.000 --> 01:32:08.000
was communicate with their ecosystem, with their community.

01:32:08.000 --> 01:32:12.000
They popped this on everyone and it was kind of rude.

01:32:12.000 --> 01:32:16.000
They violated the trust of their community

01:32:16.000 --> 01:32:19.000
and you can't really get that back at this point.

01:32:19.000 --> 01:32:22.000
So you kind of screwed the trust of your community

01:32:22.000 --> 01:32:24.000
and you've besmirched your brand,

01:32:24.000 --> 01:32:27.000
which is going to be incredibly difficult to fix.

01:32:27.000 --> 01:32:29.000
So somewhat to Elastic's credit,

01:32:29.000 --> 01:32:31.000
and maybe I'm wrong by even saying this,

01:32:31.000 --> 01:32:33.000
but it seems like they've gone through a lot.

01:32:33.000 --> 01:32:36.000
When Shay had mentioned, the CTO of Elastic mentioned,

01:32:36.000 --> 01:32:41.000
the litigation and the behind-the-scenes discussions.

01:32:41.000 --> 01:32:42.000
I think from the outside,

01:32:42.000 --> 01:32:44.000
it might be easy to say screwed over,

01:32:44.000 --> 01:32:47.000
but the nuance there I think is they've gone through a lot

01:32:47.000 --> 01:32:51.000
and maybe they're in some ways quite wrong and reactionary,

01:32:51.000 --> 01:32:52.000
but I'd say in some ways,

01:32:52.000 --> 01:32:55.000
at least depicted by these tweets and this post,

01:32:55.000 --> 01:32:56.000
maybe they went about it wrong,

01:32:56.000 --> 01:33:00.000
but their intention was to try to fix this problem,

01:33:00.000 --> 01:33:02.000
which is very difficult to fix because

01:33:02.000 --> 01:33:06.000
our permissive license does allow this competition

01:33:06.000 --> 01:33:07.000
and maybe from a business standpoint,

01:33:07.000 --> 01:33:09.000
they've sort of hit their lengths

01:33:09.000 --> 01:33:12.000
with being able to take that in quotes,

01:33:12.000 --> 01:33:15.000
their quotes at least abuse from Amazon

01:33:15.000 --> 01:33:18.000
and they're just trying to tread water

01:33:18.000 --> 01:33:20.000
to some degree with the scenario.

01:33:22.000 --> 01:33:25.000
I know that this is a podcast and so people can't see me,

01:33:25.000 --> 01:33:27.000
but picture me rolling my eyes right now.

01:33:30.000 --> 01:33:33.000
So the trademark thing aside, that's a different matter.

01:33:33.000 --> 01:33:36.000
That lawsuit for the trademark is a separate issue.

01:33:36.000 --> 01:33:41.000
If they are licensing as a reaction to that,

01:33:41.000 --> 01:33:44.000
then it's essentially them stamping their little princess foot,

01:33:44.000 --> 01:33:47.000
taking their ball and going home

01:33:47.000 --> 01:33:52.000
and it's a childish reaction to a trademark infringement lawsuit,

01:33:52.000 --> 01:33:55.000
which I do think that they are,

01:33:55.000 --> 01:33:58.000
I mean, they were totally justified in that lawsuit

01:33:58.000 --> 01:34:00.000
for their trademark infringement against Amazon.

01:34:00.000 --> 01:34:02.000
I have absolutely no problem with that.

01:34:02.000 --> 01:34:05.000
I do think that Amazon was rolling the dice on that one

01:34:05.000 --> 01:34:09.000
and they lost and I think they will lose

01:34:09.000 --> 01:34:11.000
in that particular trademark thing,

01:34:11.000 --> 01:34:12.000
but I am not a lawyer.

01:34:12.000 --> 01:34:16.000
So that's just my advice.

01:34:16.000 --> 01:34:18.000
That's just your take.

01:34:18.000 --> 01:34:21.000
So, but to be licensing,

01:34:21.000 --> 01:34:24.000
if they screwed up at the very beginning

01:34:24.000 --> 01:34:28.000
by not understanding what a permissive license allows

01:34:28.000 --> 01:34:31.000
and what that is, they screwed that up.

01:34:31.000 --> 01:34:35.000
They put it out there under a permissive Apache II license

01:34:35.000 --> 01:34:38.000
without thinking somebody can now build

01:34:38.000 --> 01:34:42.000
a better product offering on top of this very easily.

01:34:42.000 --> 01:34:45.000
And if they're building a better product offering than we are,

01:34:45.000 --> 01:34:48.000
I'm sorry, folks, we live in a capitalistic system.

01:34:48.000 --> 01:34:51.000
That's just the way these things go.

01:34:51.000 --> 01:34:55.000
It's your fault for releasing your intellectual property

01:34:55.000 --> 01:34:58.000
under that sort of license and not understanding

01:34:58.000 --> 01:34:59.000
what it's going to mean.

01:34:59.000 --> 01:35:01.000
And if you did understand,

01:35:01.000 --> 01:35:05.000
not taking enough measures to make sure that

01:35:05.000 --> 01:35:08.000
even if that does happen, you can still be successful.

01:35:08.000 --> 01:35:11.000
And frankly, if you look at their numbers and their financials,

01:35:11.000 --> 01:35:13.000
they are doing quite well.

01:35:13.000 --> 01:35:16.000
So what are they looking to do?

01:35:16.000 --> 01:35:19.000
Are they going to looking to grab all these people

01:35:19.000 --> 01:35:21.000
who are using the Amazon ecosystem

01:35:21.000 --> 01:35:24.000
and move them over to Elasticsearch and to Elastic?

01:35:24.000 --> 01:35:28.000
I don't think that's going to happen from a market perspective.

01:35:28.000 --> 01:35:31.000
So it's very difficult to see strategically

01:35:31.000 --> 01:35:34.000
why they thought this might have been a good move

01:35:34.000 --> 01:35:37.000
to just give their entire ecosystem the finger

01:35:37.000 --> 01:35:39.000
while trying to take a shot at Amazon.

01:35:39.000 --> 01:35:44.000
It just, it kind of seems, I don't know, amateurish.

01:35:44.000 --> 01:35:46.000
And I would have expected better of a company

01:35:46.000 --> 01:35:48.000
that's been around for this long.

01:35:48.000 --> 01:35:51.000
So let's say I was a happy Elasticsearch user a month ago.

01:35:51.000 --> 01:35:53.000
And here I am today and I'm like,

01:35:53.000 --> 01:35:54.000
Vicki, what do I do?

01:35:54.000 --> 01:35:56.000
They change the license on me.

01:35:56.000 --> 01:35:57.000
I don't know what to do.

01:35:57.000 --> 01:35:59.000
Do you say, what do you say to that?

01:35:59.000 --> 01:36:01.000
Go to the Amazon fork or?

01:36:01.000 --> 01:36:04.000
I will say, I don't know, it depends.

01:36:04.000 --> 01:36:07.000
Of course, I have been known to do a fair bit of consulting.

01:36:07.000 --> 01:36:11.000
And so any consultant who isn't starting out with it depends

01:36:11.000 --> 01:36:15.000
is trying to sell you something.

01:36:15.000 --> 01:36:16.000
So it totally depends.

01:36:16.000 --> 01:36:17.000
What are your needs?

01:36:17.000 --> 01:36:20.000
How much do you rely on that Elasticsearch

01:36:20.000 --> 01:36:21.000
or on that Cabana?

01:36:21.000 --> 01:36:24.000
We have to remember there are two really big projects here

01:36:24.000 --> 01:36:25.000
that have been relicensed.

01:36:25.000 --> 01:36:27.000
It's not just Elasticsearch.

01:36:27.000 --> 01:36:30.000
So what is the strategic value

01:36:30.000 --> 01:36:33.000
and the architectural value of that piece of software

01:36:33.000 --> 01:36:36.000
to your product, to your company?

01:36:36.000 --> 01:36:37.000
Look at that first.

01:36:37.000 --> 01:36:39.000
What is the niche it is filling?

01:36:39.000 --> 01:36:41.000
And then will anything else fill it?

01:36:41.000 --> 01:36:44.000
And it could be that as you evaluate this and you look at it,

01:36:44.000 --> 01:36:48.000
it makes sense to just pay Elastic for their software.

01:36:48.000 --> 01:36:49.000
Fine.

01:36:49.000 --> 01:36:52.000
That is a valid choice and I support you doing that.

01:36:52.000 --> 01:36:54.000
I want your company to be successful.

01:36:54.000 --> 01:36:57.000
But you might also find that there are other alternatives.

01:36:57.000 --> 01:37:00.000
There are a couple of forks now.

01:37:00.000 --> 01:37:04.000
There's, as we all know, the thing that kicked all this off,

01:37:04.000 --> 01:37:07.000
which is Amazon's open distribution for Elasticsearch

01:37:07.000 --> 01:37:10.000
from the last time Elasticsearch did something kind of goofy

01:37:10.000 --> 01:37:12.000
in their open source world.

01:37:12.000 --> 01:37:17.000
And then they have their new totally open distribution

01:37:17.000 --> 01:37:19.000
that Amazon just forked.

01:37:19.000 --> 01:37:24.000
And I think there's a third one, which is from love.io,

01:37:24.000 --> 01:37:25.000
something like that.

01:37:25.000 --> 01:37:28.000
There's at least one other version out there.

01:37:28.000 --> 01:37:30.000
There may be others.

01:37:30.000 --> 01:37:32.000
And maybe you don't need Elasticsearch at all.

01:37:32.000 --> 01:37:34.000
Maybe you just need Lucene.

01:37:34.000 --> 01:37:37.000
You know, if you're using Kibana, yeah, exactly.

01:37:37.000 --> 01:37:39.000
Maybe Grafana would be better for you.

01:37:39.000 --> 01:37:40.000
I don't know.

01:37:40.000 --> 01:37:42.000
It depends upon your needs.

01:37:42.000 --> 01:37:45.000
Don't go doing something just because it's what everyone else is doing.

01:37:45.000 --> 01:37:50.000
Look at your needs, your company, your architecture, your budget,

01:37:50.000 --> 01:37:53.000
your staffing, who knows what software.

01:37:53.000 --> 01:37:55.000
Do you have to ramp up on something new?

01:37:55.000 --> 01:37:57.000
There's lots of variables in there.

01:37:57.000 --> 01:37:59.000
And so I can't give a one size fits all answer.

01:37:59.000 --> 01:38:01.000
I was hoping I could just ask you once and the whole community

01:38:01.000 --> 01:38:02.000
could just listen to you.

01:38:02.000 --> 01:38:06.000
You know, let's multicast the solution.

01:38:06.000 --> 01:38:09.000
Oh, no, there is no single solution to any of this sort of stuff

01:38:09.000 --> 01:38:12.000
because every one of these companies is going to be different.

01:38:12.000 --> 01:38:15.000
If they were all the same, then we wouldn't need them all, right?

01:38:15.000 --> 01:38:19.000
We'd have one market, one company, boom, you're done, but we don't have it.

01:38:19.000 --> 01:38:20.000
One license.

01:38:20.000 --> 01:38:21.000
One license.

01:38:21.000 --> 01:38:23.000
Gosh, wouldn't that be?

01:38:23.000 --> 01:38:24.000
Oh my gosh.

01:38:24.000 --> 01:38:25.000
That would be so easy.

01:38:25.000 --> 01:38:26.000
That would be so nice.

01:38:26.000 --> 01:38:27.000
But that's not the way to do it.

01:38:27.000 --> 01:38:29.000
We would need a consultant at that point.

01:38:29.000 --> 01:38:31.000
Well, yeah, but I do corporate strategy.

01:38:31.000 --> 01:38:32.000
It's not simply about licensing.

01:38:32.000 --> 01:38:34.000
It's about so much more than that.

01:38:34.000 --> 01:38:36.000
That's just a tiny slipper.

01:38:36.000 --> 01:38:37.000
Well, Vicki, we want to respect your time.

01:38:37.000 --> 01:38:39.000
Is there anything else that you want to share that we didn't ask you,

01:38:39.000 --> 01:38:41.000
any questions that you just want to put this out there

01:38:41.000 --> 01:38:43.000
that we haven't asked you a question to at least?

01:38:43.000 --> 01:38:44.000
No, not really.

01:38:44.000 --> 01:38:47.000
I think you've covered pretty much the highlights of the stuff

01:38:47.000 --> 01:38:50.000
and it'll be interesting to see what others have to say.

01:38:50.000 --> 01:38:53.000
I don't typically listen to podcasts,

01:38:53.000 --> 01:38:55.000
but maybe I'll actually listen to this one.

01:38:55.000 --> 01:38:56.000
There we go.

01:38:56.000 --> 01:38:58.000
Well, you might hear me thank you at least once

01:38:58.000 --> 01:39:00.000
before I thank you right now for your time,

01:39:00.000 --> 01:39:02.000
but thank you really for your time

01:39:02.000 --> 01:39:04.000
and for this blog post that you shared.

01:39:04.000 --> 01:39:07.000
It was very helpful for us to sort of get a different perspective

01:39:07.000 --> 01:39:10.000
on these concerns around open source.

01:39:10.000 --> 01:39:12.000
I quoted a couple of things you'd mentioned in your blog post

01:39:12.000 --> 01:39:14.000
in a conversation with Heather Meeker,

01:39:14.000 --> 01:39:16.000
which is a part of the show too, but thank you for your post

01:39:16.000 --> 01:39:18.000
and also today, thank you for your time.

01:39:18.000 --> 01:39:19.000
We appreciate it.

01:39:19.000 --> 01:39:20.000
Thanks again.

01:39:24.000 --> 01:39:27.000
Last up on this epic show is Marcus Tengvist,

01:39:27.000 --> 01:39:31.000
who self describes as an everyday web developer from Sweden.

01:39:31.000 --> 01:39:32.000
Let's do this.

01:39:32.000 --> 01:39:34.000
Please tell us who you are

01:39:34.000 --> 01:39:36.000
and your vantage point on the software world.

01:39:36.000 --> 01:39:41.000
Yeah, well, I'm just a normal everyday web developer from Sweden.

01:39:41.000 --> 01:39:42.000
Awesome.

01:39:42.000 --> 01:39:45.000
My name is Marcus, so I work for a small company

01:39:45.000 --> 01:39:47.000
no one has heard of.

01:39:47.000 --> 01:39:48.000
Yes.

01:39:48.000 --> 01:39:49.000
Yet.

01:39:49.000 --> 01:39:50.000
There you go.

01:39:50.000 --> 01:39:51.000
Yeah, exactly.

01:39:51.000 --> 01:39:55.000
How did you first hear about the news of Elastics re-licensing?

01:39:55.000 --> 01:39:58.000
Just curious, like where do you get your info?

01:39:58.000 --> 01:40:03.000
Yeah, well, I read the article from Elastic on hacking news,

01:40:03.000 --> 01:40:06.000
so I saw them posting like,

01:40:06.000 --> 01:40:09.000
this is not okay or something in those lines.

01:40:09.000 --> 01:40:10.000
Awesome.

01:40:10.000 --> 01:40:12.000
Well, we're gathering perspectives from all over the community,

01:40:12.000 --> 01:40:16.000
so it's awesome to have just a regular everyday web developer

01:40:16.000 --> 01:40:18.000
here on the show, so welcome.

01:40:18.000 --> 01:40:19.000
Thank you.

01:40:19.000 --> 01:40:20.000
Yeah, what do you think?

01:40:20.000 --> 01:40:21.000
What are your thoughts on the whole situation?

01:40:21.000 --> 01:40:23.000
There's lots of nuance, lots of ins, lots of outs.

01:40:23.000 --> 01:40:24.000
Yeah, exactly, exactly.

01:40:24.000 --> 01:40:26.000
Well, I read a lot of comments

01:40:26.000 --> 01:40:29.000
and I read the Amazon article as well

01:40:29.000 --> 01:40:34.000
when they posted about like, forking the repo

01:40:34.000 --> 01:40:37.000
after they re-licensed Elastic.

01:40:37.000 --> 01:40:40.000
And I really don't even use Elastic

01:40:40.000 --> 01:40:43.000
or Amazon Web Services that much.

01:40:43.000 --> 01:40:47.000
But I think I care a lot about open source in general.

01:40:47.000 --> 01:40:49.000
So I'm with you.

01:40:49.000 --> 01:40:50.000
I don't use AWS.

01:40:50.000 --> 01:40:51.000
I don't use Elastic.

01:40:51.000 --> 01:40:53.000
I also care a lot about open source.

01:40:53.000 --> 01:40:54.000
What is it about open source that you like

01:40:54.000 --> 01:40:57.000
or that you care about and are trying to preserve

01:40:57.000 --> 01:40:59.000
or be a part of?

01:40:59.000 --> 01:41:00.000
That's a good question.

01:41:00.000 --> 01:41:05.000
I think it's a matter of fact that I can use stuff for free

01:41:05.000 --> 01:41:08.000
and like charged with colleagues

01:41:08.000 --> 01:41:13.000
and people all around the world without any restrictions.

01:41:13.000 --> 01:41:18.000
No one can forbid me from using stuff which I want to use.

01:41:18.000 --> 01:41:22.000
So when you first heard about the re-license to the SSPL,

01:41:22.000 --> 01:41:23.000
what was your hot take?

01:41:23.000 --> 01:41:25.000
What was your emotional reaction?

01:41:25.000 --> 01:41:27.000
Were you indifferent?

01:41:27.000 --> 01:41:28.000
Were you mad at Elastic?

01:41:28.000 --> 01:41:30.000
Did it feel like it's no longer open source

01:41:30.000 --> 01:41:34.000
or do you still think it's still in the spirit of open source?

01:41:34.000 --> 01:41:40.000
Well, I think I'm actually very much on the Elastic side for me.

01:41:40.000 --> 01:41:41.000
Okay.

01:41:41.000 --> 01:41:44.000
I saw a lot of comments on hacking news that were like,

01:41:44.000 --> 01:41:47.000
oh, Amazon is all in their rights and yada yada.

01:41:47.000 --> 01:41:52.000
But they have actually done the same with MongoDB

01:41:52.000 --> 01:41:54.000
like two years ago, I guess.

01:41:54.000 --> 01:41:55.000
Right.

01:41:55.000 --> 01:41:59.000
Where they pushed them to basically re-license

01:41:59.000 --> 01:42:06.000
because they simply don't want to pay, I guess, their fees.

01:42:06.000 --> 01:42:13.000
I think Amazon could be a bit more friendly

01:42:13.000 --> 01:42:15.000
towards those open source companies

01:42:15.000 --> 01:42:19.000
because right now when they use their products for free

01:42:19.000 --> 01:42:22.000
and maybe they hurt the possibilities

01:42:22.000 --> 01:42:25.000
of future open source companies going forward.

01:42:25.000 --> 01:42:28.000
So if you were an Elastic user, an Elastic search user?

01:42:28.000 --> 01:42:30.000
Yeah, I have been in the past.

01:42:30.000 --> 01:42:31.000
You have been.

01:42:31.000 --> 01:42:33.000
But if you were today, like when you read the re-license,

01:42:33.000 --> 01:42:35.000
you would have been pro-Elastic.

01:42:35.000 --> 01:42:38.000
Those would not have concerned you or offended you

01:42:38.000 --> 01:42:41.000
or changed the way you looked at Elastic search.

01:42:41.000 --> 01:42:45.000
Well, I think it's sad that they have to do it,

01:42:45.000 --> 01:42:50.000
that they have to re-license, that they feel like they need to.

01:42:50.000 --> 01:42:56.000
And that's what makes me think that their move is kind of okay anyway

01:42:56.000 --> 01:42:58.000
because I would still support them

01:42:58.000 --> 01:43:02.000
and I would rather use them than the fork created by Amazon.

01:43:02.000 --> 01:43:03.000
Yeah.

01:43:03.000 --> 01:43:06.000
So the fork still exists under the new fork

01:43:06.000 --> 01:43:08.000
which is created by Amazon

01:43:08.000 --> 01:43:11.000
and trying to carry on from that point forward.

01:43:11.000 --> 01:43:14.000
I think it still exists under the previous license

01:43:14.000 --> 01:43:18.000
but you would continue with Elastic

01:43:18.000 --> 01:43:20.000
versus the Elastic search and Kibana forks

01:43:20.000 --> 01:43:22.000
that are run by AWS now.

01:43:22.000 --> 01:43:28.000
Exactly. And that's simply because I believe in their vision

01:43:28.000 --> 01:43:30.000
or I believe in their product

01:43:30.000 --> 01:43:34.000
and I think Amazon is going to have a hard time keeping up

01:43:34.000 --> 01:43:36.000
or maybe they won't, I'm not sure.

01:43:36.000 --> 01:43:37.000
Time will tell on that.

01:43:37.000 --> 01:43:39.000
Yeah, time will tell, of course.

01:43:39.000 --> 01:43:44.000
But the same goes with MongoDB and their documentDB, I guess.

01:43:44.000 --> 01:43:48.000
I still think MongoDB is a superior choice

01:43:48.000 --> 01:43:52.000
just because it's their project and their vision.

01:43:52.000 --> 01:43:55.000
So you're not an open source purist then?

01:43:55.000 --> 01:43:56.000
Not at all.

01:43:56.000 --> 01:43:57.000
Not at all.

01:43:57.000 --> 01:44:01.000
More pragmatic. More about free and open and available.

01:44:01.000 --> 01:44:03.000
Have you thought about any of the other licenses

01:44:03.000 --> 01:44:05.000
like the source available licenses?

01:44:05.000 --> 01:44:06.000
Are you cool with that?

01:44:06.000 --> 01:44:08.000
And these other things like business source licensing.

01:44:08.000 --> 01:44:10.000
Surely these are things that you've read about

01:44:10.000 --> 01:44:12.000
being in the open source world.

01:44:12.000 --> 01:44:14.000
Are these things that you're also just like

01:44:14.000 --> 01:44:16.000
whatever you want to license your code as,

01:44:16.000 --> 01:44:19.000
use it for free and contribute back somehow.

01:44:19.000 --> 01:44:20.000
It's cool?

01:44:20.000 --> 01:44:22.000
Yeah, I think it's cool.

01:44:22.000 --> 01:44:25.000
Like every license is their own choice.

01:44:25.000 --> 01:44:28.000
If you want to license your work in a certain way,

01:44:28.000 --> 01:44:30.000
it's your choice.

01:44:30.000 --> 01:44:34.000
And if you want to share your work with others,

01:44:34.000 --> 01:44:37.000
that's just a positive thing.

01:44:37.000 --> 01:44:42.000
And I feel in this case like Amazon is hurting

01:44:42.000 --> 01:44:44.000
the possibility to do that.

01:44:44.000 --> 01:44:46.000
Any other thoughts?

01:44:46.000 --> 01:44:50.000
No, I think people that are on like Amazon side

01:44:50.000 --> 01:44:56.000
should maybe read the article from Frederick Lourney

01:44:56.000 --> 01:44:58.000
or something like that.

01:44:58.000 --> 01:44:59.000
Okay.

01:44:59.000 --> 01:45:02.000
Which is like on TechCrunch called

01:45:02.000 --> 01:45:05.000
AVS gives open source to middle finger.

01:45:05.000 --> 01:45:10.000
I think that's an article that sums up my views pretty well.

01:45:10.000 --> 01:45:11.000
Awesome.

01:45:11.000 --> 01:45:13.000
Hand that off to me and we'll include in the show notes

01:45:13.000 --> 01:45:14.000
for everybody.

01:45:14.000 --> 01:45:17.000
Appreciate you hopping on and sharing your opinion with us.

01:45:17.000 --> 01:45:45.000
Thank you.

01:45:45.000 --> 01:45:47.000
And of course, huge thanks to our partners,

01:45:47.000 --> 01:45:49.000
Linode Fastly and LaunchDarkly.

01:45:49.000 --> 01:45:52.000
Also, thanks to Brake Master Cylinder for making all of our awesome beats.

01:45:52.000 --> 01:45:54.000
And of course, thanks to you for listening.

01:45:54.000 --> 01:45:56.000
We appreciate your attention.

01:45:56.000 --> 01:45:57.000
We appreciate you listening.

01:45:57.000 --> 01:46:00.000
And one more step you could take is to join the community.

01:46:00.000 --> 01:46:02.000
Changelaw.com slash community is free to join.

01:46:02.000 --> 01:46:04.000
Come hang with us in Slack.

01:46:04.000 --> 01:46:06.000
Call this place your home.

01:46:06.000 --> 01:46:08.000
Changelaw.com slash community.

01:46:08.000 --> 01:46:09.000
That's it for this week.

01:46:09.000 --> 01:46:37.000
We'll see you next week.

01:46:39.000 --> 01:46:41.000
Thank you.

