WEBVTT

00:00.000 --> 00:04.120
This week on The Change Law, we're talking about the recent falling out between Elastic

00:04.120 --> 00:08.800
and AWS around the re-licensing of Elasticsearch and Kibana.

00:08.800 --> 00:13.640
Like many in the community, we've been watching this very closely, here's the TLDR for context.

00:13.640 --> 00:19.000
Last month, on January 21, Elastic posted a blog post sharing their concerns, with Amazon

00:19.000 --> 00:23.720
and AWS misleading and confusing the community saying, quote, they have been doing things

00:23.720 --> 00:30.360
that we think are just not okay since 2015 and it has only gotten worse, end quote.

00:30.360 --> 00:35.040
This led them to re-license Elasticsearch and Kibana with a dual license, a proprietary

00:35.040 --> 00:40.400
license and the server-side public license, also known as the SSPL.

00:40.400 --> 00:44.960
Of course, AWS responded two days later stating they are quote, stepping up for a truly open

00:44.960 --> 00:49.440
source Elasticsearch, end quote, and shared their plans to create and maintain forks of

00:49.440 --> 00:54.000
Elasticsearch and Kibana based on the latest ALV2 license code bases.

00:54.000 --> 00:59.040
There is, of course, a ton of detail and nuance beneath the surface here, so we invited a

00:59.040 --> 01:01.680
bunch of folks on the show today to share their perspective.

01:01.680 --> 01:05.920
You'll hear from Adam Jacob, co-founder and board member of Chef, Heather Meeker,

01:05.920 --> 01:12.200
open source lawyer and the author of the SSPL license, Manish John, founder and CTO at Dgraph

01:12.200 --> 01:19.240
Labs, Paul Diggs, co-founder and CTO at Influx Data, Vicky Bresor, open source and free software

01:19.240 --> 01:24.680
business strategist, and last but not least, Marcus Tinkvist, an everyday web developer

01:24.680 --> 01:25.680
from Sweden.

01:25.680 --> 01:29.120
Huge thanks to our partners Linode, Fastly, and LaunchDarkly.

01:29.120 --> 01:30.760
Linode is our cloud of choice.

01:30.760 --> 01:33.320
Check them out at linode.com slash changelog.

01:33.320 --> 01:35.260
Our bandwidth is provided by Fastly.

01:35.260 --> 01:39.880
Check them out at fastly.com and our feature flags are powered by LaunchDarkly.

01:39.880 --> 01:47.360
Learn more at launchdarkly.com.

01:47.360 --> 01:52.080
Linode is simple, affordable and accessible cloud computing the developers trust.

01:52.080 --> 01:53.720
Linode is our cloud of choice.

01:53.720 --> 01:58.400
We trust them and we think you should build anything you're working on, a fun side project

01:58.400 --> 02:01.260
or that next big info move at work with Linode.

02:01.260 --> 02:04.280
The best part, you can get started on Linode with $100 in free credit.

02:04.280 --> 02:11.840
Get all the details at linode.com slash changelog or text changelog to 474747 and get instant

02:11.840 --> 02:32.080
access to that $100 in free credit again, linode.com slash changelog.

02:32.080 --> 02:33.080
What's up?

02:33.080 --> 02:34.080
Welcome back.

02:34.080 --> 02:35.080
We have an awesome show today.

02:35.080 --> 02:40.400
We're here to get community reactions around the elastic versus AWS situation and the SSP

02:40.400 --> 02:47.440
license change of elastic search and Kibana elastic re-license with the SSPL and there's

02:47.440 --> 02:51.000
a few people on this show that believe they went about that license change the wrong way,

02:51.000 --> 02:53.520
but this is not the beginning of the story.

02:53.520 --> 02:55.420
This conversation has been going on for a while.

02:55.420 --> 03:00.960
In fact, Adam Jacob brought up the subject of elastic and AWS on episode 353 of this

03:00.960 --> 03:04.920
show on that episode, we talked with Adam about the war for the soul of open source

03:04.920 --> 03:08.560
and the title of that episode could not have been more prophetic to kick things off or

03:08.560 --> 03:13.100
going back to that conversation with Adam for context, Adam is co-founder and board

03:13.100 --> 03:17.220
member of chef and we're talking about business models and how they correlate to open source

03:17.220 --> 03:23.120
business models and how from Adam's perspective, the AWS is the azures and the Google clouds

03:23.120 --> 03:24.120
of the world.

03:24.120 --> 03:29.000
They provide a humongous marketing funnel for open source businesses like Mongo and

03:29.000 --> 03:30.000
elastic.

03:30.000 --> 03:31.200
Here's the conversation with Adam.

03:31.200 --> 03:34.520
Let's talk about the business challenges commercial open source companies face.

03:34.520 --> 03:38.680
You said earlier in the call that things are thriving now and we see elastic and others

03:38.680 --> 03:42.600
out there thriving as well that have been in similar situations as chef.

03:42.600 --> 03:44.200
Talk about the business side of things for chef.

03:44.200 --> 03:47.640
I mean, I think in order to really go deeper into business, we got to like just set some

03:47.640 --> 03:50.120
ground rules for like how we think about business.

03:50.120 --> 03:55.400
So like how I think about it and how I think a lot of people in the sort of modern era

03:55.400 --> 04:00.080
of software startups think about it is, you know, in the smallest nutshell, you can imagine

04:00.080 --> 04:02.440
that you have this funnel, right?

04:02.440 --> 04:06.160
And at the top of the funnel is everybody who might, could ever use your product, right?

04:06.160 --> 04:08.840
So every possible person who would ever care.

04:08.840 --> 04:10.440
So that's your target market.

04:10.440 --> 04:16.240
The bottom of the funnel is customers, people who pay you money for the privilege.

04:16.240 --> 04:19.320
And what you're trying to do is get people from the top of the funnel to the bottom of

04:19.320 --> 04:20.320
the funnel, right?

04:20.320 --> 04:22.800
It's just how many people at the top can I push to the bottom?

04:22.800 --> 04:27.120
And there's a ratio there where, you know, you want that number to be as high as possible.

04:27.120 --> 04:29.960
You'd love to get a hundred percent of them, you know that you want, right?

04:29.960 --> 04:34.320
And so you're, you're trying to just extract dollar bills from the top to the bottom.

04:34.320 --> 04:38.440
There's a bunch more we could go into in terms of like metrics and how, you know, recurring

04:38.440 --> 04:43.160
revenue and all kinds of stuff, but sort of the TLDR there is people at the top, money

04:43.160 --> 04:44.160
at the bottom.

04:44.160 --> 04:48.880
So with open source, there really, we talk about it as an open source business model,

04:48.880 --> 04:53.040
but that's wrong in the same way that like DevOps isn't a job title.

04:53.040 --> 04:56.680
So like you can't, DevOps isn't a job title, still isn't a job title.

04:56.680 --> 04:59.680
It never was a job title, but we lost the war, you know?

04:59.680 --> 05:01.960
Like there's plenty of DevOps engineers in the world.

05:01.960 --> 05:06.240
And so the idea that that's not a thing, it doesn't matter that I'm a pedant about it,

05:06.240 --> 05:07.240
right?

05:07.240 --> 05:08.920
The same thing's true in open source business models.

05:08.920 --> 05:10.560
There is no open source business model.

05:10.560 --> 05:14.320
There are business models and then there is open source and they're two very different,

05:14.320 --> 05:15.320
very separate things.

05:15.320 --> 05:18.400
There is nothing unique about open source and business.

05:18.400 --> 05:19.440
Business is business.

05:19.440 --> 05:21.980
You get people from the top of the funnel to the bottom of the funnel.

05:21.980 --> 05:27.060
You either do that with a unit economics that make you money or don't make you money.

05:27.060 --> 05:30.600
If they make you money, then you can pour more dollar bills into the acquisition of

05:30.600 --> 05:33.760
people at the top of the funnel to get to the bottom.

05:33.760 --> 05:37.880
Even if that means you don't turn a net profit and still be a great business because as soon

05:37.880 --> 05:41.560
as you stop burning money to acquire more stuff at the top, but you make a lot of money

05:41.560 --> 05:42.880
at the bottom, right?

05:42.880 --> 05:46.840
And so in open source, we talk about open source business models.

05:46.840 --> 05:52.120
What we really are talking about is how do I create a channel at the top of the funnel?

05:52.120 --> 05:56.160
So people come in in multiple different ways and we talk about those as channels.

05:56.160 --> 06:00.360
So one channel will be, I'm an open source user of your software.

06:00.360 --> 06:04.080
I download MongoDB, I download Redis, I used it.

06:04.080 --> 06:08.720
Therefore I'm in the open source channel to the bottom of the funnel, right?

06:08.720 --> 06:16.160
Another channel would be my boss, the CIO heard about Redis in CIO magazine, tells me

06:16.160 --> 06:18.520
you should use Redis, right?

06:18.520 --> 06:21.920
Now I'm in a very different channel than the open source channel, right?

06:21.920 --> 06:28.080
Now I'm in an enterprise or like I get a cold email from a rep that says, have you heard

06:28.080 --> 06:30.280
about Redis Labs, right?

06:30.280 --> 06:31.800
That's a different channel, right?

06:31.800 --> 06:33.040
So we have all these different channels.

06:33.040 --> 06:37.340
There's a partner channel where like maybe the guy at Pivotal who was consulting on your

06:37.340 --> 06:40.680
Cloud Foundry deployment tells you that you should use Redis.

06:40.680 --> 06:42.520
That's a partner channel, right?

06:42.520 --> 06:46.120
So like we have all these different channels that people come into our businesses through,

06:46.120 --> 06:47.120
right?

06:47.120 --> 06:48.120
This is true of every business.

06:48.120 --> 06:51.640
It's again, it's not unique to open source, but that open source channel is interesting

06:51.640 --> 06:55.280
because it's humongous, right?

06:55.280 --> 07:01.520
If you're a successful open source project, that channel is full of people, right?

07:01.520 --> 07:03.640
Because lots of people are using the software.

07:03.640 --> 07:06.380
That's why it's successful open source software.

07:06.380 --> 07:09.640
So it kind of dwarfs the others in pure numbers, right?

07:09.640 --> 07:13.680
Just the sheer magnitude of what's possible is really high.

07:13.680 --> 07:20.340
And so when we're designing and thinking about our businesses, what tends to happen is we

07:20.340 --> 07:25.400
think about the revenue that that channel produces as belonging to us, right?

07:25.400 --> 07:30.040
If I'm the chef people, I look at that channel and I go, any chef user belongs to me.

07:30.040 --> 07:35.080
And if there's competition in that channel, I don't like it because it means somebody

07:35.080 --> 07:41.120
else can compete with me to monetize the people that are at the top of the funnel, right?

07:41.120 --> 07:49.560
So a good example here is if I'm a MongoDB and I sell Atlas, which is their hosted SaaS

07:49.560 --> 07:58.040
product for MongoDB, and Amazon and Microsoft are both going to offer MongoDB as a service,

07:58.040 --> 08:02.760
that competes with me to monetize the bottom of the MongoDB funnel, right?

08:02.760 --> 08:06.240
I'm MongoDB, make this investment at the top of the channel.

08:06.240 --> 08:12.800
I expect a return at the bottom and now they're competing with me in the bottom.

08:12.800 --> 08:18.160
And this comes back to, you know, how do you feel about that competition is the question.

08:18.160 --> 08:22.280
Because in one point of view, you're like, well, competition sucks, right?

08:22.280 --> 08:25.240
I'm the one who put all the money into building it.

08:25.240 --> 08:27.200
I'm the one who did all of this stuff.

08:27.200 --> 08:30.560
And so you look at this thing and you're like, I deserve the money at the bottom of this

08:30.560 --> 08:31.560
channel.

08:31.560 --> 08:34.240
Well, flip that over though.

08:34.240 --> 08:40.000
The value of the channel is that it's massively huge, that it's adoption, it's the size of

08:40.000 --> 08:45.080
the number of users is why the open source channel was valuable in the first place.

08:45.080 --> 08:53.120
If Amazon or Microsoft create services that sell what I sell, what's the impact at the

08:53.120 --> 08:54.920
top of the channel, right?

08:54.920 --> 09:01.080
What's that do to cement MongoDB as an excellent choice for users at the top of the channel,

09:01.080 --> 09:02.080
right?

09:02.080 --> 09:05.400
The answer is it jacks it up, right?

09:05.400 --> 09:09.800
Like Amazon has a Chef service, they sell it for money, they do rev-option, right?

09:09.800 --> 09:13.720
So they sell what used to be my proprietary software, but now my distribution.

09:13.720 --> 09:18.320
You can buy it from Amazon as a service directly from Amazon, we do rev sharing together, Amazon

09:18.320 --> 09:20.080
runs and maintains that service.

09:20.080 --> 09:24.520
I promise you that my channel got bigger, my open source channel got bigger when they

09:24.520 --> 09:25.520
did that, right?

09:25.520 --> 09:29.920
The fact that that button exists meant more people were willing to use Chef than they

09:29.920 --> 09:31.040
were before, right?

09:31.040 --> 09:32.600
The pie got bigger.

09:32.600 --> 09:37.720
So what's happening when the Redis and the Mongos of the world look at that problem is

09:37.720 --> 09:43.520
they decide that the top of the funnel doesn't get bigger or that they don't care about it

09:43.520 --> 09:44.520
getting bigger.

09:44.520 --> 09:48.080
And instead they care about the extraction at the bottom of the funnel, right?

09:48.080 --> 09:51.720
So they're nervous about it, they're like, oh, Amazon will outcompete me, they'll sell

09:51.720 --> 09:55.400
it for less, they'll bring better features.

09:55.400 --> 10:00.520
But this, in my point of view, is completely bonkers, right?

10:00.520 --> 10:04.800
Amazon's never going to invest more in MongoDB than MongoDB.

10:04.800 --> 10:07.480
It's insane on its face, right?

10:07.480 --> 10:13.680
And the idea that that competition exists and it limits their ability to monetize is

10:13.680 --> 10:16.120
also, also to me feels false.

10:16.120 --> 10:18.240
A good example is Elastic.

10:18.240 --> 10:23.720
Amazon's had an Elastic service running for as long as Elastic has been monetizable, basically.

10:23.720 --> 10:29.140
And Elastic went public that whole time with Amazon as a competitor, but you know what?

10:29.140 --> 10:30.880
I've ran Elasticsearch.

10:30.880 --> 10:33.840
I use it as a component in my product.

10:33.840 --> 10:36.440
One of the reasons is that it was a dominant standard.

10:36.440 --> 10:37.800
How did I know?

10:37.800 --> 10:41.460
Well, everybody offered Elastic as a service, right?

10:41.460 --> 10:43.300
It was the de facto thing.

10:43.300 --> 10:44.360
So that choice was easy.

10:44.360 --> 10:46.480
So I wound up in your channel.

10:46.480 --> 10:50.720
So from a business point of view, they're making these decisions because they believe

10:50.720 --> 10:55.040
that that's what's best for the extraction of capital, of revenue at the bottom of the

10:55.040 --> 10:56.040
channel.

10:56.040 --> 10:59.360
And they're doing it at the expense of the spread at the top of the channel.

10:59.360 --> 11:03.400
In your case, you got a rev share with Amazon.

11:03.400 --> 11:06.920
Is that the case with Mongo or with Redis, or was that unique to Chef?

11:06.920 --> 11:09.720
And would that change your outlook at all if that rev share was gone?

11:09.720 --> 11:10.720
It's not the same.

11:10.720 --> 11:11.720
I don't know.

11:11.720 --> 11:15.520
I certainly am not privy to whatever negotiations they may have had, right?

11:15.520 --> 11:16.960
I know the ones I had.

11:16.960 --> 11:20.580
You know, one of the things that Amazon or any partner, anybody who's going to run your

11:20.580 --> 11:24.500
code as a service needs is the assurance that they'll always be able to provide that service

11:24.500 --> 11:27.440
to their customers, right?

11:27.440 --> 11:29.960
And you know what's hard to do that with?

11:29.960 --> 11:31.240
Proprietary software.

11:31.240 --> 11:34.840
Because I have no, my only hedge is the business arrangement.

11:34.840 --> 11:36.120
Do you see what I mean?

11:36.120 --> 11:40.920
Like I can sign a contract that says so, but if I change the terms on my proprietary software

11:40.920 --> 11:45.680
or I build a new SKU, well, can I still run that thing as a service or if we bifurcated

11:45.680 --> 11:46.680
it?

11:46.680 --> 11:47.680
Like what's the deal?

11:47.680 --> 11:48.680
So the mechanism there is really complicated.

11:48.680 --> 11:52.520
So one of the reasons that that rev share exists is because so much of those assurances

11:52.520 --> 11:55.560
about what's in the open was in the open, right?

11:55.560 --> 11:56.560
Even more so now.

11:56.560 --> 12:01.360
That doesn't mean that that's always what Amazon will do or even what they should, but

12:01.360 --> 12:03.080
that's how it worked for us.

12:03.080 --> 12:06.880
If it didn't exist, it wouldn't really change my point of view.

12:06.880 --> 12:13.680
Because if the question is, can I as the primary producer of the product and owner of the brand

12:13.680 --> 12:18.860
and the reason that people attached to those things outcompete someone who is essentially

12:18.860 --> 12:23.740
selling a generic version of what I sell, if I can't outcompete that person, shame on

12:23.740 --> 12:24.740
me.

12:24.740 --> 12:30.720
Like, you really can't convince me, you really can't convince a customer that the best person

12:30.720 --> 12:35.540
to service their MongoDB is MongoDB, because man, if you can't, like there's something

12:35.540 --> 12:40.240
fundamentally broken in the value proposition here, right?

12:40.240 --> 12:43.560
And I think the truth is that they can, if you look at Mongo's performance, if you look

12:43.560 --> 12:46.460
at Atlas's sales numbers, it continues to go up.

12:46.460 --> 12:49.800
It was going up before they changed the license, right?

12:49.800 --> 12:54.280
And the reason is it's a good product and it's a better product than the one that you

12:54.280 --> 12:59.460
receive if you just turn on DocumentDB on Azure.

12:59.460 --> 13:02.960
Because it's kind of bare bones when you turn it on in Azure, right?

13:02.960 --> 13:06.960
And the Atlas version has all kinds of stuff that the other one doesn't have.

13:06.960 --> 13:12.040
The idea that that competition in open source, where the reason you're here is because you

13:12.040 --> 13:15.680
have this massive channel, it doesn't make much business sense to me that that's the

13:15.680 --> 13:17.080
conclusion we would come to.

13:17.080 --> 13:20.960
I understand how you get there, but it doesn't make much sense.

13:20.960 --> 13:25.360
And our disruptive products, though, not necessarily better, they're usually actually worse, but

13:25.360 --> 13:27.880
they're good enough and the cost is disruptive.

13:27.880 --> 13:32.640
And so in the case of an AWS version of Mongo, yeah, it's not going to be as good or as maybe

13:32.640 --> 13:38.920
well supported or have as many features as Mongo's version of Mongo, but it's satisfactory

13:38.920 --> 13:41.680
and it's way cheaper, so it's disruptively cheap.

13:41.680 --> 13:46.240
And then you add to the fact that there's no R&D, there's no development costs from

13:46.240 --> 13:50.000
Amazon's side, so you're not competing with them on features.

13:50.000 --> 13:53.040
You're just free riding all the features that you're building.

13:53.040 --> 13:54.880
Well, but here's the thing.

13:54.880 --> 13:58.040
So this is where we come back to the funnel, right?

13:58.040 --> 13:59.840
So like now we're back to the business.

13:59.840 --> 14:03.960
So like, sure, maybe Amazon, but this is why it's good business for Amazon to launch your

14:03.960 --> 14:06.600
stuff as a service instead of just compete with you directly.

14:06.600 --> 14:10.360
So like you brilliantly elucidated why they would want to launch a Mongo service in the

14:10.360 --> 14:11.360
first place, right?

14:11.360 --> 14:17.200
But as soon as they do that, if the top of the funnel was fixed, if that created no more

14:17.200 --> 14:21.360
interest in your product than it did before, then you'd be right.

14:21.360 --> 14:22.360
But it doesn't.

14:22.360 --> 14:26.400
Instead, it turns out that the single largest pool of software developers on the planet

14:26.400 --> 14:31.160
are the ones that use Amazon and AWS or Azure or Google.

14:31.160 --> 14:33.560
How many of those developers are using one of those platforms?

14:33.560 --> 14:36.920
And if your stuff is on all three of those platforms and it's not on the others, how

14:36.920 --> 14:39.640
many eyeballs do you get that Cockroach doesn't?

14:39.640 --> 14:43.500
The answer is a ton of eyeballs, so many eyeballs.

14:43.500 --> 14:51.000
And so the size of that funnel, your possible monetization gets bigger, hugely bigger than

14:51.000 --> 14:52.000
it was before.

14:52.000 --> 14:56.160
And in that moment, your ability to capture that revenue, every single one of those cut

14:56.160 --> 15:01.800
rate document DB users is a potential lead that's already using your product.

15:01.800 --> 15:06.880
So all you have to do is go find them and be like, yo, did you see how much better our

15:06.880 --> 15:07.880
console is?

15:07.880 --> 15:09.900
How much better our operation stuff is?

15:09.900 --> 15:14.580
How you can get on a Zoom with a dude that wrote that indexing feature when it's broken?

15:14.580 --> 15:16.760
I dare you to get that out of Amazon.

15:16.760 --> 15:20.440
And next thing you know, Citibank is like, you know, Atlas looks pretty good.

15:20.440 --> 15:25.900
I think those kinds of ideas, though, sometimes are so seem so logical, but yet not everybody

15:25.900 --> 15:29.940
thinks like that, you know, so I think it's a great idea of how could you leverage the

15:29.940 --> 15:34.560
fact that these platforms are so massive that they actually become your marketing channel

15:34.560 --> 15:35.560
for you?

15:35.560 --> 15:38.000
They are your marketing channel for you.

15:38.000 --> 15:41.320
And the only the only thing you have to give up is that they're also going to monetize

15:41.320 --> 15:45.560
some number of your customers back to open sources, punk rockiness, right?

15:45.560 --> 15:52.520
Like there's a there's a like that's the man vibe where like when you're saying that Amazon's

15:52.520 --> 15:57.640
a net positive for your business, everybody's like, but they're the man and Amazon's going

15:57.640 --> 15:59.660
to destroy Elasticsearch.

15:59.660 --> 16:05.760
And you're like, dude, Elasticsearch is worth one point five million dollars with a B.

16:05.760 --> 16:09.120
And they're getting like that commercial where the guy's like, sir, you are the man.

16:09.120 --> 16:10.120
Yeah, that commercial.

16:10.120 --> 16:12.480
Like, who exactly are we protecting here?

16:12.480 --> 16:25.840
Because last time I checked, they were public and killing it.

16:25.840 --> 16:27.120
Next up is Heather Meeker.

16:27.120 --> 16:33.120
Heather is a well respected open source lawyer and a specialist in open source software licensing

16:33.120 --> 16:34.120
and strategy.

16:34.120 --> 16:38.440
She wrote the book Open Source for Business and it serves as a guide to open source software

16:38.440 --> 16:39.440
licensing.

16:39.440 --> 16:42.040
We're talking to Heather because she's a lawyer who wrote the license.

16:42.040 --> 16:48.200
The SSPL license is a result of her work with MongoDB and we wanted to understand the design

16:48.200 --> 16:49.720
and the intention of the license.

16:49.720 --> 16:50.720
All right.

16:50.720 --> 16:52.120
Here we go with Heather.

16:52.120 --> 16:54.600
Heather, let's open up with the SSPL.

16:54.600 --> 16:57.480
You were the person behind writing it.

16:57.480 --> 16:58.480
Is that correct?

16:58.480 --> 16:59.480
Yes.

16:59.480 --> 17:08.120
I helped MongoDB draft the license with, of course, the help of Mongo legal counsel and

17:08.120 --> 17:09.640
their business team.

17:09.640 --> 17:13.400
I think it's fair to say that I led the drafting of it.

17:13.400 --> 17:14.400
Gotcha.

17:14.400 --> 17:16.800
And full title of it is the service side public license.

17:16.800 --> 17:18.300
Yes, that's right.

17:18.300 --> 17:21.040
Take us back to, I suppose, the early days of drafting it.

17:21.040 --> 17:22.400
What's it intended to do?

17:22.400 --> 17:24.240
What's the goal of this license?

17:24.240 --> 17:29.840
SSPL was drafted in order to meet a need in a particular way.

17:29.840 --> 17:32.120
So I'll explain what I mean by that.

17:32.120 --> 17:40.760
At the time, and this would have been late 2018 to early 2019, many companies that were

17:40.760 --> 17:47.080
providing software under open source licenses were very concerned about the use of the software

17:47.080 --> 17:50.520
by cloud services providers.

17:50.520 --> 17:54.880
And what they were concerned about was that the cloud service providers were using the

17:54.880 --> 18:02.960
software, not contributing back, and not participating in the development of the software.

18:02.960 --> 18:07.340
So at that time, there were actually quite a few companies.

18:07.340 --> 18:12.460
And most of these, by the way, were companies in what I would call the platform software

18:12.460 --> 18:16.040
space or middleware software space.

18:16.040 --> 18:19.700
And they were trying to figure out what to do about that.

18:19.700 --> 18:22.440
They basically went down two different routes.

18:22.440 --> 18:28.700
The first route was the source available route in what we call an open core business model.

18:28.700 --> 18:31.520
And that's not what SSPL is.

18:31.520 --> 18:37.240
But that's where you have a core of open source software, usually under, say, Apache.

18:37.240 --> 18:44.900
And then you reserve some of the upsell elements under proprietary or source available licenses.

18:44.900 --> 18:47.400
That's the route that most companies went down.

18:47.400 --> 18:52.200
Mongo, on the other hand, wanted to see if they could create a license that was an open

18:52.200 --> 18:55.880
source license, but that managed this issue.

18:55.880 --> 18:58.880
And that's how the SSPL came about.

18:58.880 --> 19:04.960
So they drafted the license, submitted it to open source initiative for approval as

19:04.960 --> 19:07.600
an open source license.

19:07.600 --> 19:12.960
And eventually, it was withdrawn after quite a bit of comment without a particular ruling

19:12.960 --> 19:18.920
from OSI on whether it was appropriate for approval as an open source license.

19:18.920 --> 19:22.840
What happened in that proceeding?

19:22.840 --> 19:23.840
Why wouldn't...

19:23.840 --> 19:25.560
What were the deciding factors?

19:25.560 --> 19:30.720
I guess they didn't reject it, but it was just being debated to a certain degree and

19:30.720 --> 19:31.720
then withdrawn eventually.

19:31.720 --> 19:35.900
I assume it was withdrawn because it was not going anywhere.

19:35.900 --> 19:38.240
Or was there a different reason for withdrawing it?

19:38.240 --> 19:41.880
It was a long and fraught debate.

19:41.880 --> 19:47.600
And the debate had to do with a number of concerns.

19:47.600 --> 19:53.520
I would encourage anybody who's interested to go and read the archives of what's called

19:53.520 --> 19:59.280
license review or license discuss.

19:59.280 --> 20:04.120
But I'll try to summarize, understanding that there were a lot of comments, and I can't

20:04.120 --> 20:06.680
summarize them all.

20:06.680 --> 20:15.320
The first was technical commentary about whether the license met the open source definition.

20:15.320 --> 20:17.680
So there is a definition of open source.

20:17.680 --> 20:21.560
There's also a free software definition.

20:21.560 --> 20:26.760
One of the main tenets of that definition is that the license can't have any license

20:26.760 --> 20:27.980
restrictions.

20:27.980 --> 20:33.500
So that would be source available if you say you can't use the software for this purpose.

20:33.500 --> 20:40.320
It also says that it can't discriminate against users or technology contexts and so forth.

20:40.320 --> 20:42.240
I'm paraphrasing, of course.

20:42.240 --> 20:48.060
So there were those aspects, and there were some comments about that aspect of the license.

20:48.060 --> 20:55.280
There were also a lot of comments about who had drafted it, the process by which it was

20:55.280 --> 21:01.340
drafted, and what Mongo's intent was in creating the license.

21:01.340 --> 21:07.920
So those were like meta comments, not about the license itself, but about the context.

21:07.920 --> 21:10.720
And so all of those things were being discussed.

21:10.720 --> 21:15.600
And if you've ever been on one of these discussion groups, you know that they get discussed in

21:15.600 --> 21:19.360
a non-sequential format.

21:19.360 --> 21:24.600
And it can be very confusing to follow, but I'd say those were the main themes.

21:24.600 --> 21:31.400
Okay, and so do you think that, I mean, I don't know if bias is right, as the author

21:31.400 --> 21:35.840
of the SSPL, do you believe that the SSPL represents, I guess, even the spirit of open

21:35.840 --> 21:40.560
source if it's not officially an open source license, or do you think it's something different?

21:40.560 --> 21:45.680
Well, we drafted it to fit the open source definition.

21:45.680 --> 21:51.720
And as a lawyer, you know, you have to have concrete things to go on, and the open source

21:51.720 --> 21:53.720
definition is what we had.

21:53.720 --> 21:59.680
I think the discussion brought out that people felt that there was something beyond meeting

21:59.680 --> 22:03.840
the open source definition that needed to be satisfied, and there was a great deal of

22:03.840 --> 22:05.240
debate about that.

22:05.240 --> 22:11.280
So we looked at the open source definition, we definitely avoided license restrictions,

22:11.280 --> 22:20.760
we avoided things that were discriminatory according to the requirements of the OSD.

22:20.760 --> 22:26.520
But all of the meta issues were things that really kind of couldn't be addressed by the

22:26.520 --> 22:28.280
draft itself.

22:28.280 --> 22:30.880
There is some discrimination built in though, right?

22:30.880 --> 22:39.320
Or how does it actually, how does it work in order to stop that particular problem that

22:39.320 --> 22:40.320
they're trying to address?

22:40.320 --> 22:41.960
Isn't that discriminating the use?

22:41.960 --> 22:45.480
I know we get into legalese here, but you're good at this.

22:45.480 --> 22:47.480
So help me understand.

22:47.480 --> 22:54.120
I would say not discriminatory because in a way, all copyleft licenses apply different

22:54.120 --> 22:56.440
conditions when you do different things.

22:56.440 --> 23:05.100
So if you use discriminatory in that way, then GPL 2 is discriminatory because it only

23:05.100 --> 23:08.420
applies certain conditions to redistributors.

23:08.420 --> 23:12.520
So that is actually fair game in copyleft licensing.

23:12.520 --> 23:20.160
So SSPL applied specific conditions to use of the software, I'm paraphrasing now, but

23:20.160 --> 23:26.200
as a software, software as a service to provide the same functionality of the software.

23:26.200 --> 23:31.520
And so yes, there were conditions that were imposed in those situations that weren't imposed

23:31.520 --> 23:38.600
otherwise, but that I think for most people isn't the meaning of discriminatory according

23:38.600 --> 23:40.680
to the OSD.

23:40.680 --> 23:47.000
contemporary would be more like you can only use this in a particular field of use, like

23:47.000 --> 23:52.800
you can use it in medical devices, but you can't use it in nuclear weapons or something

23:52.800 --> 23:53.800
like that.

23:53.800 --> 23:54.800
Mm-hmm.

23:54.800 --> 23:56.640
You can use it for good, but not for evil.

23:56.640 --> 24:06.320
Well, it's interesting that you say that because there is now a new licensing movement, I guess

24:06.320 --> 24:13.400
called the ethical licensing movement that actually does impose conditions based on ethical

24:13.400 --> 24:15.240
concerns and moral concerns.

24:15.240 --> 24:24.160
And those are clearly not open source licenses because they actually do impose license restrictions.

24:24.160 --> 24:28.160
In other words, you can't use the software for this particular purpose.

24:28.160 --> 24:32.840
I heard about this too, where I believe it was in China, there was a specific license

24:32.840 --> 24:37.760
about companies that didn't adhere to work ethics, where I think it was like a 999 or

24:37.760 --> 24:38.760
something like that.

24:38.760 --> 24:41.400
The anti 996 license.

24:41.400 --> 24:47.140
That was actually very interesting if you'll permit me to make a comment about it.

24:47.140 --> 24:51.200
It was first of all, a very well drafted license.

24:51.200 --> 24:53.480
So it was professionally done.

24:53.480 --> 25:00.160
It did address labor conditions and again, I'm paraphrasing, but the license says you

25:00.160 --> 25:05.960
can't use this software if you are violating the international labor standards.

25:05.960 --> 25:12.400
And it was intended to raise consciousness about labor practices in China.

25:12.400 --> 25:18.840
But what was really interesting about that is that the license was released on GitHub.

25:18.840 --> 25:24.200
And by the way, I think it may have been more a thought experiment than anything else, but

25:24.200 --> 25:32.200
it then caused that GitHub repository to become a vehicle for people to discuss the issue.

25:32.200 --> 25:40.480
So it became almost like a social networking initiative to raise consciousness about the

25:40.480 --> 25:45.540
issue rather than specifically to develop a license document.

25:45.540 --> 25:53.200
So I thought that was a very interesting phenomenon from the point of view of what happened around

25:53.200 --> 26:05.400
getting the license in GitHub and around the development of the license.

26:05.400 --> 26:08.440
This episode is brought to you by our friends at Retool.

26:08.440 --> 26:11.520
Retool helps you build internal tools fast and easy.

26:11.520 --> 26:15.520
From startups to Fortune 500s, the world's best teams use Retool to power their internal

26:15.520 --> 26:16.520
apps.

26:16.520 --> 26:19.920
Assemble your app in just a few minutes by dragging and dropping from prebuilt components

26:19.920 --> 26:25.400
to most databases or anything with a REST, GraphQL or gRPC API.

26:25.400 --> 26:29.520
Retool empowers you to work with all your data sources seamlessly in one single app.

26:29.520 --> 26:33.040
Retool is highly hackable, so you're never limited by what's available out of the box.

26:33.040 --> 26:37.480
If you can read it in JavaScript and an API, you can build it in Retool.

26:37.480 --> 26:41.080
You can use their cloud service or host it on prem for yourself.

26:41.080 --> 26:59.720
Learn more and try it free at retool.com.

26:59.720 --> 27:07.520
It's interesting how there's so many usages of licenses and you mentioned the OSI approval

27:07.520 --> 27:13.280
process and how it was contextual in terms of their Mongo's intent of the license change

27:13.280 --> 27:17.880
and the intent of the SSPL license in general.

27:17.880 --> 27:24.040
And you also mentioned, you know, the OSD and its criteria in your blog post on the

27:24.040 --> 27:25.040
cause community.

27:25.040 --> 27:29.520
You mentioned how many of the legacy license in the OSI approved long ago would probably

27:29.520 --> 27:35.840
not be approved today and then you mentioned that the criteria for the approval has changed

27:35.840 --> 27:37.760
but the OSD has not.

27:37.760 --> 27:42.320
So it seems like there's like a lot of moving targets in terms of getting approved by the

27:42.320 --> 27:46.860
OSI and Jared mentioned like, you know, in terms of this isn't an OSI approved license,

27:46.860 --> 27:49.040
do you feel it is open source?

27:49.040 --> 27:52.480
It's kind of an interesting perspective just that the fact that there's this OSD that's

27:52.480 --> 27:53.480
been drafted.

27:53.480 --> 27:57.080
I think the last time it changed was 2007 if I recall correctly, but it's been a while

27:57.080 --> 27:58.080
back.

27:58.080 --> 28:00.520
It was a long time ago.

28:00.520 --> 28:08.360
It basically, you know, hasn't changed in the time that I can remember looking at it.

28:08.360 --> 28:13.760
But I think what's interesting about that is that what OSI is doing is trying to create

28:13.760 --> 28:20.560
community consensus and isn't wedded to this written definition.

28:20.560 --> 28:25.320
By the way, I say that because that's what they say.

28:25.320 --> 28:30.960
The approval of a license does not merely require it to meet the open source definition.

28:30.960 --> 28:38.120
So it does raise an interesting question about the clarity of the criteria and the process,

28:38.120 --> 28:40.740
but you know, this is a community process.

28:40.740 --> 28:48.560
So those are always, they are living, breathing things and they get developed as they go and

28:48.560 --> 28:53.600
people are always pushing for transparency, but it can never be, you know, perfect.

28:53.600 --> 28:57.360
The fact that this OSD document hasn't changed in a while though, is that a good thing or

28:57.360 --> 28:58.360
a bad thing?

28:58.360 --> 29:02.800
Because you might say it's a bad thing because it doesn't reflect the way that modern software

29:02.800 --> 29:06.200
is developed and deployed into consumers' hands.

29:06.200 --> 29:09.040
And then you might say it's a good thing because it's so strong it doesn't need to change.

29:09.040 --> 29:12.920
The definition is so strong that, you know, it doesn't have to change.

29:12.920 --> 29:16.640
What do you think about whether it's the fact that it hasn't changed in so long that's a

29:16.640 --> 29:18.760
good thing or a bad thing?

29:18.760 --> 29:23.640
Well, I actually agree with you it is kind of a good thing and a bad thing.

29:23.640 --> 29:31.200
It has worked pretty well over the years and it's been remarkably robust over the years.

29:31.200 --> 29:37.200
Maybe it's time to revisit it, but that would also be a very long process and possibly very

29:37.200 --> 29:38.440
controversial.

29:38.440 --> 29:40.680
There are other definitions, by the way.

29:40.680 --> 29:46.560
There's the free software definition and there's a Debian soft, I think it's called the software

29:46.560 --> 29:47.560
contract.

29:47.560 --> 29:49.600
I don't know if I'm getting that wrong.

29:49.600 --> 29:53.680
But those are much shorter and less complicated.

29:53.680 --> 30:01.280
So I think if it were revised, there might be some interesting possibilities to harmonize

30:01.280 --> 30:03.920
those definitions.

30:03.920 --> 30:08.160
I would say that whether the definition changes or not is one question.

30:08.160 --> 30:15.480
I do think that the transparency of the criteria for approval is very important to the community.

30:15.480 --> 30:18.640
What's at stake for these companies and organizations?

30:18.640 --> 30:20.040
Maybe they pick SSPL.

30:20.040 --> 30:26.560
Whether or not it's an approved license or not, what do they win or lose based on that?

30:26.560 --> 30:28.680
Is it the marketing value of the term?

30:28.680 --> 30:29.680
Is it goodwill?

30:29.680 --> 30:31.880
What's at stake?

30:31.880 --> 30:39.920
SSPL is used as part of a dual licensing model and that is something that has been around

30:39.920 --> 30:44.380
for a long time, but it's not as popular as it once was.

30:44.380 --> 30:50.540
So it was really pioneered by MySQL and so what they did was they said, here's our software.

30:50.540 --> 30:52.080
It's under GPL.

30:52.080 --> 30:59.520
Actually they used a variant of GPL and if you don't want to abide by the GPL requirements,

30:59.520 --> 31:04.920
you can negotiate with us for a commercial license and that's a process that's sometimes

31:04.920 --> 31:07.360
called selling exceptions.

31:07.360 --> 31:16.160
So the strong copyleft licenses like GPL and then later AGPL and then finally SSPL were

31:16.160 --> 31:23.240
all used in other contexts as well, but as part of these dual licensing initiatives.

31:23.240 --> 31:29.920
The reason that companies adopted them in a dual licensing strategy is that they were

31:29.920 --> 31:35.320
intending that people who are using the software commercially would probably have to come negotiate

31:35.320 --> 31:41.400
for a license and what happened over time was that the MySQL model, which worked pretty

31:41.400 --> 31:49.440
well, began to break when software moved up to the cloud because the requirements of GPL

31:49.440 --> 31:55.520
only kicked in on redistribution and that wasn't happening anymore because of cloud

31:55.520 --> 31:56.800
deployment.

31:56.800 --> 32:04.660
So then companies that were doing dual licensing models moved to AGPL when it was released

32:04.660 --> 32:14.060
in I think that was 2007 and SSPL is I think kind of a logical extension from that.

32:14.060 --> 32:15.400
So that's what they're trying to do.

32:15.400 --> 32:26.140
They're trying to allow people to use the software for certain in a say to test it out,

32:26.140 --> 32:32.820
to use it on a small scale, to use it to do certain things, but to require people to come

32:32.820 --> 32:39.160
to the table when they want to do things at scale or certain kind of commercial activities.

32:39.160 --> 32:42.720
Yeah, because a cloud provider is a user essentially, right?

32:42.720 --> 32:44.040
I mean at that point.

32:44.040 --> 32:47.260
Yes, that's actually very perceptive comment.

32:47.260 --> 32:48.260
They are users.

32:48.260 --> 32:51.880
They're not distributors of software.

32:51.880 --> 32:57.200
It's a little bit of a complicated question, but I don't think there's too much doubt about

32:57.200 --> 32:58.200
that.

32:58.200 --> 33:04.520
So what that means, if you look at the GPL say, it specifically says that the license

33:04.520 --> 33:09.160
doesn't control the use of software.

33:09.160 --> 33:17.280
And so that is where the issue comes to play because the cloud providers are users and

33:17.280 --> 33:24.260
so under say GPL, they don't have any, you know, basically don't have any conditions

33:24.260 --> 33:25.260
at all.

33:25.260 --> 33:26.260
Right.

33:26.260 --> 33:30.280
And it's kind of odd to say, I mean, sure they're not distributing it out to, you know,

33:30.280 --> 33:33.200
individual installations, but they are providing it to many.

33:33.200 --> 33:35.820
So it's still one to many, it's still many scenarios.

33:35.820 --> 33:41.280
So and that seems to be where the issue is that the language of the future of software

33:41.280 --> 33:46.200
the way it is, is not so much, especially in cloud, is not a distributed model.

33:46.200 --> 33:47.200
That's right.

33:47.200 --> 33:48.200
It's a single installation.

33:48.200 --> 33:49.200
The means of distribution has changed.

33:49.200 --> 33:53.160
You're no longer sending a binary or source code to be compiled by a bunch of people.

33:53.160 --> 33:55.920
You're setting up a service and then charging for the service.

33:55.920 --> 33:59.200
It's just, it's a new way of doing it, newer.

33:59.200 --> 34:00.200
Yeah.

34:00.200 --> 34:05.600
And, you know, copyright law treats use and distribution a little bit differently.

34:05.600 --> 34:11.160
I think that one of the things that maybe it didn't anticipate properly was use, was

34:11.160 --> 34:19.160
copying at scale in order to deploy software for hundreds or thousands of users.

34:19.160 --> 34:22.600
That is something that is, you know, relatively new.

34:22.600 --> 34:28.960
So as software licensing has progressed, you know, certain things worked pretty well when

34:28.960 --> 34:34.200
we were in a model where one person would use one copy of the software, but that isn't

34:34.200 --> 34:36.780
the world we live in anymore.

34:36.780 --> 34:44.640
So when it comes to the letter of the SSPL as reactions to Mongo initially, and now Elastic

34:44.640 --> 34:50.280
re-licensing now, there have been critics, there have been, and this is a debated thing

34:50.280 --> 34:52.680
about the topic, is it open source?

34:52.680 --> 34:53.720
Is it fopen source?

34:53.720 --> 34:55.560
Which is, I think is a terrible term.

34:55.560 --> 35:00.460
I can't believe I just hopped on the bandwagon and used it, but this is the verbiage that's

35:00.460 --> 35:02.320
out there.

35:02.320 --> 35:05.200
There are those who think it's a business risk, this SSPL.

35:05.200 --> 35:11.640
So now I'm reading from Vicky Bressour's blog, you probably have read this, and she says,

35:11.640 --> 35:15.840
she showed it to some lawyers, some IP lawyers, and she says, by using an SSPL project in

35:15.840 --> 35:20.900
your code, you are agreeing that if you provide an online service using that code, then you

35:20.900 --> 35:25.960
will release not only that code, but also the code for every supporting piece of software

35:25.960 --> 35:27.640
all under the SSPL.

35:27.640 --> 35:32.480
It's not a stretch to interpret the wording of the license as requiring users of the SSPL

35:32.480 --> 35:38.600
software, therefore to release the code for everything straight down to the bare metal.

35:38.600 --> 35:44.660
This is one interpretation of the license itself saying effectively that there's perhaps

35:44.660 --> 35:48.000
this collateral damage that might happen because of the way that it's written.

35:48.000 --> 35:51.440
I would just love to hear as the author of it, and I'm sure you've thought through these

35:51.440 --> 35:53.360
things, how do you respond to that?

35:53.360 --> 35:55.320
What do you think about that statement?

35:55.320 --> 35:56.320
Is it feasible?

35:56.320 --> 35:57.320
Is it outlandish?

35:57.320 --> 36:04.800
Well, I do think it's an oversimplification of the terms of the license.

36:04.800 --> 36:11.920
And don't get me wrong, these kinds of provisions are very complicated to read.

36:11.920 --> 36:15.720
So it's hard to reduce them to sound bites.

36:15.720 --> 36:24.140
I do think on the question of business risk, this is the way I look at it.

36:24.140 --> 36:30.820
I work with many, many companies to develop open source compliance policies.

36:30.820 --> 36:36.880
And so what companies do when they develop those policies is they have like a stop-go

36:36.880 --> 36:38.960
caution list.

36:38.960 --> 36:44.080
And you would not expect even a GPL to be on a go list.

36:44.080 --> 36:47.760
In fact, it's usually on a stop list already.

36:47.760 --> 36:50.200
And SSPL will be there too.

36:50.200 --> 36:56.760
Any network copyleft license, meaning any license that has source code sharing requirements

36:56.760 --> 37:02.960
when you deploy over a network, those will all be on a stop list.

37:02.960 --> 37:12.040
So when you say it's a business risk, well, yeah, but already a lot of the copyleft licenses

37:12.040 --> 37:17.280
were defined as business risks.

37:17.280 --> 37:22.600
You know this isn't blindsiding you, this concern.

37:22.600 --> 37:24.400
It's known from the out start.

37:24.400 --> 37:28.200
Yeah, of course.

37:28.200 --> 37:33.040
You would not expect people to greenlight SSPL software.

37:33.040 --> 37:38.400
What they would do is they would look at the license and say, okay, this is okay with us

37:38.400 --> 37:41.760
or it's not, and then they would make a decision about it.

37:41.760 --> 37:47.760
So that's something that users have to decide for themselves.

37:47.760 --> 37:55.300
I do think that what you quoted was overstating the risk somewhat, but it's not useful to

37:55.300 --> 37:58.040
get into the details of it.

37:58.040 --> 38:01.560
You have to actually look at what the license requires.

38:01.560 --> 38:09.680
And it really is focused on particular use contexts where people are providing software

38:09.680 --> 38:10.680
as a service.

38:10.680 --> 38:14.420
I want to say thank you to Vicky for writing this post because I'm going to quote one more

38:14.420 --> 38:20.720
and ask you about this, but very, very helpful, Vicky, in doing this call with Heather.

38:20.720 --> 38:26.840
She said basically in regards to the SSPL, basically it's a hostile proprietary license

38:26.840 --> 38:29.160
masquerading in open source clothing.

38:29.160 --> 38:31.160
Now it's getting vicious.

38:31.160 --> 38:34.480
I don't know what to say about that.

38:34.480 --> 38:37.800
Whether it's proprietary, proprietary is not open source.

38:37.800 --> 38:40.320
So this is really the same issue.

38:40.320 --> 38:48.960
I actually think if you look at the FAQs and announcements and so forth for Mongo and Elastic,

38:48.960 --> 38:51.720
they're pretty forthcoming.

38:51.720 --> 38:58.360
So I'm not sure what is being masqueraded there.

38:58.360 --> 39:08.520
So I think that's, you know, it's language intended to incite an argument, but I don't

39:08.520 --> 39:12.840
know that it's terribly meaningful in an objective way.

39:12.840 --> 39:13.840
Yeah.

39:13.840 --> 39:18.480
The primary concern with the SSPL really is Section 13, right?

39:18.480 --> 39:21.880
That's the, like a lot of the concern isn't really elsewhere in it.

39:21.880 --> 39:26.440
Obviously it's a loan license, but it's primarily Section 13, which describes, which we talked

39:26.440 --> 39:29.840
about here, which is redistribution, restrictions on usage, et cetera.

39:29.840 --> 39:30.840
Yeah.

39:30.840 --> 39:38.360
If you were to redline it against AGPL or even GPL3, you would find that almost all

39:38.360 --> 39:41.520
the substantive changes are in Section 13.

39:41.520 --> 39:47.560
Well, Heather, thank you so much for joining us and explaining these things in ways that

39:47.560 --> 39:50.000
we could only fumble around in the dark to understand.

39:50.000 --> 39:52.540
I think it's been very helpful.

39:52.540 --> 39:55.720
And anything else that we didn't ask you or anything about the license itself or about

39:55.720 --> 39:59.880
the situation that is being discussed and debated that you want to say that we haven't

39:59.880 --> 40:00.880
asked you about?

40:00.880 --> 40:07.120
Well, I would say that I would remind people that the alternative is probably to go to

40:07.120 --> 40:09.000
a source available license.

40:09.000 --> 40:16.760
So if people, you know, are calling it names and so forth, you know, what they should consider

40:16.760 --> 40:23.960
is that businesses are going to do what their business strategy requires.

40:23.960 --> 40:30.280
And so most companies that don't adopt something like SSPL are going to go down the source

40:30.280 --> 40:33.720
available route, which is definitely not open source.

40:33.720 --> 40:39.600
So it's a question of whether you think half a loaf is better than none, I think.

40:39.600 --> 40:43.000
And there are definitely differing views about that.

40:43.000 --> 40:50.480
I would say the reality is that most companies are actually going to use licenses that are

40:50.480 --> 40:55.340
truly restrictive in a way rather than SSPL.

40:55.340 --> 41:01.760
So I would say anybody who is using SSPL is at least trying to go down something like

41:01.760 --> 41:15.280
an open source route, even if you don't believe it's open source.

41:15.280 --> 41:19.480
Up next, we're talking about Manish John, founder and CTO at Dgraph Labs.

41:19.480 --> 41:24.040
Manish came on this podcast a little over two years ago on episode 322, talking about

41:24.040 --> 41:27.900
licensing and re-licensing Dgraph, so we thought it'd be fitting to get him on this episode

41:27.900 --> 41:28.900
as well.

41:28.900 --> 41:29.900
Here we go.

41:29.900 --> 41:33.640
So Manish, you and Dgraph are in a somewhat similar situation to Elastic.

41:33.640 --> 41:37.540
You're not Elastic, but you're set up a lot like Elastic is set up, is that right?

41:37.540 --> 41:38.760
That's true.

41:38.760 --> 41:42.840
So Elastic's licensing, the way they have done it is that they have their open source

41:42.840 --> 41:49.240
code co-located with their proprietary code, and it's all source visible, except the open

41:49.240 --> 41:56.280
source is under Apache if I'm not wrong, and then the proprietary code is under Elastic.

41:56.280 --> 42:01.240
And similar to Dgraph, where our open source code is Apache, and our proprietary code is

42:01.240 --> 42:03.280
under Dgraph license.

42:03.280 --> 42:08.800
So as a meta note, where did you hear about this news, and did you read both sides, have

42:08.800 --> 42:12.520
you read what AWS has had to say, and what's happened after the re-license, what's your

42:12.520 --> 42:13.520
purview?

42:13.520 --> 42:17.480
I mean, I think, I mean, hacker news, right?

42:17.480 --> 42:20.760
Hacker news went into flames over this, and so that's where I came to know.

42:20.760 --> 42:25.360
I don't know, actually, I did not have a chance to look at what AWS actually had to say about

42:25.360 --> 42:26.360
that.

42:26.360 --> 42:32.760
But I did read through the multiple blog posts that Elastic sort of released about what they're

42:32.760 --> 42:35.960
changing and some of the reasonings for why they're changing.

42:35.960 --> 42:40.280
And this is a story that's, it's not the first time, right, it's the same story that we already

42:40.280 --> 42:50.880
had for CockroachDB, we had the story for MongoDB, we have this, you know, across Confluent,

42:50.880 --> 42:56.720
and Redis Labs, you know, this is just a series of changes that are happening in the entire

42:56.720 --> 42:58.880
open source ecosystem.

42:58.880 --> 43:01.760
And you guys went through similar things as well, because we even have a whole show up

43:01.760 --> 43:07.160
for you back in October of 2018, where we have you on the changelog there and back again,

43:07.160 --> 43:15.020
Dgraph's Tale, an excellent name if you're a fan of The Hobbit, like I am, episode 322.

43:15.020 --> 43:19.060
So you've told us this story before, but like, I guess we don't need to rehash the entire

43:19.060 --> 43:23.640
thing, but this has been an area of struggle for you and your company as well.

43:23.640 --> 43:27.320
It is something of, you know, I wouldn't say it's such a big struggle as something like

43:27.320 --> 43:33.680
Elastic where Amazon is directly sort of like, you know, quote unquote, attacking them, right?

43:33.680 --> 43:39.540
For us, it's more of like a forward thinking scenario where we, you know, we realize that

43:39.540 --> 43:41.680
we love open source.

43:41.680 --> 43:46.840
And just like Shae mentioned, the founder of Elastic mentioned in his blog posts, you

43:46.840 --> 43:52.600
know, I got my feet dabbed into open source like long time ago and really believe in it.

43:52.600 --> 43:57.400
And when I was starting Dgraph, I was not inspired by any sort of business motives,

43:57.400 --> 43:58.400
right?

43:58.400 --> 44:02.120
Like I was not planning out, hey, how would like five years from now we will make money.

44:02.120 --> 44:04.160
I didn't know how to make money from open source.

44:04.160 --> 44:07.240
I just wanted to build open source software, right?

44:07.240 --> 44:10.060
And that's how we got started.

44:10.060 --> 44:14.400
So similar sort of like trajectory there in terms of like our interest towards the open

44:14.400 --> 44:24.160
source community and so, you know, I mean, yeah, I think the open source theme is similar

44:24.160 --> 44:25.160
there.

44:25.160 --> 44:32.840
So what's happened since is that AWS has forked both Elasticsearch and Kibana and are going

44:32.840 --> 44:37.840
to carry on open source forks, community forks as they're kind of being pitched as what do

44:37.840 --> 44:38.840
you think about that?

44:38.840 --> 44:39.840
What are they going to succeed?

44:39.840 --> 44:41.280
Are they going to fail there?

44:41.280 --> 44:44.240
Is it a real risk for Elastic or no?

44:44.240 --> 44:50.340
They did that once before with the Elastic open distro and I think people were really

44:50.340 --> 44:52.200
concerned about how that would pan out.

44:52.200 --> 44:56.820
And remind me, Elastic's share price has not decreased too much, right?

44:56.820 --> 44:58.580
It hasn't gone into a spiral downward.

44:58.580 --> 45:00.200
So I guess they're doing well, right?

45:00.200 --> 45:04.460
And they'll probably survive another attack from AWS.

45:04.460 --> 45:12.740
But I think, you know, some of the criticism that I see online about MongoDB, SSBL and

45:12.740 --> 45:18.180
some other companies is that, you know, these open source companies are motivated by business

45:18.180 --> 45:25.880
and therefore they are somehow being moralistic, like morally they are being challenged.

45:25.880 --> 45:31.360
But I feel like, you know, the same people then turn around and say Amazon is completely

45:31.360 --> 45:36.520
okay with doing these kind of things because it's well within their rights to do so because

45:36.520 --> 45:40.200
of the licensing put together by the open source.

45:40.200 --> 45:44.620
And so the conflict that I feel is right there, right?

45:44.620 --> 45:50.200
You cannot have two different moral bars, one for the company who is making money out

45:50.200 --> 45:59.720
of your inventions and the second for the inventor themselves, right?

45:59.720 --> 46:05.180
And sometimes I just wonder, right, how many open source infrastructure software has Amazon

46:05.180 --> 46:09.160
created and launched in open source, right?

46:09.160 --> 46:14.400
Like do we, when do we expect to see DynamoDB coming out in open source?

46:14.400 --> 46:17.840
So someone else can build a business like Amazon has done with DynamoDB.

46:17.840 --> 46:18.840
That'll be great, right?

46:18.840 --> 46:21.620
I mean, that'll be a great day for open source if Amazon does that.

46:21.620 --> 46:25.220
But I don't think they have any plan to do it because that's not how they operate.

46:25.220 --> 46:29.080
And so, you know, it's well within, I think it's, in fact, I would say it's recommended

46:29.080 --> 46:35.720
for open source companies to make sure that they are able to build a successful business

46:35.720 --> 46:40.040
just like Amazon is building, just like everybody else is building.

46:40.040 --> 46:48.640
And so the motivation to make money out of your inventions is completely justified in,

46:48.640 --> 46:50.520
I would say, moral grounds, right?

46:50.520 --> 46:58.240
Well, there's a concern too, at least based upon Shay's blog post on Elastic saying that

46:58.240 --> 47:03.040
Amazon and AWS wasn't putting back into the open source buckets, so to speak.

47:03.040 --> 47:08.000
So from two avenues, one, the perspective you just shared, which is DynamoDB, for example,

47:08.000 --> 47:12.300
isn't open source, and that's not part of their business plan to do that.

47:12.300 --> 47:19.440
But then the concern and I suppose what led to this scenario we're in now is essentially

47:19.440 --> 47:23.320
AWS not playing by the community rules.

47:23.320 --> 47:26.040
The license doesn't depict this, and that's kind of what this move is doing is like, hey,

47:26.040 --> 47:30.920
if you can't operate by community rules, then we're going to put a license that makes it

47:30.920 --> 47:33.760
illegal for you to do things another way.

47:33.760 --> 47:35.920
So not pitching back into the open source thing.

47:35.920 --> 47:41.200
But then you can sort of draw some sentiment from just simply the titles of their blog

47:41.200 --> 47:49.720
post on the AWS open source blog back in 2019 from Adrian Cockroft, keeping open source

47:49.720 --> 47:52.920
open, open distro for Elasticsearch, which is something you mentioned.

47:52.920 --> 47:57.040
And then the second one is the more recent around Elasticsearch, which is stepping up

47:57.040 --> 47:59.720
for a truly open source Elasticsearch.

47:59.720 --> 48:02.640
It's an interesting perspective you've drawn there where they haven't open source certain

48:02.640 --> 48:09.160
things they have because of business reasons, but then wanting to be a good community player

48:09.160 --> 48:10.160
in these ways.

48:10.160 --> 48:13.020
It seems, I don't know, what do you think?

48:13.020 --> 48:14.360
It is questionable, isn't it?

48:14.360 --> 48:15.680
It is kind of questionable.

48:15.680 --> 48:21.240
And I think like, you know, if you look at SSPL, the server side public license, I think

48:21.240 --> 48:27.200
from MongoDB, it's actually really, I actually am still a bit baffled that it's not approved

48:27.200 --> 48:34.600
by OSI because it to me is a fork of derivative of GPL, just like AGPL is, which also makes

48:34.600 --> 48:36.380
GPL a bit more permissive, right?

48:36.380 --> 48:41.480
If you look at AGPL, it's, you know, allows you to not have to release your source code

48:41.480 --> 48:47.320
if you are using it over the network or something of that sort, or actually, I forget exactly

48:47.320 --> 48:48.720
the details there.

48:48.720 --> 48:52.720
But SSPL says that, you know, you don't have to release your source code if you're not

48:52.720 --> 48:58.780
directly competing by providing the core product as a service, right?

48:58.780 --> 49:01.720
So it's more permissive than a GPL.

49:01.720 --> 49:07.840
And so I think it has all the merits, I feel in my opinion, to be open source approved

49:07.840 --> 49:14.640
and guess if SSPL in a world where SSPL gets open source approval, I don't think we have

49:14.640 --> 49:17.320
any problem here, right?

49:17.320 --> 49:22.640
Then everybody has already sort of like gathered around SSPL, which we could not do around

49:22.640 --> 49:24.040
the commons clause, right?

49:24.040 --> 49:27.440
I mean, that was the same idea for commons clause, but it could not get us there.

49:27.440 --> 49:33.040
But MongoDB is a big name, and so MongoDB could get the industry around SSPL.

49:33.040 --> 49:35.880
And then we don't have a debate because it would be open source, right?

49:35.880 --> 49:36.880
Yeah.

49:36.880 --> 49:37.880
There's some details around that.

49:37.880 --> 49:41.760
We had a conversation with Heather Maker on this exact subject and something she had said,

49:41.760 --> 49:51.460
which will be in the same podcast, is if you redlined SSPL versus AGPL, the primary difference

49:51.460 --> 49:57.440
is this sort of come out is essentially section 13, which describes if you make the functionality

49:57.440 --> 50:00.840
of the program or modified version available to third parties of the service, blah, blah,

50:00.840 --> 50:01.840
blah, blah, blah.

50:01.840 --> 50:03.720
That's where the change is, is section 13.

50:03.720 --> 50:06.780
Everything else is essentially AGPL.

50:06.780 --> 50:11.320
And there is a lot of debate around the nuance and the process to be approved.

50:11.320 --> 50:16.920
So OSD is very clear, hasn't changed in a long time, OSD being the open source definition.

50:16.920 --> 50:21.420
That's very clear because it hasn't changed and it's even derived from Debian's existing

50:21.420 --> 50:24.160
rules on what open source definition is.

50:24.160 --> 50:28.260
So there's some history there, but the criteria and the ways that you go about getting these

50:28.260 --> 50:33.760
licenses approved by OSI is a bit more difficult.

50:33.760 --> 50:38.440
You can read the transcripts and the notes from the meetings and stuff, but that takes

50:38.440 --> 50:42.560
a very motivated listener slash reader.

50:42.560 --> 50:46.820
And so some of this intention of this show is to sort of demystify some of that stuff

50:46.820 --> 50:53.640
and maybe give you a TLDR or TLDL, too long, didn't listen, but that's essentially is this

50:53.640 --> 50:55.820
criteria for getting it passed.

50:55.820 --> 51:01.220
You say that the SSPL should be or could be open source, you're baffled, as you said,

51:01.220 --> 51:02.220
that it's not.

51:02.220 --> 51:03.220
Yeah.

51:03.220 --> 51:04.220
Yeah.

51:04.220 --> 51:05.220
And it's not, that it hasn't been approved by them.

51:05.220 --> 51:06.220
Yeah.

51:06.220 --> 51:08.760
And to be honest, like I haven't looked at the counter arguments to that, right?

51:08.760 --> 51:13.360
And I'm sure there's, there are smart people there on the other side and they have some

51:13.360 --> 51:14.360
counter arguments.

51:14.360 --> 51:21.360
But from a slightly like distant perspective, without having to go into the intricate details,

51:21.360 --> 51:22.840
it seems very similar.

51:22.840 --> 51:30.400
And maybe if it was built in 1990s, it might have already been involved in OSI, right?

51:30.400 --> 51:36.180
But I think one thing that we should probably take away from ElastiX stuff is that the holy

51:36.180 --> 51:42.640
grail of license here is to, so if you look at ElastiX license as well, right, it's divided

51:42.640 --> 51:43.760
into two portions.

51:43.760 --> 51:48.440
One is the open source part and the other one is the completely proprietary part, right?

51:48.440 --> 51:52.280
And so proprietary part, they are not changing, from my understanding, they are changing the

51:52.280 --> 51:57.600
open source part of their code and making it available via either SSPL or the ElastiX

51:57.600 --> 51:58.600
license.

51:58.600 --> 52:04.360
And both of them sort of in some shape or form disallow building a competing service,

52:04.360 --> 52:05.360
right?

52:05.360 --> 52:06.360
Right.

52:06.360 --> 52:09.840
Restricts cloud service providers from offering, this is quotes, that's what it says, restricts

52:09.840 --> 52:13.240
cloud service providers from offering our service as a service.

52:13.240 --> 52:14.240
Right.

52:14.240 --> 52:15.600
And that's in violation of OSI 6.

52:15.600 --> 52:20.360
And they are very clear about it's not, it's only to third parties, not for internal usage.

52:20.360 --> 52:25.680
So if I am a big company and I need to build a product, I can provide it as a service to

52:25.680 --> 52:33.200
my other teams in the company, just not to your users directly, right?

52:33.200 --> 52:34.740
That's a commercial restriction.

52:34.740 --> 52:36.000
Don't compete with me essentially.

52:36.000 --> 52:37.000
Exactly.

52:37.000 --> 52:38.000
Yeah.

52:38.000 --> 52:39.000
Right.

52:39.000 --> 52:40.840
Because you can compete internally inside your own company, not make any money from

52:40.840 --> 52:43.000
it, but get great usage of the software.

52:43.000 --> 52:47.160
But you can't create a competing company against the inventor.

52:47.160 --> 52:51.120
This goes back to what you were saying before, the inventor or the user of the invention.

52:51.120 --> 52:52.120
Exactly.

52:52.120 --> 52:53.120
Yeah.

52:53.120 --> 52:59.560
And they can still build a commercial product on it, just not a competing service, right?

52:59.560 --> 53:04.680
But the holy grail would be to offer a single license, right?

53:04.680 --> 53:08.720
That takes away, hey, this is proprietary part of the code and this is the quote unquote

53:08.720 --> 53:11.800
open source or similar to open source part of the code.

53:11.800 --> 53:16.880
And ideally what looks like what they want to get to is to offer a single license that

53:16.880 --> 53:23.440
can cover both their free and their paid features while being as open as possible, right?

53:23.440 --> 53:31.160
And if that would be there, I think we would jump on it immediately because we also currently

53:31.160 --> 53:37.200
have dual license, which is what Cockroach has, which is what Elastic has and many others

53:37.200 --> 53:38.320
have.

53:38.320 --> 53:42.200
But having that single license would be the holy grail.

53:42.200 --> 53:44.660
And I don't know if you wanted to talk also about BSL, right?

53:44.660 --> 53:55.420
Which is the MariaDB's license, where they say that the initial code is going to be proprietary,

53:55.420 --> 54:00.040
but after a certain amount of time, three to five years, it will become open source

54:00.040 --> 54:05.600
and it would become Apache 2 or something liberal, which is what Cockroach is doing.

54:05.600 --> 54:12.000
CockroachDB is doing, so they're open source, they switched to Cockroach BSL modifications

54:12.000 --> 54:13.000
slightly.

54:13.000 --> 54:17.900
That's also a great way to essentially say the same thing, right?

54:17.900 --> 54:27.920
Which is, please don't compete with us by providing a service to our core product.

54:27.920 --> 54:33.840
And if you think in terms of what's the corporate for Amazon, let's say e-commerce is a core

54:33.840 --> 54:40.840
product and if you were to use Amazon machines or Amazon technology to actually build a competing

54:40.840 --> 54:43.280
stuff, I'm pretty sure they'll be pretty pissed as well.

54:43.280 --> 54:47.960
And so all these companies are doing is that we have spent a lot of time and effort into

54:47.960 --> 54:53.200
building and this is our main source of living, right?

54:53.200 --> 54:54.200
Just play nicely.

54:54.200 --> 54:56.960
Otherwise we have to invent new licenses.

54:56.960 --> 55:02.200
Yeah, David Kramer shared some of his sentiment on that subject because Century was licensed

55:02.200 --> 55:06.640
to BDS3 and transitioned to the BSL.

55:06.640 --> 55:11.080
And I'm paraphrasing, but what I can recall from that conversation, episode 371, Real

55:11.080 --> 55:15.080
Licensing Century, was essentially David was saying, I want to do whatever it takes to

55:15.080 --> 55:21.280
help me run this commercial business, but also respect open source because without the

55:21.280 --> 55:24.540
business making the thing, there is no thing.

55:24.540 --> 55:29.240
And that's a paraphrase of David's sentiment on that, but that's essentially what he

55:29.240 --> 55:36.740
boiled it down to was his concern in regards to transitioning away from BDS3 to the business

55:36.740 --> 55:38.040
source license, which you mentioned.

55:38.040 --> 55:39.040
Yeah.

55:39.040 --> 55:43.800
And actually if you think about what is happening, right, like, you know, I mean, again, I argue

55:43.800 --> 55:48.640
that SSPL is very close to open source, to the AGPL or GPL, right?

55:48.640 --> 55:50.800
But SSPL is not open source.

55:50.800 --> 55:55.760
So what's actually happening right now is a bunch of open source companies which truly

55:55.760 --> 56:01.600
believe in open source are having to switch to quote unquote non-open source licenses.

56:01.600 --> 56:05.600
And that's not, that's not great, right?

56:05.600 --> 56:10.080
And the funny thing is they are all talking about the same one player in the market, right?

56:10.080 --> 56:14.920
They're not talking about a Google or about Microsoft or anybody else.

56:14.920 --> 56:18.800
In fact, in the Elastic blog post, they mentioned that they have played very nicely with all

56:18.800 --> 56:24.800
the other players in the ecosystem, just the AWS, right?

56:24.800 --> 56:27.680
So I have no personal, yeah, exactly.

56:27.680 --> 56:29.920
I mean, I have no personal thing against AWS, right?

56:29.920 --> 56:33.040
Like we run on AWS, we are completely fine.

56:33.040 --> 56:37.360
And from what I understand, they're not trying to build a D-graph alternative, right?

56:37.360 --> 56:43.120
But there is something there where if a bunch of companies are talking about the same, you

56:43.120 --> 56:50.240
know, quote unquote, curious actor, yeah, let's call him an actor.

56:50.240 --> 56:51.800
I don't want to say a bad actor, right?

56:51.800 --> 56:52.800
Because exactly.

56:52.800 --> 56:55.160
Because we just don't know, but we're a curious actor.

56:55.160 --> 56:56.840
I think there must be something there, right?

56:56.840 --> 57:02.000
Do you think then, given that we had just said that the OSI, that it's in their best

57:02.000 --> 57:08.600
interest for open source to help these businesses that have this concern, have this trouble

57:08.600 --> 57:16.080
to create an open source license that give them the needs they have to sort of solve

57:16.080 --> 57:21.880
the needs they have, these problems, but also adhere to the letter of open source, because

57:21.880 --> 57:28.080
if you look at the intent, it seems like they're intending to respect and live within a world

57:28.080 --> 57:33.720
of open source, whether it's for the, in quotes, open source brand name that can't be trademarked

57:33.720 --> 57:39.240
because it's not trademarkable, but it certainly has a marketability to it.

57:39.240 --> 57:45.520
Like if you masquerade as faux open source, is that right, Jared, faux open source?

57:45.520 --> 57:46.520
That's right.

57:46.520 --> 57:47.520
Then you're not open source.

57:47.520 --> 57:52.480
There is a marketability to seeing you're open source for sure.

57:52.480 --> 57:53.480
Absolutely.

57:53.480 --> 57:54.480
Yeah.

57:54.480 --> 58:00.480
And I think, you know, we do open source because it allows, it's not just a way to have more

58:00.480 --> 58:05.160
eyes and make sure that the product is, that the score is of high quality and so and so

58:05.160 --> 58:09.280
forth, but there's also, it's a distribution model, right?

58:09.280 --> 58:10.280
It's a distribution model.

58:10.280 --> 58:14.960
It's a way by which you think your software could be consumed by anybody without necessarily

58:14.960 --> 58:15.960
having to pay you.

58:15.960 --> 58:16.960
Right.

58:16.960 --> 58:21.160
So they are not saying that if you build a commercially successful product using our

58:21.160 --> 58:24.040
software payers, they are not saying that.

58:24.040 --> 58:28.320
They're just saying like, just don't build a competing service against us.

58:28.320 --> 58:35.360
And also going back to the first, the initiation of a bunch of these open source companies,

58:35.360 --> 58:41.760
it started with like one or multiple like people who just believed in open source, right?

58:41.760 --> 58:46.840
They just wanted to make things in open source because they have consumed open source software.

58:46.840 --> 58:47.840
Their life.

58:47.840 --> 58:48.840
Right.

58:48.840 --> 58:53.800
So when I was like in college, I was all into Linux and I was playing with Gentoo and Ubuntu

58:53.800 --> 58:58.140
and I don't know, like whatever other Linux flavor there was out there, FreeBSD, NetBSD.

58:58.140 --> 59:00.200
And I just believed in open source.

59:00.200 --> 59:04.540
And that was our stance against, you know, Windows at the time, right?

59:04.540 --> 59:12.320
And so I've created multiple projects, some of which actually got popular, including Dgraph.

59:12.320 --> 59:16.800
And then we have Badger and then we have Strato and they are all open source because we just

59:16.800 --> 59:17.800
believe in it.

59:17.800 --> 59:18.800
Right.

59:18.800 --> 59:24.360
It's a bit of like a pain to, to have to move away from that, even in theory, right?

59:24.360 --> 59:29.300
Even in theory, just because of this, this one problem.

59:29.300 --> 59:36.560
So Manish, clean slate, start Dgraph over today, same exact software, same business,

59:36.560 --> 59:37.560
pick a license.

59:37.560 --> 59:38.560
I love it.

59:38.560 --> 59:45.040
What are you going to go with?

59:45.040 --> 59:50.200
I think SSPL is looking pretty attractive, SSPL is looking pretty attractive right now.

59:50.200 --> 59:53.500
And also like, just notice one more thing, right?

59:53.500 --> 01:00:00.220
From 2010 or 2015, the world has changed to be more cloud first and on-prem later than

01:00:00.220 --> 01:00:02.640
on-prem first and cloud later approach, right?

01:00:02.640 --> 01:00:07.280
And so if I were, if I were or somebody else were to build a service today, they might

01:00:07.280 --> 01:00:09.680
choose not to even make it open source.

01:00:09.680 --> 01:00:14.500
They might say, you know what, Snowflake has done really well by being completely cloud-based

01:00:14.500 --> 01:00:15.500
system.

01:00:15.500 --> 01:00:19.160
And if I'm not wrong, Snowflake is not open source, right?

01:00:19.160 --> 01:00:22.060
And so, so why open source, right?

01:00:22.060 --> 01:00:26.260
Maybe that, maybe that could be the question is like, open source already has tons of problems

01:00:26.260 --> 01:00:31.360
because there is, you know, actor or multiple actors like causing so many issues, like why

01:00:31.360 --> 01:00:32.640
bother with all that?

01:00:32.640 --> 01:00:36.680
Just avoid all of that and just go completely cloud source.

01:00:36.680 --> 01:00:38.900
And you could still build a good business out of it, right?

01:00:38.900 --> 01:00:41.840
And so that, then it becomes just a question of principle, right?

01:00:41.840 --> 01:00:44.160
Do you still really believe in open source?

01:00:44.160 --> 01:00:47.920
Do you still believe that your code should be, we should be, other people should be able

01:00:47.920 --> 01:00:52.920
to check it and make sure that you're not doing anything fishy or help you find bugs

01:00:52.920 --> 01:00:55.800
or, you know, that kind of stuff.

01:00:55.800 --> 01:01:04.920
So it becomes a matter of principle and a matter of business, it seems like.

01:01:04.920 --> 01:01:08.280
This episode of The Change Log is brought to you by Render.

01:01:08.280 --> 01:01:15.040
Render is a unified platform to build and run all your apps and websites with free SSL,

01:01:15.040 --> 01:01:19.280
a global CDN, private networks, and auto deploys from Git.

01:01:19.280 --> 01:01:23.480
They handle everything from simple static sites to complex applications with dozens

01:01:23.480 --> 01:01:24.480
of microservices.

01:01:24.480 --> 01:01:29.400
If you're a developer or a founder that's frustrated with AWS's complexity or Heroku's

01:01:29.400 --> 01:01:33.680
high costs, you owe it to yourself to use the $100 in free credits they're giving our

01:01:33.680 --> 01:01:35.980
listeners to give Render a try.

01:01:35.980 --> 01:01:40.680
Render is built for modern applications and offers everything you need out of the box.

01:01:40.680 --> 01:01:46.200
One-click scaling, zero downtime deploys, built-in SSL, private networking, managed

01:01:46.200 --> 01:01:51.440
databases, secrets and configuration management, persistent block storage, and infrastructure

01:01:51.440 --> 01:01:52.440
as code.

01:01:52.440 --> 01:01:56.800
Heroku customers running production and staging workloads typically see cost reductions of

01:01:56.800 --> 01:01:59.240
over 50% after switching to Render.

01:01:59.240 --> 01:02:00.240
Here's the best part.

01:02:00.240 --> 01:02:04.920
We work closely with the team at Render to ensure you have zero risk by giving you $100

01:02:04.920 --> 01:02:09.240
in free credits, plus they're going to assign a world-class engineer to your account to

01:02:09.240 --> 01:02:11.440
offer guidance and answer any questions you have.

01:02:11.440 --> 01:02:15.200
When you're ready to transition your infrastructure, they'll be there to help you with that too.

01:02:15.200 --> 01:02:19.580
Automate your cloud hosting with Render at render.com slash changelog, get $100 in free

01:02:19.580 --> 01:02:23.840
credits to try the Render platform, plus a world-class engineer assigned to your account

01:02:23.840 --> 01:02:29.160
to guide you along the way to send an email to our special email changelog at render.com

01:02:29.160 --> 01:02:31.000
to get access to those free credits.

01:02:31.000 --> 01:02:47.240
All that begins at render.com slash changelog.

01:02:47.240 --> 01:02:51.720
Coming up in this segment, we're talking with Paul Dix, co-founder and CTO at Influx Data.

01:02:51.720 --> 01:02:56.260
Paul shares his perspective on running an open source business, how Influx Data is innovating

01:02:56.260 --> 01:03:01.720
their commercial offering while having a permissive MIT licensed version of InfluxDB.

01:03:01.720 --> 01:03:06.800
Paul also shares his thoughts on this standoff between Elastic and AWS and why he's long

01:03:06.800 --> 01:03:08.840
on Mongo and short on Elastic.

01:03:08.840 --> 01:03:09.840
Here we go.

01:03:09.840 --> 01:03:14.880
So Paul, tell us, tell us your name, tell us your company and kind of your view of the

01:03:14.880 --> 01:03:17.240
open source world, where your opinion is coming from.

01:03:17.240 --> 01:03:18.960
Uh, yeah, so I'm Paul Dix.

01:03:18.960 --> 01:03:21.400
I'm the CTO and co-founder of Influx Data.

01:03:21.400 --> 01:03:26.800
We're the makers of InfluxDB, which is an open source time series database.

01:03:26.800 --> 01:03:32.240
Uh, I created it in 2013 and I've been, uh, initially running the company and then as

01:03:32.240 --> 01:03:35.120
CTO, uh, which I'm still doing to this day.

01:03:35.120 --> 01:03:41.880
So my experience over that time has basically been trying to build a business around, uh,

01:03:41.880 --> 01:03:46.620
an open source software project, particularly in infrastructure software and in databases

01:03:46.620 --> 01:03:47.940
in particular.

01:03:47.940 --> 01:03:50.360
So Elastic, obviously I'm very familiar with.

01:03:50.360 --> 01:03:53.840
I saw it when they, you know, were initially becoming a company.

01:03:53.840 --> 01:03:56.040
I remember the project early on.

01:03:56.040 --> 01:03:59.720
Some of the work that they've done was, you know, served as inspiration to me as I was

01:03:59.720 --> 01:04:04.120
building out Influx and the various parts of our stack.

01:04:04.120 --> 01:04:06.880
Very similar software, very similar business model.

01:04:06.880 --> 01:04:08.480
It looks like Influx is MIT.

01:04:08.480 --> 01:04:12.440
Can you tell us like your license selection and how your business works around it?

01:04:12.440 --> 01:04:13.440
Yeah.

01:04:13.440 --> 01:04:18.520
So all of the open source software that we create is MIT licensed and our business model

01:04:18.520 --> 01:04:23.080
is basically, so we are essentially at this point an open core business.

01:04:23.080 --> 01:04:26.680
So there's open source InfluxDB, which is MIT licensed.

01:04:26.680 --> 01:04:28.720
People can do whatever, what they want with it.

01:04:28.720 --> 01:04:32.080
Uh, it works essentially as a single server.

01:04:32.080 --> 01:04:37.480
We have a fork of the open source project that is closed source and proprietary.

01:04:37.480 --> 01:04:42.840
If you want high availability or scale out clustering of InfluxDB, that is our commercial

01:04:42.840 --> 01:04:43.840
offering, right?

01:04:43.840 --> 01:04:48.260
So essentially we don't put clustering features into the open source.

01:04:48.260 --> 01:04:51.080
Everything else is fair game to go into the open source.

01:04:51.080 --> 01:04:56.080
If it has to do with a single server, optimizing query performance, APIs, functionality, all

01:04:56.080 --> 01:04:59.040
that kind of stuff, it goes into free open source.

01:04:59.040 --> 01:05:08.360
So we, we launched this as a, you know, managed service inside of AWS in, I think it was April

01:05:08.360 --> 01:05:10.180
of 2016.

01:05:10.180 --> 01:05:15.760
We launched it as basically like on premise software product that people could buy in

01:05:15.760 --> 01:05:18.440
September of 2016.

01:05:18.440 --> 01:05:21.880
Our AWS service is still running to this day.

01:05:21.880 --> 01:05:26.980
Essentially what that is, is it's the closed source software spun up, you know, a customer

01:05:26.980 --> 01:05:28.080
can come and sign up.

01:05:28.080 --> 01:05:33.500
They say what size, you know, instances they want, how much storage, how many instances.

01:05:33.500 --> 01:05:37.840
We spin up the, you know, the closed source enterprise version of our product on it.

01:05:37.840 --> 01:05:41.720
We add monitoring and backups and stuff like that.

01:05:41.720 --> 01:05:47.200
And then, you know, that's, that's the hosted version of the product, the what I say on

01:05:47.200 --> 01:05:53.640
premise version is essentially you buy the software from us, it's an annual subscription

01:05:53.640 --> 01:05:55.920
and then you run and manage it yourself.

01:05:55.920 --> 01:06:00.080
And that's either in your own data centers, but plenty of people are also doing it inside

01:06:00.080 --> 01:06:03.780
of AWS, GCP, all that kind of stuff.

01:06:03.780 --> 01:06:12.280
Last year, or I guess late 2019 now, we launched basically version two of our cloud product.

01:06:12.280 --> 01:06:17.840
And that essentially is, it's a very different kind of thing because it's not just a database

01:06:17.840 --> 01:06:21.280
and it doesn't look anything like the open source software that we create.

01:06:21.280 --> 01:06:25.440
The API is the same, but the underlying like architecture and how everything works together

01:06:25.440 --> 01:06:28.200
is completely different.

01:06:28.200 --> 01:06:31.340
And that's for version 2.0 of InfluxDB.

01:06:31.340 --> 01:06:37.520
So the model we switched to with 2.0, we essentially moved to a cloud first model.

01:06:37.520 --> 01:06:42.720
So we deliver that cloud product continuously as like a SaaS service.

01:06:42.720 --> 01:06:49.760
And then over time, some of those features get pulled out into the open source InfluxDB.

01:06:49.760 --> 01:06:55.000
Is that because of a realization that the other way wasn't working well enough or it's

01:06:55.000 --> 01:06:59.280
just, why did you switch to the cloud first model?

01:06:59.280 --> 01:07:04.400
Basically because it has nothing to do with open source versus closed, it has everything

01:07:04.400 --> 01:07:06.900
to do with software delivery cycles.

01:07:06.900 --> 01:07:10.400
So before we looked very much like an enterprise software company.

01:07:10.400 --> 01:07:15.660
We'd have anywhere from two to four feature-bearing releases a year, which could then get shipped

01:07:15.660 --> 01:07:18.960
to our cloud customers and shipped to our on-premise customers.

01:07:18.960 --> 01:07:24.120
The problem with that is you don't get that many cycles of iteration and each release

01:07:24.120 --> 01:07:28.200
is like super painful to do because there's so much code wrapped up in it.

01:07:28.200 --> 01:07:30.980
So I really wanted to move to a continuous delivery model.

01:07:30.980 --> 01:07:35.620
So we could get much faster feedback, features out to customers quicker, and the individual

01:07:35.620 --> 01:07:38.020
releases would be much, much smaller.

01:07:38.020 --> 01:07:43.880
So that had to do with basically wanting to be a cloud company and deliver a cloud product

01:07:43.880 --> 01:07:48.600
as opposed to deliver like a packaged on-premise enterprise product.

01:07:48.600 --> 01:07:50.240
How does that trickle down to your open source then?

01:07:50.240 --> 01:07:56.200
How does InfluxDB, the open source, benefit or not benefit from this switch?

01:07:56.200 --> 01:08:01.280
I think the benefit is that by the time something lands in open source, we've already vetted

01:08:01.280 --> 01:08:06.840
the features and vetted like its functionality and how it works inside our cloud products.

01:08:06.840 --> 01:08:13.160
The thing is with our cloud product, we're able to iterate on it and release fixes very

01:08:13.160 --> 01:08:14.160
quickly.

01:08:14.160 --> 01:08:18.280
Once you ship something in an open source release, it's much more painful to ship

01:08:18.280 --> 01:08:20.160
a fix, ship an update.

01:08:20.160 --> 01:08:23.340
So I think that's a benefit.

01:08:23.340 --> 01:08:29.520
The drawback is it's less, I think it reduces the collaboration with the community in terms

01:08:29.520 --> 01:08:33.440
of what we're developing and how it's getting done and all that kind of stuff.

01:08:33.440 --> 01:08:39.600
It basically makes like the open source like a downstream kind of product, right?

01:08:39.600 --> 01:08:40.600
Yeah.

01:08:40.600 --> 01:08:44.320
Well, that reflects the tweet you put out, which is my own preference is to keep open

01:08:44.320 --> 01:08:50.000
code permissive and open and have a clear strategy as you just depicted here with how

01:08:50.000 --> 01:08:51.960
that code will be used in the commercial offering.

01:08:51.960 --> 01:08:54.480
So you're eating your own dolphin, which is good.

01:08:54.480 --> 01:08:55.480
Yeah.

01:08:55.480 --> 01:09:01.000
So there's, what I just described is basically our 2.0 model, but actually I'm actually trying

01:09:01.000 --> 01:09:08.320
to move even beyond that over to what I call basically like complimentary software model,

01:09:08.320 --> 01:09:09.320
right?

01:09:09.320 --> 01:09:15.520
So we have a new project that we announced a few months ago called InfluxDB Iox, which

01:09:15.520 --> 01:09:20.320
is basically the new core of the database written in Rust using Apache Arrow.

01:09:20.320 --> 01:09:25.240
And the way that we're building this out is essentially there's the open source thing,

01:09:25.240 --> 01:09:28.560
and then there's another piece of software that we have that is closed source.

01:09:28.560 --> 01:09:32.240
And as a whole, the system is designed to be two pieces of software, one of which is

01:09:32.240 --> 01:09:36.120
totally open and permissive, permissively licensed, you know, you can do whatever you

01:09:36.120 --> 01:09:37.120
want with it.

01:09:37.120 --> 01:09:38.120
You can compete with us.

01:09:38.120 --> 01:09:39.120
That's fine.

01:09:39.120 --> 01:09:40.380
That's by design.

01:09:40.380 --> 01:09:44.320
And then the other piece, which is the software that we're writing to be able to run the open

01:09:44.320 --> 01:09:46.600
source software in our cloud offering.

01:09:46.600 --> 01:09:51.480
So the reason why I say it's complimentary is because what I want is I want our cloud

01:09:51.480 --> 01:09:56.320
product to be running the open source bits exactly as is, like exactly as the open source

01:09:56.320 --> 01:10:02.080
community experiences them, because it means we'll find bugs faster.

01:10:02.080 --> 01:10:05.960
It also means we can have more of a collaborative effort with the community in terms of making

01:10:05.960 --> 01:10:12.360
improvements because we're not like right now with our cloud two offering like InfluxDB

01:10:12.360 --> 01:10:15.400
2.0 open source is one project.

01:10:15.400 --> 01:10:16.720
Cloud two is totally separate.

01:10:16.720 --> 01:10:23.560
Now we use some of the libraries from InfluxDB 2.0, but it's not like, it's not even like

01:10:23.560 --> 01:10:25.040
a fork of the project.

01:10:25.040 --> 01:10:32.520
It's literally two separate projects and products and they have the, they have like the same

01:10:32.520 --> 01:10:33.520
API.

01:10:33.520 --> 01:10:34.520
Yeah.

01:10:34.520 --> 01:10:35.520
Two masters.

01:10:35.520 --> 01:10:36.520
Right.

01:10:36.520 --> 01:10:37.520
Exactly.

01:10:37.520 --> 01:10:38.520
Yeah.

01:10:38.520 --> 01:10:39.520
With, with Iox and this other.

01:10:39.520 --> 01:10:40.520
In terms of serving two masters is what I mean.

01:10:40.520 --> 01:10:41.520
Like literally you're serving two masters.

01:10:41.520 --> 01:10:42.800
You have two different projects.

01:10:42.800 --> 01:10:45.360
It's very difficult to serve both easily.

01:10:45.360 --> 01:10:51.720
And like internally we have a separate team that works on the open source bits versus

01:10:51.720 --> 01:10:54.440
the people working on the cloud, closed source cloud product.

01:10:54.440 --> 01:10:55.440
Right.

01:10:55.440 --> 01:10:58.960
I asked you the benefits of the open source and it seemed like the benefits of the open

01:10:58.960 --> 01:11:02.800
source was obvious, but they're different because they're separate.

01:11:02.800 --> 01:11:03.800
That's what it seemed like.

01:11:03.800 --> 01:11:06.160
I was going to ask you about that because it seems like with your cloud two that you

01:11:06.160 --> 01:11:09.440
mentioned, you can obviously push forward, but it's downstream.

01:11:09.440 --> 01:11:14.880
The open source is downstream and it seems like maybe, you know, just disconnected basically.

01:11:14.880 --> 01:11:15.880
Yeah.

01:11:15.880 --> 01:11:16.880
Yeah.

01:11:16.880 --> 01:11:17.880
It's a bit disconnected.

01:11:17.880 --> 01:11:22.600
Whereas like with this new model, again, like my goal is we offer it as a cloud product

01:11:22.600 --> 01:11:23.600
first.

01:11:23.600 --> 01:11:28.720
So that's, we're not doing that yet, but then later we'll offer it as an on-premise product.

01:11:28.720 --> 01:11:34.560
But the idea there is that people who adopt Iox and you know, deploy a bunch of servers

01:11:34.560 --> 01:11:38.720
and stuff like that, if they come to us and they want the on-premise product, it's a product

01:11:38.720 --> 01:11:42.480
that they add in addition to the open source software they're already running.

01:11:42.480 --> 01:11:43.480
Right.

01:11:43.480 --> 01:11:44.480
They continue to do that.

01:11:44.480 --> 01:11:50.440
It's very, very different than our old InfluxDB 1.x enterprise model where our enterprise

01:11:50.440 --> 01:11:55.280
product is a replacement for the open source InfluxDB, right?

01:11:55.280 --> 01:12:02.220
I think that's like a heavier lift and it's a bigger ask for users to replace their open

01:12:02.220 --> 01:12:03.220
source bits.

01:12:03.220 --> 01:12:07.120
Like it's better, I think it's better if they're able to run the open source bits and continue

01:12:07.120 --> 01:12:11.500
to have that experience because one, it makes the contribution easier.

01:12:11.500 --> 01:12:15.940
It makes it easier for them to consider adopting a commercial product because at that point

01:12:15.940 --> 01:12:20.640
they're saying like, okay, I have this commercial product, but it's not like I'm still using

01:12:20.640 --> 01:12:21.640
the open source bits.

01:12:21.640 --> 01:12:26.480
So I can still be sure that, you know, if the commercial relationship goes sour or I

01:12:26.480 --> 01:12:30.120
decide I don't like want that functionality, it's still good.

01:12:30.120 --> 01:12:32.520
I can still continue to use the open source bits.

01:12:32.520 --> 01:12:38.600
There's definitely some interesting ramifications that I think I would love to see play out

01:12:38.600 --> 01:12:41.600
as you go about deploying that new idea.

01:12:41.600 --> 01:12:42.780
Am I understanding correctly?

01:12:42.780 --> 01:12:49.680
It's kind of like the open source bits is like the core software offering and then the

01:12:49.680 --> 01:12:54.600
proprietary stuff is like a management controller or like a deployment type of a thing.

01:12:54.600 --> 01:12:59.200
Like it's all the things that surround it that you would be offering as a service perhaps,

01:12:59.200 --> 01:13:02.160
but this is as a licensable addition.

01:13:02.160 --> 01:13:05.240
Yeah, that's a good way of thinking of it.

01:13:05.240 --> 01:13:10.080
So yeah, it's basically all this code that we have to write to offer it as a service,

01:13:10.080 --> 01:13:11.080
right?

01:13:11.080 --> 01:13:16.380
Operations, backups, like deploying new versions of it, management, all this kind of stuff.

01:13:16.380 --> 01:13:21.420
The other thing is we want to be able to offer that as an on-premise piece of software.

01:13:21.420 --> 01:13:28.740
Another way to think about this is the open source thing represents the data plane, whereas

01:13:28.740 --> 01:13:32.520
our closed source product represents the control plane.

01:13:32.520 --> 01:13:36.980
But the way the two interact is the control plane interacts with the data plane through

01:13:36.980 --> 01:13:40.740
its public API and that public API is open source.

01:13:40.740 --> 01:13:45.440
So literally if somebody wanted to write an open source control plane for it, or if they

01:13:45.440 --> 01:13:50.120
wanted to write their own competing software products, they can do so.

01:13:50.120 --> 01:13:52.440
And the license totally permits that.

01:13:52.440 --> 01:13:57.800
And the thing is like, we don't have to worry about our open source bits competing with

01:13:57.800 --> 01:14:03.760
our commercial bits, because the truth is the responsibilities of the two pieces of

01:14:03.760 --> 01:14:05.900
software are clearly delineated.

01:14:05.900 --> 01:14:09.960
So it's like, there's no reason for people to put control plane bits into the main open

01:14:09.960 --> 01:14:11.480
source project.

01:14:11.480 --> 01:14:15.080
They would have to create a separate open source project to do it, which would make

01:14:15.080 --> 01:14:16.080
sense.

01:14:16.080 --> 01:14:17.080
Right.

01:14:17.080 --> 01:14:21.640
But at that point, you're kind of just deciding what is control plane and what is data plane.

01:14:21.640 --> 01:14:26.760
And that's kind of the same concept of what goes in core and what goes in proprietary,

01:14:26.760 --> 01:14:27.760
isn't it?

01:14:27.760 --> 01:14:28.760
What about backups?

01:14:28.760 --> 01:14:32.760
Well, it could go right into our core offering, but it's more of a control plane kind of a

01:14:32.760 --> 01:14:33.760
thing.

01:14:33.760 --> 01:14:34.760
So we'll put it over here.

01:14:34.760 --> 01:14:36.280
It seems like you still make those decisions.

01:14:36.280 --> 01:14:41.280
You just make them and the two pieces of software are further apart perhaps.

01:14:41.280 --> 01:14:42.960
I view them as further apart.

01:14:42.960 --> 01:14:47.640
When I think of open core businesses, I think of businesses where the commercial product

01:14:47.640 --> 01:14:51.720
is a replacement for the open source product.

01:14:51.720 --> 01:14:54.480
This is not that, and it's designed specifically not to be that.

01:14:54.480 --> 01:14:56.720
Like take data stacks, for instance.

01:14:56.720 --> 01:15:00.480
Data stacks enterprise is a replacement for Cassandra, right?

01:15:00.480 --> 01:15:05.800
And now like data stacks is obviously offering it as a service called Astra.

01:15:05.800 --> 01:15:06.800
That's doing well.

01:15:06.800 --> 01:15:09.480
But again, like that's an open core model.

01:15:09.480 --> 01:15:10.480
Gotcha.

01:15:10.480 --> 01:15:15.600
I think a good example is like Google and Kubernetes, right?

01:15:15.600 --> 01:15:25.880
Like open source Kubernetes certainly doesn't represent the entirety of GCP and all the

01:15:25.880 --> 01:15:28.560
software that runs that.

01:15:28.560 --> 01:15:35.120
But like obviously Google has a vested interest in driving Kubernetes forward and GCP happens

01:15:35.120 --> 01:15:41.160
to be like one of the best places to buy Kubernetes, to operate Kubernetes.

01:15:41.160 --> 01:15:45.680
So what's your thoughts on the server-side public license and Elastic's move?

01:15:45.680 --> 01:15:50.080
You obviously prefer this other way of going about it, but do you think it was smart by

01:15:50.080 --> 01:15:51.080
them, short-sighted?

01:15:51.080 --> 01:15:52.940
What's your take on that?

01:15:52.940 --> 01:15:56.600
So I don't think it's, it's not the move I would make.

01:15:56.600 --> 01:16:00.600
And you know, to be totally honest though, like to me it's not really about a license

01:16:00.600 --> 01:16:02.120
choice.

01:16:02.120 --> 01:16:09.160
It's more about how they intend to drive innovation that drives commercial value.

01:16:09.160 --> 01:16:15.320
And the truth is like I own stock in MongoDB, which is obviously SSPL licensed software,

01:16:15.320 --> 01:16:19.400
but I do not own stock in Elastic, nor would I buy stock in Elastic right now, yet I'm

01:16:19.400 --> 01:16:21.740
holding MongoDB, right?

01:16:21.740 --> 01:16:23.240
Even though they're both SSPL.

01:16:23.240 --> 01:16:28.680
So like from a pure, you know, mercenary investor perspective, I'm long Mongo, but I'm short

01:16:28.680 --> 01:16:31.640
Elastic and it has nothing to do with the license.

01:16:31.640 --> 01:16:36.320
I think them changing the license is more a symptom of the fact that they're getting

01:16:36.320 --> 01:16:40.320
out innovated on their cloud offering.

01:16:40.320 --> 01:16:46.600
If they had a cloud offering that was demonstrably better than Amazon's Elastic service, they

01:16:46.600 --> 01:16:50.880
would continue to be able to drive revenue and drive people to it.

01:16:50.880 --> 01:16:57.440
If they're so upset because they feel like, sorry, AWS is eating their lunch on the hosted

01:16:57.440 --> 01:17:00.960
offering, then they, you know, they change their license.

01:17:00.960 --> 01:17:08.200
Like I mean, ultimately like they had a choice, which was they either write more closed source

01:17:08.200 --> 01:17:17.200
code or they re-license their, you know, they continue to write code out in the open, I'm

01:17:17.200 --> 01:17:22.360
putting air quotes around this, but that code is under a different license.

01:17:22.360 --> 01:17:28.240
They chose the different license path, which to me, I think, I mean, personally, like I'm

01:17:28.240 --> 01:17:30.000
not a fan of source available licenses.

01:17:30.000 --> 01:17:41.040
I think they're a disservice to the community because, because then, yeah, they are disservice

01:17:41.040 --> 01:17:45.800
to the community because then you can say like, oh, community members like saw your

01:17:45.800 --> 01:17:51.720
code or whatever, like it just means that people can't start like competing projects

01:17:51.720 --> 01:17:58.280
with you without, you know, putting themselves at risk of being, you know, accused of taking

01:17:58.280 --> 01:17:59.400
your code or whatever.

01:17:59.400 --> 01:18:00.400
Right?

01:18:00.400 --> 01:18:05.360
Like I prefer open code is open, closed code is closed.

01:18:05.360 --> 01:18:11.960
And the thing that kind of annoys me about the whole Elastic AWS standoff is both of

01:18:11.960 --> 01:18:17.580
them are trying to, you know, put forth this position that they have, you know, more the

01:18:17.580 --> 01:18:21.480
moral high ground there, you know, they have moral superiority over the other one, right?

01:18:21.480 --> 01:18:26.080
Like Amazon saying like, oh, we're protectors of open source, so we're going to launch this

01:18:26.080 --> 01:18:27.840
fork or whatever.

01:18:27.840 --> 01:18:32.000
And the truth is like, even when they did open distro, I called it a fork then, even

01:18:32.000 --> 01:18:36.520
though they said it's not a fork because it's just like, whatever, a build, it was all,

01:18:36.520 --> 01:18:40.580
it was always obvious, like when they launched that, that fork is what it was ultimately

01:18:40.580 --> 01:18:45.520
going to become because Elastic was going to take the stance that Amazon's stealing

01:18:45.520 --> 01:18:46.840
from us.

01:18:46.840 --> 01:18:50.500
So we're going to change the license of more and more of our code, which is then going

01:18:50.500 --> 01:18:55.760
to give Amazon no choice but to fork, right?

01:18:55.760 --> 01:18:59.620
So Amazon's claiming they have the moral high ground.

01:18:59.620 --> 01:19:00.620
It's not true.

01:19:00.620 --> 01:19:03.760
Like they just, they're just doing what's best for their customers and their shareholders,

01:19:03.760 --> 01:19:04.760
right?

01:19:04.760 --> 01:19:06.720
They're trying to optimize shareholder value.

01:19:06.720 --> 01:19:10.640
And obviously like all their customers are saying, like, host Elastic for us.

01:19:10.640 --> 01:19:15.560
And then Elastic is trying to say like, oh, we're doing this to protect ourselves from

01:19:15.560 --> 01:19:17.240
Amazon because they're stealing from us.

01:19:17.240 --> 01:19:21.380
I mean, the truth is there are tons of hosting companies that have been hosting Elastic for

01:19:21.380 --> 01:19:22.380
a long time.

01:19:22.380 --> 01:19:27.080
And if you look at where Elastic makes its money, it's probably mostly from log search.

01:19:27.080 --> 01:19:31.640
How many log search companies are built on top of Elastic and they just open that up,

01:19:31.640 --> 01:19:32.640
right?

01:19:32.640 --> 01:19:38.280
So Elastic is just upset because Amazon out competed them on the hosting front, whereas

01:19:38.280 --> 01:19:42.920
like other hosting providers like Compose and Avin and stuff like that didn't really

01:19:42.920 --> 01:19:45.840
make a dent in Elastic's top line, right?

01:19:45.840 --> 01:19:48.920
So their claim like, oh, we have to do this.

01:19:48.920 --> 01:19:49.920
Like, no, you don't.

01:19:49.920 --> 01:19:54.040
You could have kept the code Apache v2 and you could have like written more and more

01:19:54.040 --> 01:20:00.680
code in your service offering that's closed source and kept the two separate, right?

01:20:00.680 --> 01:20:04.940
And this is actually one of the things that I agree with Amazon about where they said

01:20:04.940 --> 01:20:10.080
the reason they created the Open Distro was because Elastic was polluting the open source

01:20:10.080 --> 01:20:15.520
repo with code under different licenses, right, under the Elastic license and stuff like that.

01:20:15.520 --> 01:20:20.080
And what they've done now is they've gone all in on that strategy.

01:20:20.080 --> 01:20:25.720
So basically like they want all the benefits of being an open source company, you know,

01:20:25.720 --> 01:20:30.900
free marketing, free adoption, getting other people to talk about it, use it, whatever,

01:20:30.900 --> 01:20:32.320
but they don't want to pay the price.

01:20:32.320 --> 01:20:39.880
The price of being really open source is that you're giving software away for free, yes,

01:20:39.880 --> 01:20:43.660
you're being permissive, but that also means that anybody can take your software and compete

01:20:43.660 --> 01:20:46.680
with you, which you have to be okay with.

01:20:46.680 --> 01:20:54.400
Like anything that you can really call a platform is only a platform if the total economic activity

01:20:54.400 --> 01:20:58.740
of it outstrips that of any single vendor, right?

01:20:58.740 --> 01:21:03.360
So if you claim your platform, but basically you're getting all the money from it, no,

01:21:03.360 --> 01:21:04.360
you're not.

01:21:04.360 --> 01:21:05.360
Like, you're...

01:21:05.360 --> 01:21:07.680
A monopoly, as you said in your tweets.

01:21:07.680 --> 01:21:08.680
Right.

01:21:08.680 --> 01:21:13.440
This comes back to something you were saying, which in your stance for not 2.0 in terms

01:21:13.440 --> 01:21:17.340
of Influx and what you're doing, but the next version, I think you called it Iox, this maybe

01:21:17.340 --> 01:21:20.460
version three, I'm not sure what you call it, but you said by design.

01:21:20.460 --> 01:21:29.200
It's permissive and you've designed your architecture in terms of commercial offering to expect

01:21:29.200 --> 01:21:31.160
other competitors.

01:21:31.160 --> 01:21:35.760
Whereas it seems like Elastic, based on what you say and others have said, and even kind

01:21:35.760 --> 01:21:40.120
of what they're depicting is that they're upset that Amazon is eating their lunch and

01:21:40.120 --> 01:21:41.280
it's not by design.

01:21:41.280 --> 01:21:44.480
Their model is not by design to be competed with.

01:21:44.480 --> 01:21:45.480
Right, exactly.

01:21:45.480 --> 01:21:50.440
Like their hope was that they would get this massively popular project, which it is Elastic

01:21:50.440 --> 01:21:57.120
is top 10 database project, used the world over, but then they want...

01:21:57.120 --> 01:22:01.480
The classic strategy is you spend a bunch of money to get optimized growth and then

01:22:01.480 --> 01:22:07.680
once you have scale and a monopoly, you want to start collecting monopoly rents.

01:22:07.680 --> 01:22:08.680
Right.

01:22:08.680 --> 01:22:13.960
So now Elastic can't collect monopoly rents because other people are hosting Elastic.

01:22:13.960 --> 01:22:18.480
They're trying to change the model so they can do that, but the problem is then you're

01:22:18.480 --> 01:22:20.800
a different sort of business entirely, right?

01:22:20.800 --> 01:22:23.360
It's fine to be a closed source database company.

01:22:23.360 --> 01:22:27.200
There's Fauna, which is new, Firebase is closed source.

01:22:27.200 --> 01:22:31.200
Each of the cloud providers has a handful of closed source databases, so that's a totally

01:22:31.200 --> 01:22:37.600
fine thing to do, but to try and say like, oh, we're open source and then change it,

01:22:37.600 --> 01:22:40.640
it's just like, I don't know, it's kind of ridiculous.

01:22:40.640 --> 01:22:42.320
Well Paul, fascinating stuff.

01:22:42.320 --> 01:22:44.680
Thanks for sharing your take with us.

01:22:44.680 --> 01:22:48.120
Definitely want to come and have you back once you've rolled out this new, what do you

01:22:48.120 --> 01:22:49.120
call it?

01:22:49.120 --> 01:22:50.120
Complimentary model.

01:22:50.120 --> 01:22:51.120
Yeah.

01:22:51.120 --> 01:22:55.520
You have some real world results to report back how it's going and if it's serving the

01:22:55.520 --> 01:22:59.880
needs of you and your users and the open source community the way that you hope it will, we'd

01:22:59.880 --> 01:23:01.040
love to have you back on the show.

01:23:01.040 --> 01:23:05.360
Yeah, I think that's just one closing thought on that really quick, which you reminded me

01:23:05.360 --> 01:23:10.640
of, which is like, I think for people to think about it can open, permissive open source

01:23:10.640 --> 01:23:12.920
licensing survive in infrastructure software?

01:23:12.920 --> 01:23:17.480
I totally think it can, but I think the people who are producing it have to think ahead of

01:23:17.480 --> 01:23:22.360
time about how they commercialize it over the long run.

01:23:22.360 --> 01:23:30.400
And for us with Iox, I've already defined what success looks like is tons of competitors,

01:23:30.400 --> 01:23:34.440
literally cloud providers adopting the software and competing with us.

01:23:34.440 --> 01:23:38.440
So what that, which isn't going to happen for years, best case scenario, right, if it

01:23:38.440 --> 01:23:39.440
happens at all.

01:23:39.440 --> 01:23:44.880
But what that means is we're developing a commercial product side by side with the open

01:23:44.880 --> 01:23:49.420
product right now so that if cloud providers decide they want to get in on the game three

01:23:49.420 --> 01:23:57.080
years from now, we've already had plenty of time to actually build a product to compete.

01:23:57.080 --> 01:23:59.680
Stay tuned for results as they come out.

01:23:59.680 --> 01:24:00.680
Thanks, Paul.

01:24:00.680 --> 01:24:01.680
We really appreciate you coming on the show.

01:24:01.680 --> 01:24:02.680
All right.

01:24:02.680 --> 01:24:03.680
Thanks, guys.

01:24:03.680 --> 01:24:07.240
Next, we're talking with Vicky Bressour.

01:24:07.240 --> 01:24:11.840
Vicky has been in free and open source software for 30 years now, and she's been working with

01:24:11.840 --> 01:24:15.780
startups and enterprises doing open source and free software business strategy for quite

01:24:15.780 --> 01:24:16.780
a while.

01:24:16.780 --> 01:24:22.400
We use Vicky's post titled Elastic Search and Kibana are now business risks as a reference

01:24:22.400 --> 01:24:23.640
on the situation.

01:24:23.640 --> 01:24:26.840
We even quoted her post a few times in our conversation with Heather Meeker.

01:24:26.840 --> 01:24:28.720
So naturally, we had a talk with her.

01:24:28.720 --> 01:24:29.720
Here we go.

01:24:29.720 --> 01:24:30.720
All right.

01:24:30.720 --> 01:24:31.720
So here is Vicky Bressour.

01:24:31.720 --> 01:24:37.320
And Vicky, share with us, first of all, your position in the open source world, like what's

01:24:37.320 --> 01:24:39.920
your angle at the conversation that we're having?

01:24:39.920 --> 01:24:40.920
Where are you coming from?

01:24:40.920 --> 01:24:44.400
I do corporate strategy around free and open source software.

01:24:44.400 --> 01:24:48.520
So I work with startups and enterprises and various organizations to help them be more

01:24:48.520 --> 01:24:53.440
successful by contributing, releasing and just generally becoming a good citizen of

01:24:53.440 --> 01:24:57.280
free and open source software communities in a way that's both good for their bottom

01:24:57.280 --> 01:24:59.480
line and for the communities.

01:24:59.480 --> 01:25:00.480
Okay.

01:25:00.480 --> 01:25:01.800
And you've been doing this for a while.

01:25:01.800 --> 01:25:02.800
Yeah, I have.

01:25:02.800 --> 01:25:05.860
I've been in free and open source software for over 30 years and I've been doing this

01:25:05.860 --> 01:25:08.960
specific thing for quite a while now.

01:25:08.960 --> 01:25:09.960
Awesome.

01:25:09.960 --> 01:25:11.880
Well, we're glad we got you on the show then.

01:25:11.880 --> 01:25:17.080
So you wrote a piece called Elastic Search and Kibana Are Now Business Risks, in which

01:25:17.080 --> 01:25:18.680
you lay out the case for that headline.

01:25:18.680 --> 01:25:20.880
Do you want to share that with our audience?

01:25:20.880 --> 01:25:24.440
Just the brief synopsis of why you believe that's the case with this server-side public

01:25:24.440 --> 01:25:25.440
license?

01:25:25.440 --> 01:25:28.880
Well, I mean, SSPL, I'm going to leave to the lawyers.

01:25:28.880 --> 01:25:31.560
This is a legal matter, but it is not an open source license.

01:25:31.560 --> 01:25:37.680
It is, however, being portrayed as open, which everybody is going to interpret as open source

01:25:37.680 --> 01:25:39.600
because that's just the way we speak about things.

01:25:39.600 --> 01:25:43.920
So I think that in and of itself is kind of deceptive and that's a problem.

01:25:43.920 --> 01:25:47.720
But the bigger problem is that this is a license change.

01:25:47.720 --> 01:25:52.720
And if you are going to use something, you are agreeing to that license.

01:25:52.720 --> 01:25:59.920
If you upgrade Elastic Search or Kibana to, I believe it was 7.11, if I recall, but if

01:25:59.920 --> 01:26:05.520
you upgrade, you are tacitly or otherwise you are agreeing to this new license, SSPL

01:26:05.520 --> 01:26:09.200
or Elastic License, it doesn't matter.

01:26:09.200 --> 01:26:12.960
You're agreeing to that and you're taking on new obligations for your company, for your

01:26:12.960 --> 01:26:13.960
organization.

01:26:13.960 --> 01:26:15.960
Are you aware of that?

01:26:15.960 --> 01:26:17.240
Do you know what you're taking on?

01:26:17.240 --> 01:26:21.440
Do you know the potential risks you might have or maybe there are benefits?

01:26:21.440 --> 01:26:23.240
I don't know.

01:26:23.240 --> 01:26:28.720
But this is not something that you as a company can afford to ignore because it can have huge

01:26:28.720 --> 01:26:31.040
ramifications to your code base.

01:26:31.040 --> 01:26:32.040
I see.

01:26:32.040 --> 01:26:34.320
So like the side swipe is a big problem.

01:26:34.320 --> 01:26:39.320
The fact that so many people might upgrade and unbeknownst to them, their agreement with

01:26:39.320 --> 01:26:44.440
the software that they're running and the companies involved has changed.

01:26:44.440 --> 01:26:47.040
Is there no transparency to that change?

01:26:47.040 --> 01:26:50.360
Is it not something that people are aware of or how does it play out?

01:26:50.360 --> 01:26:54.440
The only transparency really is going to be that blog post or I guess there's like two

01:26:54.440 --> 01:27:02.440
blog posts now with Elastic finger wagging at Amazon and also screwing over their entire

01:27:02.440 --> 01:27:04.280
community and ecosystem.

01:27:04.280 --> 01:27:06.800
But hey, that's their strategic decision to make.

01:27:06.800 --> 01:27:11.120
They seem to think that was the right move for them, more power to them.

01:27:11.120 --> 01:27:14.400
Yeah, that's really the only warning.

01:27:14.400 --> 01:27:16.360
You're otherwise not going to know.

01:27:16.360 --> 01:27:21.120
As far as I know, I haven't obviously looked at the code, but it doesn't make any sense

01:27:21.120 --> 01:27:28.100
that there be some sort of a new click through on Elasticsearch and Kibana, for instance.

01:27:28.100 --> 01:27:30.680
As you're installing them on your server, how are you going to confirm that?

01:27:30.680 --> 01:27:34.880
Yes, I have seen that there is a new license and yes, I agree with this new license.

01:27:34.880 --> 01:27:40.760
Nobody does that, not for open source software and especially not on the server side.

01:27:40.760 --> 01:27:45.600
So it's very likely people are going to upgrade and tacitly agree to this, whether they know

01:27:45.600 --> 01:27:50.880
it or not, or maybe they know about this new license and that they decide not to upgrade

01:27:50.880 --> 01:27:51.880
at all.

01:27:51.880 --> 01:27:58.400
Well, now you're not getting security updates to this software, to Elasticsearch, to Kibana.

01:27:58.400 --> 01:28:01.580
That's another potential risk to your company.

01:28:01.580 --> 01:28:06.520
Maybe you're using these things for free and a great deal of people build a lot of cool

01:28:06.520 --> 01:28:08.580
stuff on top of the ELK stack.

01:28:08.580 --> 01:28:14.440
There's a reason why there's an acronym that we all know, the ELK stack, it is that popular.

01:28:14.440 --> 01:28:18.120
So a lot of people are building on this and they might be building on the free version.

01:28:18.120 --> 01:28:21.720
Well, that free version is not going to get relicensed and you're going to be screwed,

01:28:21.720 --> 01:28:26.280
but if you are building a company on top of this open source software and your company

01:28:26.280 --> 01:28:31.740
relies upon it and you're not already paying for some sort of support, either from Elastic

01:28:31.740 --> 01:28:35.600
or someone else, you're also putting your company at risk in that way.

01:28:35.600 --> 01:28:40.960
So there's a lot of really important strategic things that people need to be considering

01:28:40.960 --> 01:28:46.280
when they are selecting open source software and you need to remain aware of your entire

01:28:46.280 --> 01:28:50.720
free and open source software supply chain, because as we are seeing right here, it can

01:28:50.720 --> 01:28:52.760
shift out from under you.

01:28:52.760 --> 01:28:57.400
You can have license changes, you can have security problems, you can have maintainers

01:28:57.400 --> 01:29:01.460
who just, you know, piece out and they go away and suddenly you're using something that's

01:29:01.460 --> 01:29:03.460
completely unmaintained.

01:29:03.460 --> 01:29:07.560
So there's a lot of risk there for a company and most companies I've worked with are completely

01:29:07.560 --> 01:29:12.000
unaware of this and it's potentially a disaster waiting to happen.

01:29:12.000 --> 01:29:22.600
I mean, as we all know, this is what happened with, oh, that credit reporting thing starts

01:29:22.600 --> 01:29:25.560
with an E. Equifax, Equifax.

01:29:25.560 --> 01:29:26.560
Thank you.

01:29:26.560 --> 01:29:30.040
Now, I've been saying Elastic so often, that's all I can think of.

01:29:30.040 --> 01:29:31.040
That's the only E in your brain.

01:29:31.040 --> 01:29:32.040
We're here for you.

01:29:32.040 --> 01:29:33.040
Exactly.

01:29:33.040 --> 01:29:34.040
Thank you, guys.

01:29:34.040 --> 01:29:38.600
Yeah, that was, Equifax was not paying attention to their open source software supply chain.

01:29:38.600 --> 01:29:42.800
You know, they had a piece of software in there, I believe it may have been Apache Struts

01:29:42.800 --> 01:29:48.160
or something like that, that had been upgraded to fix a security hole, but they hadn't bothered

01:29:48.160 --> 01:29:52.800
to upgrade it internally because they weren't paying that much attention then they got compromised

01:29:52.800 --> 01:29:55.840
and billions of people had their private information stolen.

01:29:55.840 --> 01:30:00.620
So if you're not paying attention to stuff like this, not only Elastic, but the larger

01:30:00.620 --> 01:30:04.800
picture, you are just one bad day away from being the next Equifax.

01:30:04.800 --> 01:30:07.000
Do you want to do that?

01:30:07.000 --> 01:30:12.640
Is there a right way that Elastic could have done this in terms of just forget the decision,

01:30:12.640 --> 01:30:15.920
the SSPL, but like, let's say I just want to change my license.

01:30:15.920 --> 01:30:19.000
Is there like a correct, do you have to start a new project with a new license?

01:30:19.000 --> 01:30:23.780
Is there like a best practices for changing a license that doesn't sweep out the rug from

01:30:23.780 --> 01:30:26.760
people potentially?

01:30:26.760 --> 01:30:32.000
For an open source project, there's obviously many different ways you can do it and Elastic

01:30:32.000 --> 01:30:36.640
has their perspective, which is going to come from a very corporate perspective.

01:30:36.640 --> 01:30:41.160
We're looking to make money and then the community will be coming from a different perspective.

01:30:41.160 --> 01:30:46.080
So it, you can have different approaches, but the one thing everyone should always do

01:30:46.080 --> 01:30:50.280
is be communicating with their community and their ecosystem.

01:30:50.280 --> 01:30:56.120
This caught everyone by surprise that shows that Elastic is not respecting the community

01:30:56.120 --> 01:31:00.920
and the people who have been contributing and who rely on this software.

01:31:00.920 --> 01:31:05.920
So they have essentially looked at their ecosystem and said, yeah, we don't care.

01:31:05.920 --> 01:31:12.480
We don't care what you're doing because all we want to do is screw over Amazon and collateral

01:31:12.480 --> 01:31:14.120
damage be damned.

01:31:14.120 --> 01:31:15.120
So they should have communicated.

01:31:15.120 --> 01:31:18.200
They should have told people this is going to be coming.

01:31:18.200 --> 01:31:24.200
Maybe they should have done it for instance, at a version 8.0 rather than version from

01:31:24.200 --> 01:31:27.200
7.10 to 7.11.

01:31:27.200 --> 01:31:28.200
Yeah.

01:31:28.200 --> 01:31:29.200
Go to a major version.

01:31:29.200 --> 01:31:31.360
Maybe that would have been smarter.

01:31:31.360 --> 01:31:34.440
Maybe cut a major version right there.

01:31:34.440 --> 01:31:35.980
Just do that.

01:31:35.980 --> 01:31:42.920
Maybe you could have forked it internally and start developing internally and then leave

01:31:42.920 --> 01:31:47.400
the open source project alone for other people to build upon.

01:31:47.400 --> 01:31:51.720
And you can even, you know, push stuff upstream and pull stuff downstream.

01:31:51.720 --> 01:31:58.440
You can still benefit from that while having your proprietary internally developed software.

01:31:58.440 --> 01:31:59.440
You can still do that.

01:31:59.440 --> 01:32:03.080
I mean, there's lots of different options they could have done, but the one thing they

01:32:03.080 --> 01:32:08.900
should have done and did not was communicate with their ecosystem, with their community.

01:32:08.900 --> 01:32:12.700
They popped this on everyone and it was kind of rude.

01:32:12.700 --> 01:32:18.120
They violated the trust of their community and that you can't really get that back at

01:32:18.120 --> 01:32:19.220
this point.

01:32:19.220 --> 01:32:25.000
So you kind of screwed the trust of your community and you've besmirched your brand, which is

01:32:25.000 --> 01:32:27.640
going to be incredibly difficult to fix.

01:32:27.640 --> 01:32:32.040
It's a somewhat too elastic credit and maybe I'm wrong by even saying this, but it seems

01:32:32.040 --> 01:32:33.800
that they've gone through a lot.

01:32:33.800 --> 01:32:38.640
When Shay had mentioned, the CTO of Elastic mentioned the litigation and the behind the

01:32:38.640 --> 01:32:44.480
scenes discussions, I think from the outside it might be easy to say screwed over.

01:32:44.480 --> 01:32:48.760
But the nuance there, I think, is they've gone through a lot and maybe they're in some

01:32:48.760 --> 01:32:53.640
ways quite wrong and reactionary, but I'd say in some ways at least depicted by these

01:32:53.640 --> 01:32:59.660
tweets and this post, maybe they went about it wrong, but their intention was to try to

01:32:59.660 --> 01:33:04.420
fix this problem, which is very difficult to fix because our permissive license does

01:33:04.420 --> 01:33:09.600
allow this competition and maybe from a business standpoint, they've sort of hit their links

01:33:09.600 --> 01:33:15.660
with being able to take that, in quotes, their quotes at least, abuse from Amazon and they're

01:33:15.660 --> 01:33:22.160
just trying to tread water to some degree with the scenario.

01:33:22.160 --> 01:33:26.120
I know that this is a podcast and so people can't see me, but picture me rolling my eyes

01:33:26.120 --> 01:33:28.120
right now.

01:33:28.120 --> 01:33:32.720
So the trademark thing aside, that's a different matter.

01:33:32.720 --> 01:33:36.040
That lawsuit for the trademark is a separate issue.

01:33:36.040 --> 01:33:43.360
If they are re-licensing as a reaction to that, then it's essentially them stamping

01:33:43.360 --> 01:33:47.080
their little princess foot, taking their ball and going home.

01:33:47.080 --> 01:33:55.280
And it's a childish reaction to a trademark infringement lawsuit, which I do think that

01:33:55.280 --> 01:33:59.840
they are, I mean, they were totally justified in that lawsuit for their trademark infringement

01:33:59.840 --> 01:34:00.840
against the Amazon.

01:34:00.840 --> 01:34:02.080
I have absolutely no problem with that.

01:34:02.080 --> 01:34:07.880
I do think that Amazon was rolling the dice on that one and they lost.

01:34:07.880 --> 01:34:12.560
And I think they will lose in that particular trademark thing, but I am not a lawyer.

01:34:12.560 --> 01:34:14.840
So that's just my, my education.

01:34:14.840 --> 01:34:15.840
Right.

01:34:15.840 --> 01:34:18.480
That's just your take.

01:34:18.480 --> 01:34:26.040
So but the re-licensing, you know, if they screwed up at the very beginning by not understanding

01:34:26.040 --> 01:34:31.760
what a permissive license allows and what that is, they screwed that up.

01:34:31.760 --> 01:34:37.360
They put it out there under a permissive Apache 2 license without thinking somebody can now

01:34:37.360 --> 01:34:42.200
build a better product offering on top of this very easily.

01:34:42.200 --> 01:34:47.040
And if they're building a better product offering than we are, I'm sorry, folks, we live in

01:34:47.040 --> 01:34:48.600
a capitalistic system.

01:34:48.600 --> 01:34:51.140
That's just the way these things go.

01:34:51.140 --> 01:34:57.120
It's your fault for releasing your intellectual property under that sort of license and not

01:34:57.120 --> 01:34:59.720
understanding what it's going to mean.

01:34:59.720 --> 01:35:06.240
And if you did understand not taking enough measures to make sure that even if that does

01:35:06.240 --> 01:35:08.280
happen, you can still be successful.

01:35:08.280 --> 01:35:12.080
And frankly, if you look at their numbers and their financials, they are doing quite

01:35:12.080 --> 01:35:13.180
well.

01:35:13.180 --> 01:35:15.820
So what are they looking to do?

01:35:15.820 --> 01:35:20.720
How are they going to looking to grab all these people who are using the Amazon ecosystem

01:35:20.720 --> 01:35:23.880
and move them over to Elasticsearch and to Elastic?

01:35:23.880 --> 01:35:27.920
I don't think that's going to happen from a market perspective.

01:35:27.920 --> 01:35:33.400
So I it's very difficult to see strategically why they thought this might have been a good

01:35:33.400 --> 01:35:39.840
move to just give their entire ecosystem the finger while trying to take a shot at Amazon.

01:35:39.840 --> 01:35:44.760
It just it kind of seems, I don't know, amateurish.

01:35:44.760 --> 01:35:47.480
And I would have expected better of a company that's been around for this long.

01:35:47.480 --> 01:35:51.640
So let's say I was a happy Elasticsearch user a month ago.

01:35:51.640 --> 01:35:52.640
And here I am today.

01:35:52.640 --> 01:35:54.520
And I'm like, Vicky, what do I do?

01:35:54.520 --> 01:35:56.040
They change the license on me.

01:35:56.040 --> 01:35:57.040
I don't know what to do.

01:35:57.040 --> 01:35:58.680
Do you say what do you say to that?

01:35:58.680 --> 01:36:03.320
Go to the Amazon fork or I will say, I don't know.

01:36:03.320 --> 01:36:04.320
It depends.

01:36:04.320 --> 01:36:07.560
Of course, I'm I have been known to do a fair bit of consulting.

01:36:07.560 --> 01:36:13.920
And so any consultant who isn't starting out with it depends is, you know, trying to sell

01:36:13.920 --> 01:36:14.920
you something.

01:36:14.920 --> 01:36:15.920
Right.

01:36:15.920 --> 01:36:16.920
So it totally depends.

01:36:16.920 --> 01:36:17.920
What are your needs?

01:36:17.920 --> 01:36:21.960
How much do you rely on that Elasticsearch or on that Kibana?

01:36:21.960 --> 01:36:25.420
We have to remember there are two really big projects here that have been re licensed.

01:36:25.420 --> 01:36:27.480
It's not just Elasticsearch.

01:36:27.480 --> 01:36:34.600
So what is the strategic value and the architectural value of that piece of software to your product,

01:36:34.600 --> 01:36:35.600
to your company?

01:36:35.600 --> 01:36:37.480
Look at that first.

01:36:37.480 --> 01:36:39.240
What is the niche it is filling?

01:36:39.240 --> 01:36:41.300
And then will anything else fill it?

01:36:41.300 --> 01:36:45.640
And it could be that as you evaluate this and you look at it, it makes sense to just

01:36:45.640 --> 01:36:48.320
pay Elastic for their software.

01:36:48.320 --> 01:36:49.320
Fine.

01:36:49.320 --> 01:36:50.320
That is a valid choice.

01:36:50.320 --> 01:36:52.120
And I support you doing that.

01:36:52.120 --> 01:36:57.520
I want your company to be successful, but you might also find that there are other alternatives.

01:36:57.520 --> 01:36:58.520
You might.

01:36:58.520 --> 01:37:03.840
There are a couple of forts now there is, as we all know, the, the thing that kicked

01:37:03.840 --> 01:37:08.960
all this off, which is Amazon's open distribution for Elasticsearch from the last time Elasticsearch

01:37:08.960 --> 01:37:13.320
did something kind of goofy in their open source world.

01:37:13.320 --> 01:37:19.840
And then there's, they have their new totally open distribution that Amazon just forked.

01:37:19.840 --> 01:37:25.600
And I think there's a third one, which is from log.io, something like that.

01:37:25.600 --> 01:37:28.880
There's at least one other version out there.

01:37:28.880 --> 01:37:30.280
There may be others.

01:37:30.280 --> 01:37:32.840
And maybe you don't need Elasticsearch at all.

01:37:32.840 --> 01:37:37.840
Maybe you just need Lucene, you know, if you're using Kibana, yeah, exactly.

01:37:37.840 --> 01:37:39.240
Maybe Grafana would be better for you.

01:37:39.240 --> 01:37:40.240
I don't know.

01:37:40.240 --> 01:37:42.560
It depends upon your needs.

01:37:42.560 --> 01:37:46.000
Don't go doing something just because it's what everyone else is doing.

01:37:46.000 --> 01:37:52.360
Look at your needs, your company, your architecture, your budgets, your staffing, who knows what

01:37:52.360 --> 01:37:55.280
software do you have to ramp up on something new?

01:37:55.280 --> 01:37:57.280
There's lots of variables in there.

01:37:57.280 --> 01:37:59.120
And so I can't give a one size fits all answer.

01:37:59.120 --> 01:38:02.320
I was hoping I could just ask you once and the whole community could just listen to you,

01:38:02.320 --> 01:38:05.960
you know, let's multicast the solution.

01:38:05.960 --> 01:38:06.960
Oh no.

01:38:06.960 --> 01:38:10.600
You know, there is no single solution to any of this sort of stuff because every one of

01:38:10.600 --> 01:38:12.680
these companies is going to be different.

01:38:12.680 --> 01:38:15.640
If they were all the same, then we wouldn't need them all, right?

01:38:15.640 --> 01:38:20.520
We we'd have one market, one company, boom, you're done, but we don't have one license,

01:38:20.520 --> 01:38:21.520
one license.

01:38:21.520 --> 01:38:22.880
Gosh, wouldn't that be?

01:38:22.880 --> 01:38:25.160
Oh my gosh, that would be so easy.

01:38:25.160 --> 01:38:26.160
So nice.

01:38:26.160 --> 01:38:27.160
But that's what we do.

01:38:27.160 --> 01:38:28.760
We wouldn't need a consultant at that point.

01:38:28.760 --> 01:38:30.920
Well, yeah, but I do corporate strategy.

01:38:30.920 --> 01:38:32.400
It's not simply about licensing.

01:38:32.400 --> 01:38:34.200
It's about so much more than that.

01:38:34.200 --> 01:38:35.200
That's just a tiny slipper.

01:38:35.200 --> 01:38:37.120
Well, Vicki, we want to respect your time.

01:38:37.120 --> 01:38:39.080
Is there anything else that you want to share that we didn't ask you?

01:38:39.080 --> 01:38:42.160
Any questions that you just want to put this out there that we haven't asked you a question

01:38:42.160 --> 01:38:43.160
to at least?

01:38:43.160 --> 01:38:44.160
No, not really.

01:38:44.160 --> 01:38:47.640
I think you've covered pretty much the highlights of the stuff and then it'll be interesting

01:38:47.640 --> 01:38:50.320
to see what others have to say.

01:38:50.320 --> 01:38:55.120
I don't typically listen to podcasts, but maybe I'll actually listen to this one.

01:38:55.120 --> 01:38:59.480
Well, you might hear me thank you at least once before I thank you right now for your

01:38:59.480 --> 01:39:00.480
time.

01:39:00.480 --> 01:39:03.440
But thank you really for your time and for this blog post that you shared.

01:39:03.440 --> 01:39:08.400
It was very helpful for us to sort of get a different perspective on these concerns

01:39:08.400 --> 01:39:09.400
around open source.

01:39:09.400 --> 01:39:12.840
I quoted a couple of things you'd mentioned in your blog post in the conversation with

01:39:12.840 --> 01:39:14.920
Heather Meeker, which is a part of the show too.

01:39:14.920 --> 01:39:17.200
But thank you for your post and also today.

01:39:17.200 --> 01:39:18.200
Thank you for your time.

01:39:18.200 --> 01:39:19.200
We appreciate it.

01:39:19.200 --> 01:39:20.200
Absolutely.

01:39:20.200 --> 01:39:24.260
Thanks, gang.

01:39:24.260 --> 01:39:30.700
Last up on this epic show is Markus Stinkvist, who self-describes as an everyday web developer

01:39:30.700 --> 01:39:31.700
from Sweden.

01:39:31.700 --> 01:39:32.700
Let's do this.

01:39:32.700 --> 01:39:36.360
Markus, please tell us who you are and your vantage point on the software world.

01:39:36.360 --> 01:39:37.360
Yeah.

01:39:37.360 --> 01:39:42.560
Well, I'm just a normal everyday web developer from Sweden.

01:39:42.560 --> 01:39:43.860
My name is Markus.

01:39:43.860 --> 01:39:47.240
So I work for a small company no one has heard of yet.

01:39:47.240 --> 01:39:48.240
Yet.

01:39:48.240 --> 01:39:49.240
There you go.

01:39:49.240 --> 01:39:50.560
Yeah, exactly.

01:39:50.560 --> 01:39:55.440
How did you first hear about the news of Elastic's re-licensing?

01:39:55.440 --> 01:39:57.480
Just curious, like where do you get your info?

01:39:57.480 --> 01:39:58.480
Yeah.

01:39:58.480 --> 01:40:03.800
Well, I read an article from Elastic on Hacker News.

01:40:03.800 --> 01:40:09.240
So I saw them posting like, this is not okay or something in those lines.

01:40:09.240 --> 01:40:10.240
Awesome.

01:40:10.240 --> 01:40:11.920
Well, we're gathering perspectives from all over the community.

01:40:11.920 --> 01:40:16.940
So it's awesome to have just a regular everyday web developer here on the show.

01:40:16.940 --> 01:40:17.940
So welcome.

01:40:17.940 --> 01:40:19.380
And yeah, what do you think?

01:40:19.380 --> 01:40:20.720
What are your thoughts on the whole situation?

01:40:20.720 --> 01:40:23.440
There's lots of nuance, lots of ins, lots of outs.

01:40:23.440 --> 01:40:24.440
Yeah, exactly.

01:40:24.440 --> 01:40:25.440
Exactly.

01:40:25.440 --> 01:40:32.400
I read a lot of comments and I read the Amazon article as well when they posted about like

01:40:32.400 --> 01:40:37.320
forking the report after they re-licensed Elastic.

01:40:37.320 --> 01:40:43.320
And I really don't even use Elastic or Amazon web services that much.

01:40:43.320 --> 01:40:48.400
But I think I care a lot about open source in general.

01:40:48.400 --> 01:40:49.640
So I'm with you.

01:40:49.640 --> 01:40:50.760
I don't use AWS.

01:40:50.760 --> 01:40:51.760
I don't use Elastic.

01:40:51.760 --> 01:40:53.260
I also care a lot about open source.

01:40:53.260 --> 01:40:57.640
What is it about open source that you like or that you care about and are trying to preserve

01:40:57.640 --> 01:40:59.400
or be a part of?

01:40:59.400 --> 01:41:00.400
That's a good question.

01:41:00.400 --> 01:41:08.560
I think it's a matter of fact that I can use stuff for free and like share with colleagues

01:41:08.560 --> 01:41:13.900
and people all around the world without any restrictions.

01:41:13.900 --> 01:41:18.260
No one is like can forbid me from using stuff which I want to use.

01:41:18.260 --> 01:41:23.760
So when you first heard about the re-license to the SSPL, what was your hot take?

01:41:23.760 --> 01:41:25.680
What was your emotional reaction?

01:41:25.680 --> 01:41:27.600
Were you indifferent?

01:41:27.600 --> 01:41:28.600
Were you mad at Elastic?

01:41:28.600 --> 01:41:32.100
Did it feel like it's no longer open source or do you still think it's still in the spirit

01:41:32.100 --> 01:41:34.000
of open source?

01:41:34.000 --> 01:41:40.840
Well, I think I'm actually very much on the Elastic side for me.

01:41:40.840 --> 01:41:46.280
I saw a lot of comments on hacking news that were like, oh, Amazon is all in their rights

01:41:46.280 --> 01:41:47.880
and yada yada.

01:41:47.880 --> 01:41:55.720
But they have actually done the same with MongoDB like two years ago, I guess, where

01:41:55.720 --> 01:42:06.840
they pushed them to basically re-license because they simply don't want to pay their fees.

01:42:06.840 --> 01:42:16.200
I think Amazon could be a bit more friendly towards those open source companies because

01:42:16.200 --> 01:42:22.440
right now when they just use their products for free and maybe they hurt the possibilities

01:42:22.440 --> 01:42:25.960
of future open source companies going forward.

01:42:25.960 --> 01:42:28.800
So if you were an Elastic user, Elasticsearch user?

01:42:28.800 --> 01:42:30.720
Yeah, I have been in the past.

01:42:30.720 --> 01:42:31.720
You have been.

01:42:31.720 --> 01:42:35.440
But if you were today, like when you read the re-license, you would have been pro-Elastic.

01:42:35.440 --> 01:42:41.640
This would not have concerned you or offended you or changed the way you looked at Elasticsearch.

01:42:41.640 --> 01:42:47.280
Well, I think it's sad that they have to do it, that they have to re-license, that they

01:42:47.280 --> 01:42:50.760
feel like they need to.

01:42:50.760 --> 01:42:57.000
And that's what makes me think that their move is kind of OK in a way, because I will

01:42:57.000 --> 01:43:03.040
still support them and I would rather use them than the fork created by Amazon.

01:43:03.040 --> 01:43:09.980
So the fork still exists under the new fork, which is created by Amazon and trying to carry

01:43:09.980 --> 01:43:11.920
on from that point forward.

01:43:11.920 --> 01:43:14.160
I think it still exists under the previous license.

01:43:14.160 --> 01:43:20.980
But you would continue with Elastic versus the Elasticsearch and Kibana forks that are

01:43:20.980 --> 01:43:23.040
run by AWS now.

01:43:23.040 --> 01:43:24.040
Exactly.

01:43:24.040 --> 01:43:30.200
And that's simply because I believe in their vision or I believe in their product.

01:43:30.200 --> 01:43:35.560
And I think Amazon is going to have a hard time keeping up or maybe they won't.

01:43:35.560 --> 01:43:36.560
I'm not sure.

01:43:36.560 --> 01:43:37.560
But time will tell on that.

01:43:37.560 --> 01:43:45.040
Time will tell, of course, but the same goes with MongoDB and their DocumentDB, I guess.

01:43:45.040 --> 01:43:51.640
I still think MongoDB is a superior choice just because it's their project and their

01:43:51.640 --> 01:43:52.880
vision.

01:43:52.880 --> 01:43:55.960
So you're not an open source purist then?

01:43:55.960 --> 01:43:56.960
Not at all.

01:43:56.960 --> 01:43:57.960
Not at all.

01:43:57.960 --> 01:43:58.960
Not at all.

01:43:58.960 --> 01:43:59.960
No.

01:43:59.960 --> 01:44:00.960
More pragmatic.

01:44:00.960 --> 01:44:01.960
More about free and open and available.

01:44:01.960 --> 01:44:05.240
Have you thought about any of the other licenses like the source available licenses?

01:44:05.240 --> 01:44:06.420
Are you cool with that?

01:44:06.420 --> 01:44:09.920
And these other things like business source licensing, surely these are things that you've

01:44:09.920 --> 01:44:12.080
read about being in the open source world.

01:44:12.080 --> 01:44:15.560
Are these things that you're also just like, whatever you want to license your code as,

01:44:15.560 --> 01:44:20.160
if I can use it for free and contribute back somehow, it's cool?

01:44:20.160 --> 01:44:21.880
Yeah, I think it's cool.

01:44:21.880 --> 01:44:24.740
Like every license is their own choice.

01:44:24.740 --> 01:44:30.460
If you want to license your work in a certain way, it's your choice.

01:44:30.460 --> 01:44:36.840
And if you want to share your work with others, that's just a positive thing.

01:44:36.840 --> 01:44:43.680
And I feel in this case, like Amazon is hurting the possibility to do that.

01:44:43.680 --> 01:44:44.680
Awesome.

01:44:44.680 --> 01:44:45.680
Any other thoughts?

01:44:45.680 --> 01:44:54.840
No, I think people that are on like Amazon side should maybe read an article from Frederik

01:44:54.840 --> 01:45:03.480
Larney or something like that, which is like on TechCrunch called AVS gives open source

01:45:03.480 --> 01:45:04.480
to middle finger.

01:45:04.480 --> 01:45:10.320
I think that's an article that sums up my views pretty well.

01:45:10.320 --> 01:45:11.320
Awesome.

01:45:11.320 --> 01:45:13.920
Hand that off to me and we'll include it in the show notes for everybody.

01:45:13.920 --> 01:45:14.920
Yeah, sure.

01:45:14.920 --> 01:45:17.080
Appreciate you hopping on and sharing your opinion with us.

01:45:17.080 --> 01:45:18.080
Yeah, thank you.

01:45:18.080 --> 01:45:19.080
All right.

01:45:19.080 --> 01:45:21.720
That was an epic episode.

01:45:21.720 --> 01:45:23.080
Thank you so much for tuning in.

01:45:23.080 --> 01:45:25.720
If you haven't heard yet, we have a membership.

01:45:25.720 --> 01:45:29.560
It's called change log plus plus because they want to increment things.

01:45:29.560 --> 01:45:31.600
It is better as they say.

01:45:31.600 --> 01:45:35.080
You can subscribe at change log dot com slash plus plus.

01:45:35.080 --> 01:45:41.700
Get closer to the metal, make the ads disappear and of course, support all of our podcasts

01:45:41.700 --> 01:45:45.040
again change log dot com slash plus plus.

01:45:45.040 --> 01:45:49.440
And of course, huge thanks to our partners Linode fastly and launch darkly.

01:45:49.440 --> 01:45:52.680
Also thanks to break master cylinder for making all of our awesome beats.

01:45:52.680 --> 01:45:54.360
And of course, thanks to you for listening.

01:45:54.360 --> 01:45:55.920
We appreciate your attention.

01:45:55.920 --> 01:45:57.600
We appreciate you listening.

01:45:57.600 --> 01:46:01.440
And one more step you could take is to join the community change log dot com slash community

01:46:01.440 --> 01:46:02.660
is free to join.

01:46:02.660 --> 01:46:04.080
Come hang with us in slack.

01:46:04.080 --> 01:46:08.580
Call this place your home change log dot com slash community.

01:46:08.580 --> 01:46:09.580
That's it for this week.

01:46:09.580 --> 01:46:36.560
We'll see you next week.

